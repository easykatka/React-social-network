{"version":3,"sources":["common/types/types.ts","app/api/api.ts","app/api/auth-api.ts","app/reducers/auth-reducer.ts","pages/LoginPage/login_styles.tsx","app/api/profile-api.ts","app/api/users-api.ts","app/reducers/profile-reducer.ts","common/posts.js","app/reducers/users-reducer.ts","app/reducers/app-reducer.ts","app/api/dialogs-api.ts","app/reducers/dialogs-reducer.ts","app/api/chat-api.ts","app/reducers/chat-reducer.ts","app/store.ts","pages/LoginPage/LoginPage.tsx","common/preloader2.js","common/assets/img/defaultAvatar.png","pages/UsersPage/UsersList/usersList_styles.tsx","components/FriendButton/FriendButton.tsx","pages/UsersPage/UsersList/UsersList.tsx","common/useDebounce.js","pages/UsersPage/UsersFilter/usersFilter_styles.tsx","pages/UsersPage/UsersFilter/UsersFilter.tsx","pages/UsersPage/Users.tsx","pages/ProfilePage/ProfileMain/profileMain_styles.tsx","pages/ProfilePage/ProfileMain/ProfileFriends/profileFriends_style.tsx","pages/ProfilePage/ProfileMain/ProfileFriends/ProfileFriends.tsx","common/randomArray.js","pages/ProfilePage/ProfileMain/ProfileAvatar/profileAvatar_styles.tsx","pages/ProfilePage/ProfileMain/ProfileAvatar/ProfileAvatar.tsx","pages/ProfilePage/ProfileMain/ProfileStatus/useStatus.js","pages/ProfilePage/ProfileMain/ProfileStatus/profileStatus_styles.tsx","pages/ProfilePage/ProfileMain/ProfileStatus/ProfileStatus.tsx","pages/ProfilePage/ProfileMain/ProfileMain.tsx","pages/ProfilePage/ProfileInfo/profileInfo_styles.tsx","pages/ProfilePage/ProfileInfo/ProfileInfo.tsx","pages/ProfilePage/ProfileInfo/ProfileEditForm/profileEditForm_style.tsx","pages/ProfilePage/ProfileInfo/ProfileEditForm/ProfileEditForm.tsx","common/dateHelper.js","pages/ProfilePage/ProfileWall/ProfilePost/profilePosts_styles.tsx","pages/ProfilePage/ProfileWall/ProfilePost/ProfilePosts.tsx","pages/ProfilePage/ProfileWall/profileWall_styles.tsx","pages/ProfilePage/ProfileWall/ProfileWall.tsx","pages/ProfilePage/profile_styles.tsx","pages/ProfilePage/ProfilePage.tsx","components/ChatInput/chatInput_styles.tsx","components/ChatInput/ChatInput.tsx","pages/MessangerPage/ChatMessages/ChatForm/ChatForm.tsx","pages/MessangerPage/ChatMessages/chatMessages_styles.tsx","pages/MessangerPage/ChatMessages/ChatMessages.tsx","common/assets/img/devs.jpg","components/ChatNavBar/chatNavBar_styles.tsx","components/ChatNavBar/ChatNavBar.tsx","pages/MessangerPage/privateMessages/PrivateForm/PrivateForm.tsx","pages/MessangerPage/privateMessages/privateMessages_styles.tsx","pages/MessangerPage/privateMessages/PrivateMessages.tsx","pages/MessangerPage/privateUserInfo/privateUserInfo_styles.tsx","pages/MessangerPage/privateUserInfo/PrivateUserInfo.tsx","pages/MessangerPage/ChatUsersList/chatUsersList_styles.tsx","pages/MessangerPage/ChatUsersList/ChatUsersList.tsx","pages/MessangerPage/MessengerPage.tsx","components/Header/header_styles.tsx","components/Header/Header.tsx","App.jsx","serviceWorker.js","index.tsx"],"names":["resultCodeEnum","instance","axios","create","withCredentials","baseURL","headers","login","email","password","rememberMe","authAPI","get","then","res","data","loginUserData","post","delete","authSlice","createSlice","name","initialState","id","isAuth","captchaUrl","errorMessage","reducers","setCaptchaUrl","state","action","payload","setauthUserData","setErrorMessage","actions","getAuthUserData","dispatch","a","response","resultCode","success","loginStyles","makeStyles","theme","root","padding","spacing","flexDirection","textAlign","margin","background","height","width","color","borderRadius","paddingBottom","icon","fontSize","captcha","error","profileAPI","userId","status","put","photo","formData","FormData","append","profile","usersAPI","currentPage","pageSize","searchTerm","friend","profileSlice","authUser","posts","body","date","likesCount","isLiked","isLoading","isError","setUserProfile","setUserStatus","setauthUser","setNewAvatar","photos","setUserFollowStatus","followed","setPost","push","setLike","item","idx","like","checked","setIsLoading","setIsError","getUserProfile","profileData","profileStatus","followStatus","getAuthUser","usersSlice","users","totalUsersCount","isFetching","followingInProgress","filter","setIsFetching","setUsers","setCurrentPage","setTotalUsersCount","toggleFollow","map","user","setFollowingInProgress","setPageSize","setFilter","appSlice","isInit","setInit","dialogsAPI","messageId","dialogsSlice","dialogs","messages","dialogsFetching","messagesFething","newMessagesCount","setDialogsFetching","setMessagesFetching","setDialogs","setMessages","items","setNewMessagesCount","setDeletedMessage","getNewMessagesCount","count","getMessages","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","message","send","chatSlice","messagesReceived","length","m","v1","index","array","statusChanged","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","store","configureStore","reducer","app","appReducer","usersReducer","chat","chatReducer","auth","authReducer","profileReducer","dialogsReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useDispatch","LoginPage","useSelector","classes","useFormik","initialValues","validationSchema","Yup","required","min","max","onSubmit","loginData","url","serverError","sendLogin","handleSubmit","handleChange","values","errors","touched","handleBlur","Grid","container","component","className","Typography","variant","TextField","label","onBlur","size","onChange","value","type","FormControlLabel","control","Checkbox","src","alt","Button","startIcon","Preloader2","usersList","overflowY","paddingLeft","card","backgroundColor","cardmedia","notfound","FriendButton","fullWidth","disabled","some","onClick","follow","UsersList","React","memo","xs","Card","CardActionArea","to","CardMedia","image","large","defaultAvatar","title","CardContent","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","usersFilter","display","alignItems","UsersFilter","debouncedSearchTerm","debouncedCurrentPage","page","totalCount","getUsers","event","target","FormControl","RadioGroup","row","aria-label","Radio","TablePagination","onChangePage","newPage","rowsPerPage","onChangeRowsPerPage","parseInt","Users","style","position","profileMain","fullName","fontWeight","wordBreak","friends","borderTop","paddingTop","friendButton","pmButton","profileFreinds","friendsWrapper","avatar","marginBottom","friendItemWrapper","palette","primary","main","friendsLabel","ProfileFriends","randomUsers","arr","len","sorted","slice","sort","Math","random","randomArray","justify","Avatar","profileAvatar","uploadButton","secondary","StyledBadge","withStyles","badge","top","right","Badge","ProfileAvatar","routerId","badgeContent","accept","files","file","htmlFor","IconButton","useStatus","editMode","setEditMode","userStatus","updateStatus","cursor","input","marginRight","minHeight","ProfileStatus","onStatusChange","deactivateMode","InputBase","autoFocus","endAdornment","ProfileMain","direction","toUpperCase","profileInfoStyles","maxWidth","justifyContent","descriptionLabel","ProfileInfo","setEditForm","isContacts","contacts","Object","find","i","aboutMe","lookingForAJobDescription","lookingForAJob","keys","key","href","profileEditForm","leftBlock","rightBlock","job","buttons","ProfileEditForm","putNewProfile","placeholder","rowsMax","multiline","labelPlacement","dateHelper","timeZone","ruTime","Date","getTime","currentTime","toLocaleTimeString","hour","minute","formatedDate","toLocaleDateString","currentDate","yesterdayDate","now","visibleDate","profilePosts","paddingRight","postWrapper","marginTop","ProfilePosts","small","FavoriteBorder","checkedIcon","Favorite","profileWall","wrapper","marginLeft","inputWrapper","ProfileWall","toJSON","resetForm","profileStyles","rightBlockWrapper","Alert","props","elevation","withRouter","match","authUserId","params","profileUserId","editForm","handleClose","Snackbar","open","autoHideDuration","onClose","severity","chatForm","ChatInput","inputProps","ChatForm","sendMessage","chatMessages","senderName","messageBody","messagesWrapper","ChatMessages","messagesEndRef","useRef","current","scrollIntoView","userName","ref","messengerNavBar","pmWrapper","chip","NavBadge","ChatNavBar","activeClassName","devs","Chip","clickable","PrivateForm","privateMessages","doneIcon","doneAllIcon","addedAt","messageContent","opacity","deleteIcon","messageTitle","PrivateMessages","recipient","senderId","viewed","privateUserInfo","PrivateUserInfo","lastUserActivityDate","chatUsersList","usersWrapper","boxShadow","paper","left","ChatUsersList","temp","overlap","anchorOrigin","vertical","horizontal","header","authUserWrapper","Header","toLocaleUpperCase","App","Container","exact","path","render","Boolean","window","location","hostname","createMuiTheme","log","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qKAAYA,E,2GCECC,E,OAAWC,EAAMC,OAAO,CACpCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAE,UAAW,0CCHjBC,EAAO,CACZC,MAAO,mBACPC,SAAU,SACVC,YAAY,GAGAC,EAAU,WAErB,OAAOV,EAASW,IAAT,WAA4CC,MAAK,SAACC,GAAD,OAASA,EAAIC,SAF1DJ,EAAU,SAIhBK,GACL,OAAOf,EAASgB,KAAwB,cAAeV,GAAOM,MAAK,SAACC,GAAD,OAASA,EAAIC,SALrEJ,EAAU,WAQrB,OAAOV,EAASiB,OAAT,cAAkDL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAR9DJ,EAAU,WAWrB,OAAOV,EAASW,IAAT,4BAA6DC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,SFnB1Ef,O,qBAAAA,I,iBAAAA,I,uBAAAA,M,KGMZ,IASamB,EAAYC,YAAY,CACpCC,KAAM,OACNC,aAXoB,CACpBC,GAAI,KACJf,MAAO,KACPD,MAAO,KACPiB,QAAQ,EACRC,WAAY,KACZC,aAAc,MAMdC,SAAU,CACTC,cAAe,SAACC,EAAOC,GAAaD,EAAMJ,WAAaK,EAAOC,SAC9DC,gBAAiB,SAACH,EAAOC,GACxB,OAAO,2BAAKD,GAAUC,EAAOC,UAE9BE,gBAAiB,SAACJ,EAAOC,GAAaD,EAAMH,aAAeI,EAAOC,Y,EAIDZ,EAAUe,QAA9DN,E,EAAAA,cAAeI,E,EAAAA,gBAAiBC,E,EAAAA,gBAwBlCE,EAAkB,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACb1B,IADa,QAC9B2B,EAD8B,QAEvBC,aAAevC,EAAewC,SAC1CJ,EAASJ,EAAgB,2BAAIM,EAASvB,MAAd,IAAmBS,QAAO,MAHf,2CAAN,uDAOhBL,IAAf,Q,kHCzDasB,EAAcC,aAAW,SAACC,GAAD,MAAY,CACjDC,KAAM,CACLC,QAASF,EAAMG,QAAQ,GACvBC,cAAe,SACfC,UAAW,SACXC,OAAQ,SACRC,WAAY,UACZC,OAAQ,OACRC,MAAO,IACPC,MAAO,QACPC,aAAc,GACd,MAAO,CAAEC,cAAeZ,EAAMG,QAAQ,KAEvCU,KAAM,CACLC,SAAU,GACVL,MAAO,OACPC,MAAO,WAERK,QACA,CACCT,OAAQ,SACRG,MAAO,SAERO,MAAO,CACNN,MAAO,W,QCtBIO,EAAa,SACdC,GACV,OAAO5D,EAASW,IAA4B,WAAaiD,GAAQhD,MAAK,SAACC,GAAD,OAASA,EAAIC,SAFxE6C,EAAa,SAIfC,GACT,OAAO5D,EAASW,IAAY,kBAAoBiD,GAAQhD,MAAK,SAACC,GAAD,OAASA,EAAIC,SAL/D6C,EAAa,SAOZE,GACZ,OAAO7D,EACL8D,IADK,kBACwC,CAAED,OAAQA,IACvDjD,MAAK,SAACC,GAAD,OAASA,EAAIC,SAVT6C,EAAa,SAYZI,GACZ,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClB/D,EAAS8D,IAAT,gBAAmDE,EAAU,CACnE3D,QAAS,CAAE,eAAgB,yBAE1BO,MAAK,SAACC,GAAD,OAASA,EAAIC,SAlBT6C,EAAa,SAoBTC,GACf,OAAO5D,EAASW,IAAT,iBAA6CiD,IAAUhD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SArBnE6C,EAAa,SAwBXQ,GACb,OAAOnE,EAAS8D,IAAT,UAA6CK,GAASvD,MAAK,SAACC,GAAD,OAASA,EAAIC,SCxBpEsD,EAAW,SACdC,EAAqBC,EAAkBC,EAAoBC,GACnE,OAAOxE,EAASW,IAAT,qBAA6C0D,EAA7C,kBAAkEC,EAAlE,iBAAmFC,EAAnF,mBAAwGC,IAC7G5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAHPsD,EAAW,SAKbR,GACT,OAAO5D,EAASgB,KAAT,iBAA8C4C,IAAUhD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SANpEsD,EAAW,SAQXR,GACX,OAAO5D,EAASiB,OAAT,iBAAgD2C,IAAUhD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCPtE2D,EAAetD,YAAY,CACvCC,KAAM,UACNC,aAAc,CACbqD,SAAU,GACVP,QAAS,GACTN,OAAQ,GACRc,MCZmB,CAAC,CACrBf,OAAQ,KACRgB,KAAM,eACNC,KAAM,WACNC,WAAY,GACZC,SAAS,GAEV,CACCnB,OAAQ,EACRgB,KAAM,iFACNC,KAAM,UACNC,WAAY,EACZC,SAAS,GAEV,CACCnB,OAAQ,KACRgB,KAAM,+JACNC,KAAM,WACNC,WAAY,GACZC,SAAS,IDNRC,WAAW,EACXC,QAAS,IAEVvD,SAAU,CACTwD,eAAgB,SAACtD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAgBF,EAAMuC,QAAUrC,GAC1DqD,cAAe,SAACvD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAgBF,EAAMiC,OAAS/B,GACxDsD,YAAa,SAACxD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAgBF,EAAM8C,SAAW5C,GACxDuD,aAAc,SAACzD,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAgBF,EAAM8C,SAASY,OAAS1D,EAAMuC,QAAQmB,OAASxD,GACvFyD,oBAAqB,SAAC3D,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAgBF,EAAMuC,QAAN,2BAAqBvC,EAAMuC,SAA3B,IAAoCqB,SAAU1D,KAC7F2D,QAAS,SAAC7D,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAClBF,EAAM+C,MAAMe,KAAK5D,IAElB6D,QAAS,SAAC/D,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACZ8D,EAAOhE,EAAM+C,MAAM7C,EAAQ+D,KACjCD,EAAKb,QAAUjD,EAAQgE,KAAKC,QAC5BjE,EAAQgE,KAAKC,UAAYH,EAAKd,aAAec,EAAKd,YAEnDkB,aAAc,SAACpE,EAAD,GAAuB,IAAdE,EAAa,EAAbA,QAAeF,EAAMoD,UAAYlD,GACxDmE,WAAY,SAACrE,EAAD,GAAuB,IAAdE,EAAa,EAAbA,QAAeF,EAAMqD,QAAUnD,M,GAIuF2C,EAAaxC,QAA3IgE,G,GAAAA,WAAYD,G,GAAAA,aAAcL,G,GAAAA,QAASF,G,GAAAA,QAASF,G,GAAAA,oBAAqBL,G,GAAAA,eAAgBC,G,GAAAA,cAAeC,G,GAAAA,YAAaC,G,GAAAA,aAE/Ga,GAAiB,SAAC5E,GAAD,8CAAgB,WAAOa,GAAP,mBAAAC,EAAA,sEAE5CD,EAAS6D,IAAa,IAFsB,SAGlBrC,EAAsBrC,GAHJ,cAGtC6E,EAHsC,gBAIhBxC,EAAqBrC,GAJL,cAItC8E,EAJsC,iBAKjBzC,EAA2BrC,GALV,QAKtC+E,EALsC,OAM5ClE,EAAS+C,GAAeiB,IACxBhE,EAASgD,GAAciB,IACvBjE,EAASoD,GAAoBc,IARe,kDAW5ClE,EAAS8D,GAAW,EAAD,KAXyB,yBAc5C9D,EAAS6D,IAAa,IAdsB,6EAAhB,uDAiBjBM,GAAc,SAAChF,GAAD,8CAAgB,WAAOa,GAAP,eAAAC,EAAA,sEACvBuB,EAAsBrC,GADC,OACpCR,EADoC,OAE1CqB,EAASiD,GAAYtE,IAFqB,2CAAhB,uDAuBZ2D,KAAf,QEzDa8B,GAAapF,YAAY,CACrCC,KAAM,QACNC,aAfoB,CACpBmF,MAAO,GACPlC,SAAU,IACVmC,gBAAiB,IACjBpC,YAAa,EACbqC,YAAY,EACZC,oBAAqB,GACrBC,OAAQ,CACPrC,WAAY,GACZC,OAAQ,SAQT9C,SAAU,CACTmF,cAAe,SAACjF,EAAOC,GAAaD,EAAM8E,WAAa7E,EAAOC,SAC9DgF,SAAU,SAAClF,EAAOC,GAAaD,EAAM4E,MAAQ3E,EAAOC,SACpDiF,eAAgB,SAACnF,EAAOC,GAAaD,EAAMyC,YAAcxC,EAAOC,SAChEkF,mBAAoB,SAACpF,EAAOC,GAAaD,EAAM6E,gBAAkB5E,EAAOC,SACxEmF,aAAc,SAACrF,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACvBF,EAAM4E,MAAQ5E,EAAM4E,MAAMU,KAAI,SAAAC,GAC7B,OAAIA,EAAK7F,KAAOQ,EAAkB,2BAAKqF,GAAZ,IAAkB3B,UAAW2B,EAAK3B,WACtD2B,MAGTC,uBAAwB,SAACxF,EAAD,GAAiD,IAAD,IAAtCE,QAAW4E,EAA2B,EAA3BA,WAAY9C,EAAe,EAAfA,OACxDhC,EAAM+E,oBAAsBD,EAAU,sBAAO9E,EAAM+E,qBAAb,CAAkC/C,IACrEhC,EAAM+E,oBAAoBC,QAAO,SAAAtF,GAAE,OAAIA,IAAOsC,MAElDyD,YAAa,SAACzF,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACtBF,EAAM0C,SAAWxC,EACjBF,EAAMyC,YAAc,GAErBiD,UAAW,SAAC1F,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACpBF,EAAMyC,YAAc,EACpBzC,EAAMgF,OAAN,2BAAoBhF,EAAMgF,QAAW9E,O,GAapCyE,GAAWtE,QARAqF,G,GAAAA,UACdP,G,GAAAA,eACAM,G,GAAAA,YACAR,G,GAAAA,cACAC,G,GAAAA,SACAE,G,GAAAA,mBACAC,G,GAAAA,aACAG,G,GAAAA,uBAmCcb,MAAf,QCtFagB,GAAWpG,YAAY,CACnCC,KAAM,MACNC,aAAc,CACbmG,QAAQ,GAET9F,SAAU,CACT+F,QAAS,SAAC7F,GACTA,EAAM4F,QAAS,MAMHC,GAAYF,GAAStF,QAArBwF,QAQAF,MAAf,QCxBaG,GAAa,WAExB,OAAO1H,EAASW,IAAT,YAAyBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAFrC4G,GAAa,SAKb9D,EAAgBgB,GAC3B,OAAO5E,EAASgB,KAAT,mBAAmD4C,EAAnD,aAAsE,CAAEgB,KAAMA,IAAQhE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SANlG4G,GAAa,SAQb9D,GACX,OAAO5D,EAASW,IAAT,mBAA0CiD,EAA1C,cAA6DhD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SATzE4G,GAAa,WAexB,OAAO1H,EAASW,IAAT,+BAAiEC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAf7E4G,GAAa,SAoBXC,GACb,OAAO3H,EAASiB,OAAT,4BAA2D0G,EAA3D,WACJ/G,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCXR8G,GAAezG,YAAY,CACvCC,KAAM,UACNC,aAVoB,CACpBwG,QAAS,GACTC,SAAU,GACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAkB,MAMlBvG,SAAU,CACTwG,mBAAoB,SAACtG,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAAgBF,EAAMmG,gBAAkBjG,GACtEqG,oBAAqB,SAACvG,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC9BF,EAAMoG,gBAAkBlG,GAEzBsG,WAAY,SAACxG,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACrBF,EAAMiG,QAAU/F,GAEjBuG,YAAa,SAACzG,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACtBF,EAAMkG,SAAWhG,EAAQwG,OAE1BC,oBAAqB,SAAC3G,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC9BF,EAAMqG,iBAAmBnG,GAE1B0G,kBAdS,SAcS5G,EAdT,GAc8B,IAAZE,EAAW,EAAXA,QAC1BF,EAAMkG,SAAWlG,EAAMkG,SAASlB,QAAO,SAAAhB,GAAI,OAAIA,EAAKtE,KAAOQ,S,GAM8D8F,GAAa3F,QAA1HuG,G,GAAAA,kBAAmBD,G,GAAAA,oBAAqBJ,G,GAAAA,oBAAqBD,G,GAAAA,mBAAoBE,G,GAAAA,WAAYC,G,GAAAA,YAE/FI,GAAsB,yDAAM,WAAOtG,GAAP,eAAAC,EAAA,sEACpBsF,KADoB,OAClCgB,EADkC,OAExCvG,EAASoG,GAAoBG,IAFW,2CAAN,uDAWtBC,GAAc,SAACrH,GAAD,8CAAgB,WAAOa,GAAP,iBAAAC,EAAA,6DAC1CD,EAASgG,IAAoB,IADa,SAEnBT,GAAuBpG,GAFJ,cAEpCe,EAFoC,OAG1CF,EAASgG,IAAoB,IAC7BhG,EAASkG,GAAYhG,IAJqB,SAMvBqF,KANuB,OAMpC5G,EANoC,OAO1CqB,EAASiG,GAAWtH,IAPsB,4CAAhB,uDAwBZ8G,MAAf,QC3EMgB,GAAa,CACf,oBAAqB,GACrB,iBAAkB,IAGlBC,GAAuB,KAGrBC,GAAe,WACjBC,GAA6B,WAC7BC,WAAWC,GAAe,MAExBC,GAAiB,SAACC,GACpB,IAAMC,EAAcC,KAAKC,MAAMH,EAAErI,MACjC8H,GAAW,qBAAqBW,SAAQ,SAAAC,GAAC,OAAIA,EAAEJ,OAE7CK,GAAc,WAChBV,GAA6B,UAE3BW,GAAe,WACjBX,GAA6B,SAC7BY,QAAQjG,MAAM,iBAEZkG,GAAU,WAAO,IAAD,QAChB,QAAF,EAAAf,UAAA,SAAIgB,oBAAoB,QAASf,IAC/B,QAAF,EAAAD,UAAA,SAAIgB,oBAAoB,UAAWX,IACjC,QAAF,EAAAL,UAAA,SAAIgB,oBAAoB,OAAQJ,IAC9B,QAAF,EAAAZ,UAAA,SAAIgB,oBAAoB,QAASH,KAE/BX,GAA+B,SAAClF,GAClC+E,GAAW,kBAAkBW,SAAQ,SAAAC,GAAC,OAAIA,EAAE3F,OAGhD,SAASoF,KAAiB,IAAD,EACrBW,KACE,QAAF,EAAAf,UAAA,SAAIiB,QACJjB,GAAK,IAAIkB,UAAU,gEACnBhB,GAA6B,WAC7BF,GAAGmB,iBAAiB,QAASlB,IAC7BD,GAAGmB,iBAAiB,UAAWd,IAC/BL,GAAGmB,iBAAiB,OAAQP,IAC5BZ,GAAGmB,iBAAiB,QAASN,IAI1B,IAAMO,GAAU,WAEfhB,MAFKgB,GAAU,WAIX,IAAD,EACHrB,GAAW,qBAAuB,GAClCA,GAAW,kBAAoB,GAC/BgB,KACE,QAAF,EAAAf,UAAA,SAAIiB,SARCG,GAAU,SAUTC,EAA4BC,GAGlC,OADAvB,GAAWsB,GAAWxE,KAAKyE,GACpB,WAEHvB,GAAWsB,GAAatB,GAAWsB,GAAWtD,QAAO,SAAA4C,GAAC,OAAIA,IAAMW,OAf/DF,GAAU,SAkBPC,EAA4BC,GAEpCvB,GAAWsB,GAAatB,GAAWsB,GAAWtD,QAAO,SAAA4C,GAAC,OAAIA,IAAMW,MApB3DF,GAAU,SAsBPG,GAAkB,IAAD,EACvB,QAAF,EAAAvB,UAAA,SAAIwB,KAAKD,I,UC5DJE,GAAYnJ,YAAY,CACpCC,KAAM,OACNC,aAAc,CACbyG,SAAU,GACVjE,OAAQ,WAETnC,SAAU,CACT6I,iBAAkB,SAAC3I,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACvBF,EAAMkG,SAAS0C,QAAU1I,EAAQ0I,SAAU5I,EAAMkG,SAAW,sBAAIlG,EAAMkG,UAAV,YAAuBhG,EAAQoF,KAAI,SAACuD,GAAD,mBAAC,eAAiBA,GAAlB,IAAqBnJ,GAAIoJ,sBAC1H9D,QAAO,SAAC6D,EAAGE,EAAOC,GAAX,OAAqBD,GAASC,EAAMJ,OAAS,SAEvDK,cAAe,SAACjJ,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QACxBF,EAAMiC,OAAS/B,M,GAMiCwI,GAAUrI,QAA9CsI,G,GAAAA,iBAAkBM,G,GAAAA,cAE7BC,GAAwE,KAGtEC,GAA2B,SAAC5I,GAMjC,OAL2B,OAAvB2I,KACHA,GAAqB,SAAChD,GACrB3F,EAASoI,GAAiBzC,MAGrBgD,IAGJE,GAA+D,KAG7DC,GAA8B,SAAC9I,GAMpC,OAL8B,OAA1B6I,KACHA,GAAwB,SAACnH,GACxB1B,EAAS0I,GAAchH,MAGlBmH,IAoBOV,MAAf,QC5DMY,GAAQC,YAAe,CAC5BC,QAAS,CACRC,IAAKC,GACL9E,MAAO+E,GACPC,KAAKC,GACLC,KAAMC,EACNxH,QAASyH,GACT/D,QAASgE,IAGVC,WAAY,SAACC,GAAD,OACTA,EAAqB,CACnBC,mBAAmB,OAMZC,GAAiB,kBAAMC,eACrBhB,MChBFiB,GAAsB,WAAO,IAAD,EACHC,aAAY,SAACxK,GAAD,OAAsBA,EAAM8J,QAArElK,EADgC,EAChCA,WAAYC,EADoB,EACpBA,aACdU,EAAW8J,KACXI,EAAU7J,IAHwB,EAIoC8J,YAAU,CACrFC,cAAe,CACdhM,MAAO,GACPC,SAAU,GACVC,YAAY,EACZgD,QAAS,IAEV+I,iBAAkBC,IAAW,CAC5BlM,MAAOkM,MAAalM,MAAM,yBAAyBmM,SAAS,YAC5DlM,SAAUiM,MACRE,IAAI,EAAG,8CACPC,IAAI,GAAI,gDACRF,SAAS,cAEZG,SAAU,SAAC9L,GACVoB,EbQsB,SAACpB,GAAD,8CAAkC,WAAOoB,GAAP,iBAAAC,EAAA,sEAClC1B,EAAcK,GADoB,QACpD+L,EADoD,QAE5CxK,aAAevC,EAAewC,QAC3CJ,EAASD,MAEL4K,EAAUxK,aAAevC,EAAe0D,SAC3CtB,EAhBuB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,sEACT1B,IADS,gBACvBqM,EADuB,EACvBA,IACR5K,EAASR,EAAcoL,IAFQ,2CAAN,uDAkBlBC,EAAcF,EAAUhF,SAAS0C,OAAS,EAAIsC,EAAUhF,SAAS,GAAK,aAC5E3F,EAASH,EAAgBgL,KATgC,2CAAlC,sDaRbC,CAAUlM,OAfbmM,EAJgC,EAIhCA,aAAcC,EAJkB,EAIlBA,aAAcC,EAJI,EAIJA,OAAQC,EAJJ,EAIIA,OAAQC,EAJZ,EAIYA,QAASC,EAJrB,EAIqBA,WAkB7D,OACC,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOb,SAAUK,EAAcS,UAAWtB,EAAQ1J,KAA5E,UACC,cAAC,IAAD,CAAegL,UAAWtB,EAAQ9I,OAClC,cAACqK,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWtB,EAAQ3I,MAA5C,SACEjC,IAEF,cAACqM,EAAA,EAAD,CAAWC,MAAM,QAAQC,OAAQT,EAAYU,KAAK,QAAQC,SAAUf,EAAc7L,GAAG,QAAQF,KAAK,QAAQ+M,MAAOf,EAAO7M,QACvH8M,EAAO9M,OAAS+M,EAAQ/M,OAAS,qBAAKoN,UAAWtB,EAAQ3I,MAAxB,SAAgC2J,EAAO9M,QACzE,cAACuN,EAAA,EAAD,CACCC,MAAM,WACNC,OAAQT,EACRU,KAAK,QACLG,KAAK,WACLF,SAAUf,EACVU,QAAQ,WACRvM,GAAG,WACHF,KAAK,WACL+M,MAAOf,EAAO5M,WAEd6M,EAAO7M,UAAY8M,EAAQ9M,UAAY,qBAAKmN,UAAWtB,EAAQ3I,MAAxB,SAAgC2J,EAAO7M,WAC/E,cAAC6N,EAAA,EAAD,CACCC,QAAS,cAACC,EAAA,EAAD,CAAUxI,QAASqH,EAAO3M,WAAYyN,SAAUf,EAAc/L,KAAK,aAAagC,MAAM,YAC/F2K,MAAM,gBAENvM,GACA,qCACC,qBAAKmM,UAAWtB,EAAQ5I,QAAS+K,IAAKhN,EAAY2B,MAAM,QAAQsL,IAAI,YACpE,cAACX,EAAA,EAAD,CACCC,MAAM,UACNC,OAAQT,EACRW,SAAUf,EACV7L,GAAG,UACH2M,KAAK,QACL7M,KAAK,UACL+M,MAAOf,EAAO3J,aAIjB,cAACiL,EAAA,EAAD,CAAQb,QAAQ,YAAYc,UAAW,cAAC,IAAD,IAAuBV,KAAK,QAAQG,KAAK,SAAShL,MAAM,UAA/F,oBAGA,mUACA,+DC1EUwL,I,OAAa,WACzB,OACD,sBAAKjB,UAAU,YAAf,UACC,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,sBCTD,OAA0B,0C,iDCE5BkB,GAAYpM,aAAW,SAACC,GAAD,MAAY,CAC/CtB,KAAM,CACLgC,MAAO,QACPI,SAAU,GACVT,UAAW,UAEZJ,KAAM,CACLmM,UAAW,SACX3L,MAAO,OACPD,OAAQ,IACR6L,YAAa,IAEdC,KAAM,CACL9L,OAAQ,IACR+L,gBAAgB,OAEhB,WAAY,CACXhM,WAAY,gDAGdiM,UAAW,CACVhM,OAAQ,IAETiM,SAAS,CACR/L,MAAO,QACNL,UAAW,SACXS,SAAU,GACVR,OAAQ,cClBEoM,GAAiC,SAAC,GAAsB,IAApB9N,EAAmB,EAAnBA,GAAIkE,EAAe,EAAfA,SAC9CmB,EAAsByF,aAAY,SAACxK,GAAD,OAAsBA,EAAM4E,MAAMG,uBACpExE,EAAW+J,cACjB,OACC,cAACwC,EAAA,EAAD,CACCtL,MAAOoC,EAAW,YAAc,UAChC6J,WAAS,EACTxB,QAAQ,YACRyB,SAAU3I,EAAoB4I,MAAK,SAAC3J,GAAD,OAAUA,IAAStE,KACtDkO,QAAS,WX2Dc,IAAC5L,EAAe6L,EW1DtCtN,GX0DuByB,GW1DFtC,EX0DiBmO,EW1DbjK,EX2D5B,uCAAO,WAAOrD,GAAP,iBAAAC,EAAA,yDACND,EAASiF,GAAuB,CAAEV,YAAY,EAAM9C,YAClC6L,EAFZ,gCAE2BrL,EAAmBR,GAF9C,0DAE8DQ,EAAqBR,GAFnF,kCAEAvB,EAFA,eAGqBsB,EAA2BC,GAHhD,QAGAyC,EAHA,OAIsB,IAAxBhE,EAASC,aACZH,EAAS8E,GAAarD,IACtBzB,EAASoD,GAAoBc,KAE9BlE,EAASiF,GAAuB,CAAEV,YAAY,EAAO9C,YAR/C,4CAAP,yDWjEC,SAQE4B,EAAW,WAAa,YCRfkK,GAAiCC,IAAMC,MAAK,YAA4B,IAAzBpJ,EAAwB,EAAxBA,MAAOE,EAAiB,EAAjBA,WAC5D2F,EAAUwC,KAChB,OAAOnI,EACN,cAAC,GAAD,IAEC,eAAC8G,EAAA,EAAD,CAAMC,WAAS,EAAC5K,QAAS,EAAG8K,UAAWtB,EAAQ1J,KAA/C,UACmB,IAAjB6D,EAAMgE,QAAgB,qBAAKmD,UAAWtB,EAAQ8C,SAAxB,4BACtB3I,GACAA,EACEU,KAAI,SAACC,GAAD,OACJ,cAACqG,EAAA,EAAD,CAAM5H,MAAI,EAACiK,GAAI,EAAf,SACC,eAACC,GAAA,EAAD,WACC,qBAAKnC,UAAWtB,EAAQ2C,KAAxB,SACC,cAACe,GAAA,EAAD,UACC,eAAC,KAAD,CAASC,GAAI,YAAc7I,EAAK7F,GAAhC,UACC,cAAC2O,GAAA,EAAD,CACCtC,UAAWtB,EAAQ6C,UACnBgB,OAAW,OAAJ/I,QAAI,IAAJA,OAAA,EAAAA,EAAM7B,OAAO6K,QAASC,GAC7BC,MAAM,eAEP,cAACC,GAAA,EAAD,UACC,sBAAM3C,UAAWtB,EAAQjL,KAAzB,gBAAgC+F,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAM/F,gBAK1C,cAAC,GAAD,CAAcE,GAAI6F,EAAK7F,GAAIkE,SAAU2B,EAAK3B,eAhBrB2B,EAAK7F,a,iDCvBtBiP,GAAc,SAACpC,EAAOqC,GAAU,MAECC,mBAAStC,GAFV,oBAEpCuC,EAFoC,KAEpBC,EAFoB,KAW3C,OARAC,qBAAU,WACR,IAAMC,EAAU7H,YAAW,WACzB2H,EAAkBxC,KACjBqC,GACH,OAAO,WACLM,aAAaD,MAEd,CAAC1C,EAAOqC,IACJE,GCXIK,GAActO,aAAW,SAACC,GAAD,MAAY,CACjDC,KAAM,CACLqO,QAAS,OACTlO,cAAe,SACfmO,WAAY,SACZrO,QAAS,QCGEsO,GAAwB,WAAO,IAAD,EACiB9E,aAAY,SAACxK,GAAD,OAAsBA,EAAM4E,SAA3FnC,EADkC,EAClCA,YAAaC,EADqB,EACrBA,SAAUmC,EADW,EACXA,gBAAiBG,EADN,EACMA,OAC1CyF,EAAU0E,KACV5O,EAAW+J,cACXiF,EAAsBZ,GAAY3J,EAAOrC,WAAY,KACrD6M,EAAuBb,GAAYlM,EAAa,KAEtDuM,qBAAU,WACTzO,Ef0CsB,SAACkP,EAAa/M,EAAiBC,EAAmBC,GACzE,8CAAO,WAAOrC,GAAP,eAAAC,EAAA,6DACND,EAAS0E,IAAc,IACvB1E,EAAS4E,GAAesK,IAFlB,SAGajN,EAAkBiN,EAAO,EAAG/M,EAAUC,EAAYC,GAH/D,OAGA1D,EAHA,OAINqB,EAAS0E,IAAc,IACvB1E,EAAS2E,GAAShG,EAAKwH,QACvBnG,EAAS6E,GAAmBlG,EAAKwQ,aAN3B,2CAAP,sDe3CUC,CAASH,EAAsB9M,EAAU6M,EAAqBvK,EAAOpC,WAC5E,CAACrC,EAAUiP,EAAsB9M,EAAU6M,EAAqBvK,EAAOpC,SAS1E,OACC,eAACgJ,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWtB,EAAQ1J,KAAnC,UACC,cAACmL,EAAA,EAAD,CAAWC,MAAM,gBAChBG,SAAU,SAACsD,GACVrP,EAASmF,GAAU,CAAE/C,WAAYiN,EAAMC,OAAOtD,UAE/C7M,GAAG,aACHF,KAAK,aACL+M,MAAOvH,EAAOrC,aACf,cAACmN,GAAA,EAAD,CAAahE,UAAU,WAAvB,SACC,cAACiE,GAAA,EAAD,CAAYC,KAAG,EAACC,aAAW,WAC1BzQ,KAAK,WACL+M,MAAOvH,EAAOpC,OACd0J,SAAU,SAAC/E,GAAD,OAA4ChH,EAASmF,GAAU,CAAE9C,OAAQ2E,EAAEsI,OAAOtD,UAH7F,SAhBiB,CACnB,CAAEA,MAAO,OAAQJ,MAAO,OACxB,CAAEI,MAAO,OAAQJ,MAAO,WACxB,CAAEI,MAAO,QAASJ,MAAO,mBAiBT7G,KAAI,SAACtB,GACjB,OACC,cAACyI,EAAA,EAAD,CACCF,MAAOvI,EAAKuI,MACZG,QAAS,cAACwD,GAAA,EAAD,CAAO7D,KAAK,QAAQ7K,MAAM,YACnC2K,MAAOnI,EAAKmI,OAHUnI,EAAKmI,cAShC,cAACgE,GAAA,EAAD,CACCrE,UAAU,MACVhF,MAAOjC,EACP4K,KAAMhN,EACN2N,aAAc,SAAC7I,EAAG8I,GAAsB9P,EAAS4E,GAAekL,KAChEC,YAAa5N,EACb6N,oBAAqB,SAACX,GAAiDrP,EAASkF,GAAY+K,SAASZ,EAAMC,OAAOtD,MAAO,aCvDhHkE,GAAQ,WAAO,IAAD,EACIjG,aAAY,SAACxK,GAAD,OAAqBA,EAAM4E,SAA7DA,EADkB,EAClBA,MAAOE,EADW,EACXA,WACf,OACC,yCAAG,sBAAK4L,MAAO,CAACrP,WAAY,UAAUI,aAAa,oBAAoBH,OAAO,IAAIqP,SAAS,YAAxF,UACF,cAAC,GAAD,IACA,cAAC7C,GAAD,CAAWlJ,MAAOA,EAAOE,WAAYA,W,SCR3B8L,GAAc/P,aAAW,SAACC,GAAD,MAAY,CAEjDC,KAAM,CACLM,WAAY,UACZG,MAAO,QACPC,aAAc,aACdH,OAAQ,IACR+N,WAAY,SACZrO,QAAS,IAGV6P,SAAU,CACTC,WAAY,IACZlP,SAAU,GACVT,UAAW,SACX4P,UAAW,aAEZC,QAAS,CACRC,UAAW,iBACXC,WAAY,EACZ3P,MAAO,QAER4P,aAAc,CACb/P,OAAQ,GACRG,MAAO,KAGR6P,SAAU,CACThQ,OAAQ,GACRI,MAAO,QAEPD,MAAO,S,UC/BI8P,GAAiBxQ,aAAW,SAACC,GAAD,MAAa,CACrDwQ,eAAgB,CACflQ,OAAQ,SACRiO,WAAY,cAEb7P,KAAM,CACL2B,UAAW,SACX4P,UAAW,cAEZQ,OAAQ,CACPhQ,MAAO,GACPD,OAAQ,GACRkQ,aAAa,IAEdC,kBAAmB,CAClBjQ,MAAO,OACPR,QAAS,GACTE,cAAe,SACfmO,WAAY,SACZ,UAAW,CACV7N,MAAOV,EAAM4Q,QAAQC,QAAQC,OAG/BC,aAAc,CACbrQ,MAAO,OACPL,UAAW,SACXS,SAAU,GACVkP,WAAY,SCjBDgB,GAA2B/D,IAAMC,MAAK,WAClD,IAAMpJ,EAAQ4F,aAAY,SAACxK,GAAD,OAAsBA,EAAM4E,MAAMA,SACtDmN,ECboB,SAACC,EAAMC,GACjC,IAAMC,EAASF,EAAIG,QAAQC,MAAK,kBAAMC,KAAKC,SAAW,MAEtD,OADAJ,EAAOtJ,OAASqJ,EACTC,EDUaK,CAAY3N,EAAO,GACjCrE,EAAW8J,KAEjB0D,IAAMiB,WAAU,WnBsDS,IAACpM,EmBtDFrC,GnBsDEqC,EmBtDkB,OnBuD5C,uCAAO,WAAOrC,GAAP,eAAAC,EAAA,6DACND,EAAS0E,IAAc,IADjB,SAEazC,EAAkB,EAAG,IAAK,GAAII,GAF3C,OAEA1D,EAFA,OAGNqB,EAAS2E,GAAShG,EAAKwH,QACvBnG,EAAS0E,IAAc,IAJjB,2CAAP,0DmBtDG,IACH,IAAMwF,EAAU4G,KAChB,OACC,eAACzF,EAAA,EAAD,CAAMC,WAAS,EAAC2G,QAAQ,SAAxB,UACC,oBAAGzG,UAAWtB,EAAQoH,aAAtB,uBAA8C,cAAC,KAAD,CAAMjE,QAAS,kBAAMrN,EAASmF,GAAU,CAAE9C,OAAQ,WAAYwL,GAAE,SAAhE,SAA6ExJ,EAAMgE,SAAjI,OACA,cAACgD,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWtB,EAAQ6G,eAAnC,SACES,EAAYzM,KAAI,SAACtB,GAAD,aAChB,cAAC4H,EAAA,EAAD,CAAM5H,MAAI,EAACiK,GAAI,EAAf,SACC,cAAC,KAAD,CAAMG,GAAE,mBAAcpK,EAAKtE,IAA3B,SACC,eAACkM,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWtB,EAAQgH,kBAAnC,UACC,8BACC,cAACgB,GAAA,EAAD,CAAQ1G,UAAWtB,EAAQ8G,OAAQ3E,IAAG,UAAE5I,EAAKN,cAAP,aAAE,EAAa6K,UAEtD,qBAAKxC,UAAWtB,EAAQjL,KAAxB,SAA+BwE,EAAKxE,aANhBwE,EAAKtE,e,iDEvBpBgT,GAAgB7R,aAAW,SAACC,GAAD,MAAY,CACnDyQ,OAAQ,CACPhQ,MAAO,IACPD,OAAQ,KAETqR,aAAc,CACb,UAAW,CACVnR,MAAOV,EAAM4Q,QAAQkB,UAAUhB,WAKrBiB,GAAcC,cAAW,SAAChS,GAAD,MAAY,CACjDiS,MAAO,CACN1F,gBAAiB,cACjBsD,SAAU,WACVqC,IAAK,IACLC,MAAO,MALkBH,CAOvBI,MCNSC,GAAqCpF,IAAMC,MAAK,YAA4B,IAAD,IAAxBzL,EAAwB,EAAxBA,QAAS6Q,EAAe,EAAfA,SAClE3I,EAAUiI,KACVnS,EAAW8J,KACjB,OACC,mCACG+I,EAsBA,cAACX,GAAA,EAAD,CAAQ1G,UAAWtB,EAAQ8G,OAAQ1E,IAAI,YAAYD,IAAG,UAAErK,EAAQmB,cAAV,aAAE,EAAgB6K,QArBzE,cAACsE,GAAD,CACCQ,aACC,qCACC,uBACCC,OAAO,UACP5T,GAAG,wBACH8M,KAAK,OACLkE,MAAO,CAAEtB,QAAS,QAClB9C,SAAU,SAAC/E,GAAD,OAAOA,EAAEsI,OAAO0D,OAAShT,GxB8BdiT,EwB9BoCjM,EAAEsI,OAAO0D,MAAM,GxB8BpD,uCAAgB,WAAOhT,GAAP,eAAAC,EAAA,sEACxBuB,EAAwByR,GADA,QACrCtU,EADqC,QAElCwB,aAAevC,EAAewC,SACtCJ,EAASkD,GAAavE,EAAKA,KAAKwE,SAHU,2CAAhB,4DAAC8P,KwB5BtB,uBAAOC,QAAQ,wBAAf,SACC,cAACC,GAAA,EAAD,CAAYlS,MAAM,UAAUuK,UAAWtB,EAAQkI,aAAc7G,UAAU,OAAvE,SACC,cAAC,KAAD,WAKJtK,MAAM,YAjBP,SAkBC,cAACiR,GAAA,EAAD,CAAQ1G,UAAWtB,EAAQ8G,OAAQ1E,IAAI,YAAYD,IAAG,UAAErK,EAAQmB,cAAV,aAAE,EAAgB6K,e,yECjChEoF,GAAY,WAAO,IAAD,EACE9E,oBAAS,GADX,oBACvB+E,EADuB,KACbC,EADa,OAEMhF,mBAAS,IAFf,oBAEvBiF,EAFuB,KAEXvQ,EAFW,KAGxBtB,EAASuI,aAAY,SAACxK,GAAD,OAAWA,EAAMuC,QAAQN,UAE9C1B,EAAW8J,KACjB2E,qBAAU,WACTzL,EAActB,KACZ,CAACA,IAiBJ,MAAO,CALiB,SAAAsF,GACvBhE,EAAcgE,EAAEsI,OAAOtD,QAVD,SAACtM,GAAD,OAAY,WAC7BA,GAIJ4T,GAAY,GACZtT,EzB0CyB,SAAC0B,GAAD,8CAAoB,WAAO1B,GAAP,SAAAC,EAAA,sEAC5BuB,EAAwBE,GADI,cAEtCvB,aAAevC,EAAewC,SACtCJ,EAASgD,GAActB,IAHuB,2CAApB,sDyB1ChB8R,CAAaD,MAJtBvQ,EAActB,GACd4R,GAAY,MAW0BD,EAAUC,EAAaC,EAAY7R,IC7B/DuC,GAAgB3D,aAAW,SAACC,GAAD,MAAY,CACnDmB,OAAQ,CACP+R,OAAQ,UACRpS,SAAU,GACV,UAAW,CAAEJ,MAAOV,EAAM4Q,QAAQkB,UAAUhB,MAC5CpQ,MAAOV,EAAM4Q,QAAQC,QAAQC,KAC7Bb,UAAW,aACX/P,QAAS,IAEVW,KAAM,CACLP,OAAO,eACPQ,SAAU,GACVoS,OAAO,WAERC,MAAO,CACN1S,MAAO,IACPK,SAAU,GACVsS,YAAY,GACZ/S,UAAU,UAGXJ,KAAK,CACJoT,UAAU,GACVnT,QAAQ,OCbGoT,GAAqCrG,IAAMC,MAAK,YAAmB,IAAhBoF,EAAe,EAAfA,SAAe,EACMO,KADN,oBACvEU,EADuE,KACvDC,EADuD,KACvCV,EADuC,KAC7BC,EAD6B,KAChBC,EADgB,KACJ7R,EADI,KAExEwI,EAAUjG,KAChB,OACC,qBAAKuH,UAAWtB,EAAQ1J,KAAxB,SACE6S,IAAaR,EACb,cAACxH,EAAA,EAAD,CAAME,UAAU,OAAOb,SAAUqJ,GAAe,GAAhD,SACC,cAACC,GAAA,EAAD,CACCxI,UAAWtB,EAAQwJ,MACnBO,WAAW,EACXlI,SAAU+H,EACV9H,MAAOuH,EACPW,aACC,qCACE,cAAC,KAAD,CAAU7S,SAAS,QAAQJ,MAAM,UAAUuK,UAAWtB,EAAQ9I,KAAMiM,QAAS0G,GAAe,KAC5F,cAAC,KAAD,CAAW1S,SAAS,QAAQJ,MAAM,YAAWuK,UAAWtB,EAAQ9I,KAAOiM,QAAS0G,GAAe,YAKnG,cAAC1I,EAAA,EAAD,UACC,uBACCG,UAAWtB,EAAQxI,OACnB2L,QAAS,WACRiG,GAAY,IAHd,UAKE5R,EACD,gCAAQmR,GAAY,cAAC,KAAD,CAAUrH,UAAWtB,EAAQ9I,KAAMH,MAAM,wBCvBvDkT,GAAmC,SAAC,GAAkB,IAAD,EAAftB,EAAe,EAAfA,SAC5C7Q,EAAUiI,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,QAAQA,WAE1DkI,EAAUmG,KAChB,OACC,eAAChF,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWtB,EAAQ1J,KAAM4T,UAAU,SAASnC,QAAQ,eAApE,UACC,cAACW,GAAD,CAAe5Q,QAASA,EAAS6Q,SAAUA,IAC3C,cAACxH,EAAA,EAAD,CAAM5H,MAAI,EAAC+H,UAAWtB,EAAQoG,SAA9B,mBACEtO,EAAQsO,gBADV,aACE,EAAkB+D,gBAEpB,eAAChJ,EAAA,EAAD,WACE,IACD,cAACwI,GAAD,CAAehB,SAAUA,OAExBA,EAKA,cAACxH,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACEoP,GACA,gCACC,qBAAKrH,UAAWtB,EAAQ0G,aAAxB,SACC,cAAC,GAAD,CAAczR,GAAI0T,EAAUxP,SAAUrB,EAAQqB,aAE/C,8BACC,cAAC,KAAD,CAAMwK,GAAE,qBAAgBgF,GAAxB,SACC,cAACtG,EAAA,EAAD,CAAQtL,MAAM,YAAYyK,QAAQ,YAAYF,UAAWtB,EAAQ2G,SAAjE,sCAZN,cAACxF,EAAA,EAAD,CAAM5H,MAAI,EAAC+H,UAAWtB,EAAQuG,QAA9B,SACC,cAACc,GAAD,U,qBC5BQ+C,GAAoBhU,aAAW,SAACC,GAAD,MAAY,CACvDC,KAAM,CACLO,OAAQ,IACRwT,SAAU,IACV9T,QAAS,EACT+T,eAAgB,eAChB1F,WAAY,SACZnO,cAAe,SACfM,MAAO,OACPL,UAAW,UAEZ6T,iBAAiB,CAChBxT,MAAMV,EAAM4Q,QAAQkB,UAAUhB,KAC9BhQ,SAAS,GACTkP,WAAW,SCHAmE,GAAmClH,IAAMC,MAAK,YAAgC,IAA7BkH,EAA4B,EAA5BA,YAAa9B,EAAe,EAAfA,SACnE7Q,EAAWiI,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,QAAQA,WAC5D4S,EAAa5S,EAAQ6S,UAAYC,OAAO7J,OAAOjJ,EAAQ6S,UAAUE,MAAK,SAACC,GAAD,QAASA,KAC/E9K,EAAUoK,KAIhB,OACC,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWtB,EAAQ1J,KAAnC,WACS,OAAPwB,QAAO,IAAPA,OAAA,EAAAA,EAASiT,UACT,eAAC5J,EAAA,EAAD,CAAM5H,MAAI,EAAV,UACC,mBAAG+H,UAAWtB,EAAQuK,iBAAtB,uBACA,mCAAIzS,QAAJ,IAAIA,OAAJ,EAAIA,EAASiT,cAGP,OAAPjT,QAAO,IAAPA,OAAA,EAAAA,EAASkT,4BACT,eAAC7J,EAAA,EAAD,CAAM5H,MAAI,EAAV,UACC,mBAAG+H,UAAWtB,EAAQuK,iBAAtB,uBACA,mCAAIzS,QAAJ,IAAIA,OAAJ,EAAIA,EAASkT,4BAEb,cAAChJ,EAAA,EAAD,CACCF,MAAM,OACNG,QAAS,cAACwD,GAAA,EAAD,CAAO/L,QAAO,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAASmT,eAAgBlU,MAAM,UAAUkM,UAAQ,IAC1EvB,MAAM,yBAIRgJ,GACA,eAACvJ,EAAA,EAAD,CAAM5H,MAAI,EAAV,UACC,mBAAG+H,UAAWtB,EAAQuK,iBAAtB,uBACCzS,EAAQ6S,UACRC,OAAOM,KAAKpT,EAAQ6S,UAAU9P,KAAI,SAACsQ,GAClC,OACCrT,EAAQ6S,SAASQ,IAChB,cAAChK,EAAA,EAAD,CAAgB5H,MAAI,EAApB,SACC,oBAAG6R,KAAI,YAAOtT,EAAQ6S,SAASQ,IAA/B,UACErT,EAAQ6S,SAASQ,GADnB,QADUA,UASfxC,GACD,cAACxH,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,cAAC0P,GAAA,EAAD,CAAY9F,QAzCI,WACnBsH,GAAY,IAwCyB1T,MAAM,YAAxC,SACC,cAAC,KAAD,c,0CC1DOsU,GAAkBjV,aAAW,SAACC,GAAD,MAAY,CACrDC,KAAM,CACLsO,WAAY,SACZ/N,OAAQ,IACRC,MAAO,OACP6N,QAAS,OACT2F,eAAgB,eAChB7T,cAAe,UAEhB6U,UAAW,CACV3G,QAAS,OACTlO,cAAe,SACfM,MAAO,QACPL,UAAW,SACX4T,eAAgB,eAChB,MAAO,CAAE3T,OAAQ,KAGlB4U,WAAY,CACX5G,QAAS,OACTlO,cAAe,SACfM,MAAO,QACPL,UAAW,SACX4T,eAAgB,gBAEjBK,SAAU,CACThU,OAAQ,IAET6U,IAAK,CAEJzU,MAAO,SAERM,MAAO,CACNN,MAAO,OAER0U,QAAS,CACR9U,OAAQ,QCxBG+U,GAAuC,SAAC,GAAqB,IAAnBjB,EAAkB,EAAlBA,YAC9C3S,EAAYiI,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,WAApDA,QACFhC,EAAW+J,cACXG,EAAUqL,KAHwD,EAIIpL,YAAU,CACrFC,cAAepI,EACf0I,SAAU,SAAC1D,GAEVhH,EhCgD0B,SAACgC,GAAD,8CAA8B,WAAOhC,GAAP,SAAAC,EAAA,sEACvCuB,EAAyBQ,GADc,cAEjD7B,aAAevC,EAAewC,UACtCJ,EAAS+D,GAAe/B,EAAQP,SAChCzB,EAASmE,GAAYnC,EAAQP,UAJ4B,2CAA9B,sDgChDjBoU,CAAc7O,IACvB2N,GAAY,IAEbtK,iBAAkBC,IAAW,CAC5BgG,SAAUhG,MACRE,IAAI,EAAG,0CACPC,IAAI,GAAI,4CACRF,SAAS,YACX0K,QAAS3K,MAAaG,IAAI,IAAK,oDAAoDF,SAAS,YAC5F2K,0BAA2B5K,MAAaG,IAAI,IAAK,oDAAoDF,SAAS,gBAbxGQ,EAJgE,EAIhEA,aAAcC,EAJkD,EAIlDA,aAAcC,EAJoC,EAIpCA,OAAQC,EAJ4B,EAI5BA,OAAQC,EAJoB,EAIpBA,QAASC,EAJW,EAIXA,WAkB7D,OACC,eAACC,EAAA,EAAD,CAAME,UAAU,OAAOb,SAAUK,EAAcS,UAAWtB,EAAQ1J,KAAlE,UACC,eAAC6K,EAAA,EAAD,CAAMC,WAAS,EAAC8I,UAAU,MAAMnC,QAAQ,SAASnD,WAAW,SAA5D,UACC,sBAAKtD,UAAWtB,EAAQsL,UAAxB,UACC,gCACC,yCACA,cAAC7J,EAAA,EAAD,CACCK,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAQqF,SACfvE,SAAUf,EACV8K,YAAa,kBACb3W,GAAG,WACH0M,OAAQT,IAERF,EAAOoF,UAAYnF,EAAQmF,UAAY,qBAAK9E,UAAWtB,EAAQ3I,MAAxB,SAAgC2J,EAAOoF,cAEhF,gCACC,0CACA,cAAC3E,EAAA,EAAD,CACCE,OAAQT,EACR2K,QAAS,EACTxL,UAAQ,EACR0B,KAAK,OACLD,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAQgK,QACfe,WAAS,EACTjK,SAAUf,EACV7L,GAAG,YAEH+L,EAAO+J,SAAW9J,EAAQ8J,SAAW,qBAAKzJ,UAAWtB,EAAQ3I,MAAxB,SAAgC2J,EAAO+J,aAE9E,gCACC,2CACA,cAACtJ,EAAA,EAAD,CACCM,KAAK,OACLH,KAAK,QACLkK,WAAS,EACTD,QAAS,EACTxL,UAAQ,EACRyB,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAQiK,0BACfnJ,SAAUf,EACV7L,GAAG,4BACH0M,OAAQT,IAGRF,EAAOgK,2BAA6B/J,EAAQ+J,2BAC5C,qBAAK1J,UAAWtB,EAAQ3I,MAAxB,SAAgC2J,EAAOgK,kCAI1C,sBAAK1J,UAAWtB,EAAQuL,WAAxB,UACC,2CAlDiB,CAAC,KAAM,WAAY,UAmDtB1Q,KAAI,SAACtB,GAClB,OACC,cAACkI,EAAA,EAAD,CAECH,UAAWtB,EAAQ2K,SACnB7I,OAAa,OAANf,QAAM,IAANA,OAAA,EAAAA,EAAQ4J,SAASpR,KAAS,GACjCxE,KAAM,YAAcwE,EACpBtE,GAAIsE,EACJwI,KAAK,OACLH,KAAK,QACLF,MAAOnI,EACPsI,SAAUf,GARLvH,YAcV,8BACC,cAACyI,EAAA,EAAD,CACCV,UAAWtB,EAAQwL,IACnBO,eAAe,QACf9J,QACC,cAACC,EAAA,EAAD,CAAUN,KAAK,QAAQlI,QAAO,OAAEqH,QAAF,IAAEA,OAAF,EAAEA,EAAQkK,eAAgBpJ,SAAUf,EAAc/J,MAAM,UAAU9B,GAAG,mBAEpGyM,MAAM,iCAGR,qBAAKJ,UAAWtB,EAAQyL,QAAxB,SACC,eAACtK,EAAA,EAAD,CAAMC,WAAS,EAAC2G,QAAQ,SAAxB,UACC,cAACkB,GAAA,EAAD,CAAYlH,KAAK,SAAjB,SACC,cAAC,KAAD,CAAgBhL,MAAM,cAEvB,cAACkS,GAAA,EAAD,CAAY9F,QAAS,kBAAMsH,GAAY,IAAQ1I,KAAK,SAApD,SACC,cAAC,KAAD,CAAkBhL,MAAM,yB,qBCtHjBiV,GAAa,SAACxT,GAA4B,IAAvByT,EAAsB,uDAAb,MAGlCC,EAAS,IAAIC,KAAK3T,GAAM4T,UACxBC,EAAc,IAAIF,KAAKD,EAAOD,GAAUK,mBAAmB,KAAM,CAACC,KAAM,UAAWC,OAAO,YAC1FC,EAAe,IAAIN,KAAKD,EAAOD,GAAUS,qBACzCC,GAAc,IAAIR,MAAOO,qBACzBE,EAAgB,IAAIT,KAAKA,KAAKU,MAAQ,MAAUZ,GAAUS,qBAI1DI,EACLL,IAAiBE,EAChB,SAAWN,EAEXI,IAAiBG,EAChB,aAAeP,EAEfI,EAEH,OAAOK,G,oBCpBKC,GAAe3W,aAAW,SAACC,GAAD,MAAY,CAClDC,KAAM,CACLmM,UAAW,OACX5L,OAAQ,IACRC,MAAO,QAGRsK,UAAW,CACV4L,aAAc,GACdjW,MAAO,OACP4N,QAAS,OACTlO,cAAe,iBACf6T,eAAgB,WAChB7H,UAAW,OACX3L,MAAO,OACPwP,UAAW,cAGZ2G,YAAa,CACZnW,MAAO,OACP6N,QAAS,OACT/B,gBAAiB,UACjBrM,QAAS,GACT2W,UAAW,GACXlW,aAAc,GAGfwB,KAAM,CACLzB,MAAO,QACPI,SAAU,GAEXoB,KAAM,CACLzB,MAAO,OACP2P,WAAY,IAEbK,OAAQ,CACP2C,YAAa,IAEdrD,SAAU,CACTqD,YAAa,GACb1S,MAAO,cChCIoW,GAAyB,WAAO,IAAD,EACNpN,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,WAArEO,EADmC,EACnCA,SAAUC,EADyB,EACzBA,MAAOR,EADkB,EAClBA,QACnBhC,EAAW8J,KACXI,EAAU+M,KAChB,OACC,qBAAKzL,UAAWtB,EAAQ1J,KAAxB,SACC,qBAAKgL,UAAWtB,EAAQoB,UAAxB,gBACE9I,QADF,IACEA,OADF,EACEA,EAAOuC,KAAI,SAACtB,EAAMC,GAAS,IAAD,IAC1B,OACC,sBAAqB8H,UAAWtB,EAAQiN,YAAxC,UACC,cAACjF,GAAA,EAAD,CAAQ1G,UAAWtB,EAAQ8G,OAAQ3E,IAAK5I,EAAKhC,OAAL,UAAcc,EAASY,cAAvB,aAAc,EAAiBmU,MAA/B,UAAuCtV,EAAQmB,cAA/C,aAAuC,EAAgBmU,QAC/F,gCACC,eAACjM,EAAA,EAAD,CAAMC,WAAS,EAAC8I,UAAU,MAAMtF,WAAW,SAA3C,UACC,mBAAGtD,UAAWtB,EAAQoG,SAAtB,SAAiC7M,EAAKhC,OAASc,EAAS+N,SAAWtO,EAAQsO,WAC3E,mBAAG9E,UAAWtB,EAAQxH,KAAtB,SAA6BwT,GAAWzS,EAAKf,KAAM,QAEpD,sBAAM8I,UAAWtB,EAAQzH,KAAzB,SAAgCgB,EAAKhB,OACrC,cAAC4I,EAAA,EAAD,CAAMC,WAAS,EAACwD,WAAW,SAA3B,SACC,cAAC5C,EAAA,EAAD,CACCH,SAAU,SAAC/E,GAAD,OAAOhH,EAASwD,GAAQ,CAAEG,KAAMqD,EAAEsI,OAAQ5L,UACpDyI,QACC,cAACC,EAAA,EAAD,CAAUxI,QAASH,EAAKb,QAASxB,KAAM,cAACmW,GAAA,EAAD,IAAoBC,YAAa,cAACC,GAAA,EAAD,IAAcxY,KAAK,eAE5F2M,MAAOnI,EAAKd,oBAdNc,EAAKf,cCjBRgV,GAAcpX,aAAW,SAACC,GAAD,MAAY,CAEjDC,KAAM,CACLsM,gBAAiB,UACjB/L,OAAQ,IACRN,QAAS,GACTS,aAAc,cAEfyW,QAAS,CACR7K,gBAAiB,UACjBmE,aAAc,GACdhQ,MAAO,QACPR,QAAS,GACTO,MAAO,MACPE,aAAc,EACdsP,UAAW,cAEZkD,MAAO,CACN1S,MAAO,MACP4W,WAAY,IAEbC,aAAc,CACbD,WAAY,QCVDE,GAAwBtK,IAAMC,MAAK,WAAO,IAAD,EAC/ClL,EAAW0H,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,QAAQO,YAC3DvC,EAAW8J,KACXI,EAAUwN,KAHqC,EAIKvN,YAAU,CACnEC,cAAe,CACd3H,KAAM,IAEPiI,SAAU,YAAe,IAAZjI,EAAW,EAAXA,KACZzC,EACCsD,GAAQ,CACP7B,OAAQc,EAASd,OACjBgB,KAAMA,EACNC,MAAM,IAAI2T,MAAO0B,SACjBpV,WAAY,EACZC,SAAS,KAGXoV,OAdMjN,EAJ6C,EAI7CA,aAAcC,EAJ+B,EAI/BA,aAAcC,EAJiB,EAIjBA,OAAQ+M,EAJS,EAITA,UAkB5C,OACC,eAAC3M,EAAA,EAAD,CAAMG,UAAWtB,EAAQ1J,KAAzB,UACC,eAAC6K,EAAA,EAAD,CACCC,WAAS,EACT8I,UAAU,MACVtF,WAAW,SACXtD,UAAWtB,EAAQyN,QAJpB,UAKC,cAACzF,GAAA,EAAD,CAAQ7F,IAAG,UAAE9J,EAASY,cAAX,aAAE,EAAiBmU,QAC9B,cAACjM,EAAA,EAAD,CAAM5H,MAAI,EAACiK,IAAE,EAACnC,UAAU,OAAOC,UAAWtB,EAAQ2N,aAAcnN,SAAUK,EAA1E,SACC,cAACiJ,GAAA,EAAD,CACC8B,YAAY,kBACZ7J,KAAK,OACLF,SAAUf,EACV/J,MAAM,UACNhC,KAAK,OACLuM,UAAWtB,EAAQwJ,MACnB1H,MAAOf,EAAOxI,KACdyR,aACC,cAACf,GAAA,EAAD,CAAYlH,KAAK,SAAjB,SACC,cAAC,KAAD,CAAiBhL,MAAM,UAAUI,SAAS,mBAM/C,cAAC,GAAD,UC3DU4W,GAAgB3X,aAAW,SAACC,GAAD,MAAY,CACnDC,KAAM,CACLsM,gBAAiB,UACjB5L,aAAc,gBACdkP,SAAU,WACVpP,MAAO,OACPD,OAAQ,IACRyT,eAAgB,SAChB3F,QAAS,OACTlO,cAAe,OAGhBuX,kBAAmB,CAClBnX,OAAQ,S,oBCEV,SAASoX,GAAMC,GACd,OAAO,cAAC,KAAD,aAAUC,UAAW,EAAG3M,QAAQ,UAAa0M,IAGrD,IAoDeE,iBApDe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAE1BC,EAAavO,aAAY,SAACxK,GAAD,OAAsBA,EAAM8J,KAAKpK,MAC1D0T,EAAW0F,EAAME,OAAOhX,OACxBiX,EAAgB7F,GAAY2F,EAC5BxY,EAAW8J,KALgC,EAMjBwE,oBAAS,GANQ,oBAM1CqK,EAN0C,KAMhChE,EANgC,KAO3CzK,EAAU+N,KACVpV,EAAYoH,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,QAAQa,aAC5DC,EAAUmH,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,QAAQc,WAEhE2L,qBACC,WACKiK,GAAe1Y,EAAS+D,GAAe2U,MACzC,CAAC1Y,EAAU0Y,IAEf,IAAME,EAAc,WACnB5Y,EAAS8D,GAAW,MAGrB,OACC,sBAAK0H,UAAWtB,EAAQ1J,KAAxB,UACC,cAACqY,GAAA,EAAD,CAAUC,OAAQhW,EAASiW,iBAAkB,IAAMC,QAASJ,EAA5D,SACC,cAAC,GAAD,CAAOI,QAASJ,EAAaK,SAAS,QAAtC,2BAIApW,EAAa,cAAC,GAAD,IACb,qCACC,cAACwI,EAAA,EAAD,CAAM5H,MAAI,EAACiK,GAAI,EAAf,SACC,cAAC,GAAD,CAAamF,SAAUA,MAExB,cAACxH,EAAA,EAAD,CAAM5H,MAAI,EAACiK,GAAI,EAAGlC,UAAWtB,EAAQgO,kBAArC,SACES,EACA,cAAC,GAAD,CAAiBhE,YAAaA,IAC7B,mCACC,eAACtJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,cAACD,EAAA,EAAD,UACC,cAACqJ,GAAD,CAAa7B,SAAUA,EAAU8B,YAAaA,MAE/C,cAACtJ,EAAA,EAAD,CAAM5H,MAAI,EAACiK,IAAE,EAAb,SACC,cAACoK,GAAD,sB,UC5DEoB,GAAW5Y,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACLsM,gBAAiB,UACjBgC,WAAY,SACZsI,UAAW,GACXlW,aAAc,EACdF,MAAO,QAER0S,MAAO,CACNzS,MAAO,QACP2W,WAAY,GACZ5W,MAAO,OACPP,QAAS,EACTyW,aAAc,QCJHiC,GAA8B,SAAC,GAA+B,IAA7BpO,EAA4B,EAA5BA,aAAiBqN,EAAW,iCACnElO,EAAUgP,KAChB,OACC,cAAC7N,EAAA,EAAD,CAAME,UAAU,OAAOb,SAAUK,EAAcS,UAAWtB,EAAQ1J,KAAlE,SACC,cAACwT,GAAA,EAAD,CAAWoF,WAAU,eAAMhB,GAC1B5M,UAAWtB,EAAQwJ,MACnBzH,KAAK,OACLgI,WAAW,EACX6B,YAAY,kBACZ7W,KAAK,UACLE,GAAG,eCZMka,GAAqB,WAAO,IAChC3X,EAAWuI,aAAY,SAACxK,GAAD,OAAsBA,EAAM4J,QAAnD3H,OACF1B,EAAW8J,KAFsB,EAGmBK,YAAU,CACnEC,cAAe,CACdnC,QAAS,IAEVyC,SAAU,YAAkB,IAAfzC,EAAc,EAAdA,QACZjI,EnCgDwB,SAACiI,GAAD,6BAAqB,sBAAAhI,EAAA,sDAC/C6H,GAAoBG,GAD2B,2CmChDpCqR,CAAYrR,IACrB+P,OANMjN,EAH+B,EAG/BA,aAAcC,EAHiB,EAGjBA,aAAcC,EAHG,EAGHA,OAAQ+M,EAHL,EAGKA,UAS5C,OACC,cAAC,GAAD,CACCjN,aAAcA,EACdgB,SAAUf,EACVgB,MAAOf,EAAOhD,QACdkF,SAAqB,UAAXzL,KCtBA6X,GAAejZ,aAAW,SAACC,GAAD,MAAY,CAClDC,KAAM,CACLsM,gBAAiB,UACjBrM,QAAS,IAGV+Y,WAAY,CACXvY,MAAO,QACPsP,WAAY,KAEbkJ,YAAa,CACZxY,MAAO,UACPuP,UAAW,cAEZkJ,gBAAiB,CAChB/M,UAAW,OACX5L,OAAQ,IACRN,QAAS,GAEVwH,QAAS,CACRxH,QAAS,SACTiQ,UAAW,oBACX7B,QAAS,OACTlO,cAAe,WCjBJgZ,GAAyB,WACrC,IAAMhU,EAAWsE,aAAY,SAACxK,GAAD,OAAsBA,EAAM4J,KAAK1D,YACxDiU,EAAiBC,iBAAuB,MACxC3P,EAAUqP,KAQhB,OAHA9K,qBAAU,WAFTmL,EAAeE,SAAWF,EAAeE,QAAQC,gBAAe,KAE/B,CAACpU,IAIlC,cAAC0F,EAAA,EAAD,CAAM5H,MAAI,EAACiK,IAAE,EAAClC,UAAWtB,EAAQ1J,KAAjC,SACC,eAAC6K,EAAA,EAAD,CAAM5H,MAAI,EAAV,UACC,cAAC4H,EAAA,EAAD,CAAMG,UAAWtB,EAAQwP,gBAAzB,gBACE/T,QADF,IACEA,OADF,EACEA,EAAUZ,KAAI,SAACiQ,EAAGtR,GAAJ,OACd,eAAC2H,EAAA,EAAD,CAAMG,UAAWtB,EAAQjC,QAAzB,UACC,cAACoD,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,cAACyO,GAAA,EAAD,CAAQ5F,IAAI,SAASD,IAAG,OAAE2I,QAAF,IAAEA,OAAF,EAAEA,EAAGpT,UAE9B,eAACyJ,EAAA,EAAD,CAAM5H,MAAI,EAAC0M,MAAO,CAAEyH,WAAY,IAAhC,UACC,oBAAGpM,UAAWtB,EAAQsP,WAAtB,cAAoCxE,EAAEgF,YACtC,oBAAGxO,UAAWtB,EAAQuP,YAAtB,UAAoCzE,EAAE/M,QAAtC,UAED,qBAAKgS,IAAKL,MAR4BlW,QAYzC,cAAC,GAAD,U,UCrCW,OAA0B,iCCC5BwW,GAAkB5Z,aAAW,SAACC,GAAD,MAAY,CACrDC,KAAM,CACLC,QAAS,OACTK,WAAY,UACZG,MAAO,QACP4N,QAAS,OACTlO,cAAe,SACfmO,WAAY,SACZ5N,aAAc,mBACdH,OAAQ,KAGToZ,UAAW,CACVxN,UAAW,OACXlM,QAAS,SAEV2Z,KAAM,CACLpZ,MAAO,IACPwT,eAAgB,OAChB3T,OAAQ,QACRC,WAAY,eAIDuZ,GAAW9H,cAAW,SAAChS,GAAD,MAAY,CAC9CiS,MAAO,CACNpC,SAAU,WACVqC,IAAK,GACLC,MAAO,OAJeH,CAMpBI,MCrBS2H,GAAuB,WAAO,IAClC5U,EAAYuE,aAAY,SAACxK,GAAD,OAAsBA,EAAMiG,WAApDA,QACF1F,EAAW8J,KACjB2E,qBAAU,WACTzO,E1C8BwB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,6DAC/BD,EAAS+F,IAAmB,IADG,SAGZR,KAHY,OAGzB5G,EAHyB,OAI/BqB,EAAS+F,IAAmB,IAC5B/F,EAASiG,GAAWtH,IALW,2CAAN,yD0C7BtB,IACH,IAAMuL,EAAUgQ,KAChB,OACC,sBAAK1O,UAAWtB,EAAQ1J,KAAxB,UACC,8CACA,cAAC,KAAD,CAASqN,GAAI,aAAc0M,gBAAgB,UAA3C,SACC,cAACrI,GAAA,EAAD,CAAQ7F,IAAKmO,OAEd,sCACA,qBAAKhP,UAAWtB,EAAQiQ,UAAxB,SACEzU,EAAQX,KAAI,SAACtB,EAAMC,GAAS,IAAD,EAC3B,OACC,cAAC,KAAD,CAASmK,GAAE,qBAAgBpK,EAAKtE,IAAoBob,gBAAgB,UAApE,SACC,cAACF,GAAD,CAAUvH,aAAcrP,EAAKqC,iBAAkB7E,MAAM,YAArD,SACC,cAACwZ,GAAA,EAAD,CACCjP,UAAWtB,EAAQkQ,KACnBpJ,OAAQ,cAACkB,GAAA,EAAD,CAAQ7F,IAAG,OAAE5I,QAAF,IAAEA,GAAF,UAAEA,EAAMN,cAAR,aAAE,EAAcmU,QACnC1L,MAAK,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAAMuW,SACbU,WAAS,GAJChX,MAF8BD,EAAKtE,aCjBzCwb,GAAmC,SAAC,GAAkB,IAAhB9H,EAAe,EAAfA,SAC5C7S,EAAW8J,KADgD,EAEPK,YAAU,CACnEC,cAAe,CACdnC,QAAS,IAEVyC,SAAU,YAAkB,I3C4CFjJ,EAAgBgB,E2C5C7BwF,EAAc,EAAdA,QACZjI,G3C2CyByB,E2C3CJoR,E3C2CoBpQ,E2C3CVwF,E3C2CP,uCAAkC,WAAOjI,GAAP,eAAAC,EAAA,sEACtDsF,GAAuB9D,EAAQgB,GADuB,cAE5DzC,EAASwG,GAAY/E,IAFuC,SAIzC8D,KAJyC,OAItD5G,EAJsD,OAK5DqB,EAASiG,GAAWtH,IALwC,2CAAlC,wD2C1CxBqZ,OANMjN,EAFyD,EAEzDA,aAAcC,EAF2C,EAE3CA,aAAcC,EAF6B,EAE7BA,OAAQ+M,EAFqB,EAErBA,UAS5C,OACC,cAAC,GAAD,CAAWjN,aAAcA,EAAcgB,SAAUf,EAAcgB,MAAOf,EAAOhD,W,0CCrBlE2S,GAAkBta,aAAW,SAACC,GAAD,MAAY,CACrDC,KAAM,CACLsM,gBAAiB,UACjBrM,QAAS,IAEViZ,gBAAiB,CAChB/M,UAAW,OACX5L,OAAQ,IACRN,QAAS,GAEVgZ,YAAa,CACZxY,MAAO,UACPuP,UAAW,cAEZqK,SAAU,CACT5Z,MAAO,SACPI,SAAU,IAEXyZ,YAAa,CACZ7Z,MAAO,QACPI,SAAU,IAGX0Z,QAAS,CACR1Z,SAAU,GACVJ,MAAO,QAERuY,WAAY,CACXvY,MAAO,OACPsP,WAAY,IACZoD,YAAa,IAGdqH,eAAgB,CACfnM,QAAS,OACTpO,QAAS,QACTiQ,UAAW,oBACX5B,WAAY,SACZ,UAAW,CACV,MAAO,CACN,MAAO,CACN,MAAO,CAAEmM,QAAS,OAKtBC,WAAY,CACXzH,OAAQ,UACRwH,QAAS,EACT5Z,SAAU,GACVuW,WAAY,GAGbuD,aAAc,CACbtM,QAAS,OACTC,WAAY,SACZ,UAAW,CACV,MAAO,CAAEmM,QAAS,KAIpBjK,OAAQ,CACP2C,YAAa,Q,qBCxCFyH,GAAuC,SAAC,GAA6B,IAA3BvI,EAA0B,EAA1BA,SAAUwI,EAAgB,EAAhBA,UAC1Drb,EAAW8J,KACXI,EAAU0Q,KAFgE,EAG1C3Q,aAAY,SAACxK,GAAD,OAAsBA,EAAMiG,WAAtEG,EAHwE,EAGxEA,gBAAiBF,EAHuD,EAGvDA,SACjBpD,EAAa0H,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,WAArDO,SACFqX,EAAiBC,iBAAuB,MAiB9C,OAZApL,qBAAU,WACLoE,GACH7S,EAASwG,GAAYqM,MAGpB,CAACA,IAEJpE,qBAAU,WACTzO,EAASsG,MAVTsT,EAAeE,SAAWF,EAAeE,QAAQC,gBAAe,KAY9D,CAACpU,IAGH,cAAC0F,EAAA,EAAD,CAAM5H,MAAI,EAACiK,IAAE,EAAClC,UAAWtB,EAAQ1J,KAAjC,SACEqF,GAAwC,KAAb,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAU0C,QAC7B,cAAC,GAAD,IAEC,qCACC,eAACgD,EAAA,EAAD,CAAMG,UAAWtB,EAAQwP,gBAAzB,UACE/T,GAAYA,EAASZ,KAAI,SAACtB,EAAWC,GAAZ,eACzB,eAAC2H,EAAA,EAAD,CACC5H,MAAI,EACJ+H,UAAWtB,EAAQ8Q,eAEnB3N,QAAS,kBAAMrN,G7CUMwF,E6CViB/B,EAAKtE,G7CUHsC,E6CVOoR,E7CU3B,uCAAuC,WAAO7S,GAAP,SAAAC,EAAA,sEAChDsF,GAAyBC,GADuB,OAE3C,IAF2C,OAE1DrF,aACRH,EAASwG,GAAY/E,IACrBzB,EAASqG,GAAkBb,KAJuC,2CAAvC,4DAACA,EAAmB/D,G6CdzC,UAKC,cAACyQ,GAAA,EAAD,CACC5F,IAAI,SACJd,UAAWtB,EAAQ8G,OACnB3E,IAAK5I,EAAK6X,YAAL,OAAkB/Y,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUd,QAA5B,OAAqCc,QAArC,IAAqCA,GAArC,UAAqCA,EAAUY,cAA/C,aAAqC,EAAkB6K,MAAvD,OAA+DqN,QAA/D,IAA+DA,GAA/D,UAA+DA,EAAWlY,cAA1E,aAA+D,EAAmB6K,QAExF,eAAC3C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACC,sBAAME,UAAWtB,EAAQsP,WAAzB,SAAsC/V,EAAK+V,aAC3C,eAACnO,EAAA,EAAD,CAAMG,UAAWtB,EAAQiR,aAAzB,UACC,+BACE1X,EAAK6X,YAAL,OAAkB/Y,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUd,UAC3BgC,EAAK8X,OACL,cAAC,KAAD,CAAoB/P,UAAWtB,EAAQ4Q,cAEtC,cAAC,KAAD,CAAiBtP,UAAWtB,EAAQ2Q,cAGxC,sBAAMrP,UAAWtB,EAAQ6Q,QAAzB,SAAmC7E,GAAWzS,EAAKsX,WACnD,cAAC,KAAD,CAA2BvP,UAAWtB,EAAQgR,WAAYja,MAAM,iBAEjE,cAACoK,EAAA,EAAD,CAAMC,WAAS,EAAC5K,QAAS,EAAGoO,WAAW,SAAStD,UAAWtB,EAAQuP,YAAnE,SACC,cAACpO,EAAA,EAAD,CAAM5H,MAAI,EAAV,SAAYA,EAAKhB,cAtBdiB,MA2BP,qBAAKuW,IAAKL,OAEX,cAACvO,EAAA,EAAD,CAAMC,WAAS,EAAf,SACC,cAAC,GAAD,CAAauH,SAAUA,YCrFjB2I,GAAkBlb,aAAW,SAACC,GAAD,MAAY,CACrDC,KAAM,CAELM,WAAY,UACZI,aAAc,aACdD,MAAO,UACPmP,SAAU,WACVrP,OAAQ,IACR,UAAW,CACVE,MAAO,UAERR,QAAQ,IAETuQ,OAAQ,CACP9P,aAAc,MACdF,MAAO,IACPD,OAAQ,IACRN,QAAQ,QCPGgb,GAAsC,SAAC,GAA0B,IAAzBJ,EAAwB,EAAxBA,UAAUxI,EAAc,EAAdA,SACxD3I,EAAUsR,KAEhB,OACC,mCACC,cAAC,KAAD,CAAM3N,GAAI,YAAcgF,EAAxB,SACC,eAACxH,EAAA,EAAD,CAAMC,WAAS,EAAC8I,UAAU,SAAStF,WAAW,SAASmD,QAAQ,eAAezG,UAAWtB,EAAQ1J,KAAjG,UAEG,oCAAK6a,QAAL,IAAKA,OAAL,EAAKA,EAAWrB,WAChB,cAAC9H,GAAA,EAAD,CAAQ5F,IAAI,iBAAiBD,IAAG,OAAEgP,QAAF,IAAEA,OAAF,EAAEA,EAAWlY,OAAO6K,MAAOxC,UAAWtB,EAAQ8G,SAC9E,eAAC3F,EAAA,EAAD,CAAMC,WAAS,EAAC8I,UAAU,SAAStF,WAAW,SAA9C,UACC,+CACA,+BAAe,OAATuM,QAAS,IAATA,OAAA,EAAAA,EAAWK,uBAAwBxF,GAAU,OAACmF,QAAD,IAACA,OAAD,EAACA,EAAWK,mCCpB1DC,GAAgBrb,aAAW,SAACC,GAAD,MAAY,CACnDC,KAAM,CACLC,QAAS,GACTK,WAAY,UACZG,MAAO,QACP4N,QAAS,OACTlO,cAAe,SACfmO,WAAY,SACZ5N,aAAc,aACdH,OAAQ,KAETiE,KAAM,CACL/D,MAAO,UACPJ,OAAQ,EACRG,MAAO,IACPP,QAAS,YAET,UAAW,CACVK,WAAY,sBACZG,MAAO,QACPC,aAAc,EACdT,QAAS,cAGXuQ,OAAQ,CACPhQ,MAAO,GACPD,OAAQ,IAET6a,aAAc,CACbjP,UAAW,OACXlM,QAAS,EACTI,OAAQ,iBAIGyR,GAAcC,cAAW,SAAChS,GAAD,MAAY,CACjDiS,MAAO,CACN1F,gBAAiB,UACjB+O,UAAU,aAAD,OAAetb,EAAM4Q,QAAQrQ,WAAWgb,OACjD,WAAY,CACX1L,SAAU,WACVqC,IAAK,EACLsJ,KAAM,EACN/a,MAAO,OACPD,OAAQ,OACRG,aAAc,WAVUqR,CAavBI,MC5CSqJ,GAA0B,WAAO,IAETC,EAA9BvP,EADezC,aAAY,SAACxK,GAAD,OAAsBA,EAAM4J,QAArD1D,SACmBlB,QAASwX,EAAiEnH,OAAO/W,OAAO,MAAtE,SAACkC,GAAD,OAAagc,EAAKhc,EAAEwB,UAAYwa,EAAKhc,EAAEwB,SAAU,MAExFyI,EAAUyR,KAChB,OACC,sBAAKnQ,UAAWtB,EAAQ1J,KAAxB,UACC,sDAAakM,QAAb,IAAaA,OAAb,EAAaA,EAAWrE,UACxB,qBAAKmD,UAAWtB,EAAQ0R,aAAxB,gBACElP,QADF,IACEA,OADF,EACEA,EAAW3H,KAAI,SAACiQ,EAAGtR,GACnB,OACC,cAAC,KAAD,CAAMmK,GAAE,qBAAgBmH,EAAEvT,QAAUuT,EAAE7V,IAAtC,SACC,eAACkM,EAAA,EAAD,CAAMC,WAAS,EAACwD,WAAW,SAAStD,UAAWtB,EAAQlF,KAAvD,UACC,cAACqG,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,cAAC,GAAD,CACCyY,QAAQ,SACRC,aAAc,CACbC,SAAU,SACVC,WAAY,SAEb3Q,QAAQ,MANT,SAOC,cAACwG,GAAA,EAAD,CAAQ5F,IAAI,aAAaD,IAAG,OAAE2I,QAAF,IAAEA,OAAF,EAAEA,EAAGpT,MAAO4J,UAAWtB,EAAQ8G,aAG7D,mBAAGb,MAAO,CAAEyH,WAAY,IAAxB,SACE5C,EAAEgF,eAd2CtW,YCkCxC4U,iBAvCiB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAC1B7S,EAAYuE,aAAY,SAACxK,GAAD,OAAsBA,EAAMiG,WAApDA,QACFmN,EAAW0F,EAAME,OAAOhX,OACxB4Z,EAAY3V,EAAQjB,QAAO,SAAChB,GAAD,OAAUA,EAAKtE,IAAM0T,KAAU,GACxDnR,EAAWuI,aAAY,SAACxK,GAAD,OAAsBA,EAAM4J,QAAnD3H,OACF1B,EAAW8J,KASjB,OAPA2E,qBAAU,WAET,OADAzO,EhD+BoC,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC3C6H,KACAA,GAAkB,oBAAqBc,GAAyB5I,IAChE8H,GAAkB,iBAAkBgB,GAA4B9I,IAHrB,2CAAN,uDgD9B7B,WACNA,EhDmCkC,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC1C6H,GAAoB,oBAAqBc,GAAyB5I,IAClE8H,GAAoB,iBAAkBgB,GAA4B9I,IAClE8H,KAH0C,2CAAN,0DgDjCjC,IAGF,eAACuD,EAAA,EAAD,CAAMC,WAAS,EAAC8I,UAAU,MAAMnC,QAAQ,SAAxC,UACC,cAAC5G,EAAA,EAAD,CAAM5H,MAAI,EAACiK,GAAI,EAAf,SACC,cAAC,GAAD,MAED,cAACrC,EAAA,EAAD,CAAM5H,MAAI,EAACiK,GAAI,GAAf,SACC,cAACrC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACEuH,EACA,qCACC,cAAC,GAAD,CAAiBA,SAAUA,EAAUwI,UAAWA,IAChD,cAAC,GAAD,CAAiBxI,SAAUA,EAAUwI,UAAWA,OAGhD,qCACa,UAAX3Z,GAAsB,8EACvB,cAAC,GAAD,IACA,cAAC,GAAD,iB,+BC1CK4a,GAAShc,aAAW,SAACC,GAAD,MAAY,CAC5CoX,QAAS,CACR1W,MAAO,QACP4N,QAAS,OACTC,WAAY,SACZrO,QAAS,WACTO,MAAO,MAERub,gBAAiB,CAChB/H,eAAgB,WAChB1F,WAAY,UAEbtO,KAAM,CACLM,WAAY,4CACZI,aAAc,qBCJHsb,GAAS,WAAO,IAAD,IACrBtS,EAAUoS,KACV/Z,EAAW0H,aAAY,SAACxK,GAAD,OAAsBA,EAAMuC,QAAQO,YAFtC,EAGJ0H,aAAY,SAACxK,GAAD,OAAsBA,EAAM8J,QAAvDnK,EAHmB,EAGnBA,OAAQD,EAHW,EAGXA,GACVa,EAAW+J,cACTjE,EAAqBmE,aAAY,SAACxK,GAAD,OAAsBA,EAAMiG,WAA7DI,iBAER0H,IAAMiB,WAAU,WACXtP,IACHa,EAASmE,GAAYhF,IACrBa,EAASsG,SAER,CAACtG,EAAUb,IAId,OACC,qBAAKqM,UAAWtB,EAAQ1J,KAAxB,SACC,sBAAKgL,UAAWtB,EAAQyN,QAAxB,UACC,cAACtM,EAAA,EAAD,CAAMC,WAAS,EAAC5K,QAAS,EAAzB,SALe,CAAC,UAAW,QAAS,aAMxBqE,KAAI,SAACtB,GACf,OACC,cAAC4H,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,cAAC,KAAD,CAASoK,GAAI,IAAMpK,EAAM8W,gBAAgB,SAAzC,SACC,mCAAM9W,EAAKgZ,0BAFGhZ,QAQlBrE,GACA,eAACiM,EAAA,EAAD,CAAMC,WAAS,EAAC5K,QAAS,EAAG8K,UAAWtB,EAAQqS,gBAA/C,UACC,cAAClR,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,mBAAG6R,KAAK,wFAAR,SACC,yCAGF,cAACjK,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,cAAC,KAAD,CAAMoK,GAAE,WAAR,SACC,oCAAKtL,QAAL,IAAKA,OAAL,EAAKA,EAAU+N,eAGjB,cAACjF,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACEqC,EACA,cAAC,KAAD,CAAM+H,GAAE,aAAR,SACC,cAAC8E,GAAA,EAAD,CAAOG,aAAchN,EAAkB7E,MAAM,YAA7C,SACC,cAACiR,GAAA,EAAD,CAAQ5F,IAAI,aAAaD,IAAG,OAAE9J,QAAF,IAAEA,GAAF,UAAEA,EAAUY,cAAZ,aAAE,EAAkBmU,YAIjD,cAACpF,GAAA,EAAD,CAAQ5F,IAAI,aAAaD,IAAG,OAAE9J,QAAF,IAAEA,GAAF,UAAEA,EAAUY,cAAZ,aAAE,EAAkBmU,UAGnD,cAACjM,EAAA,EAAD,CAAM5H,MAAI,EAAV,SACC,cAAC0P,GAAA,EAAD,CAAY9F,QAAS,kBAAMrN,E7DhCZ,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sEACJ1B,IADI,cAEd4B,aAAevC,EAAewC,SAC1CJ,EAASJ,EAAgB,CAAET,GAAI,KAAMf,MAAO,KAAMD,MAAO,KAAMiB,QAAQ,KAH7C,2CAAN,wD6DgCf,SACC,cAAC,KAAD,CAAoB6B,MAAM,2BCrBnByb,OA9Bf,WACC,IAAMrX,EAAS4E,aAAY,SAACxK,GAAD,OAAWA,EAAMyJ,IAAI7D,UAC1CjG,EAAS6K,aAAY,SAACxK,GAAD,OAAWA,EAAM8J,KAAKnK,UAC3CoZ,EAAavO,aAAY,SAACxK,GAAD,OAAWA,EAAM8J,KAAKpK,MAC/Ca,EAAW+J,cAGjB,OAFA0E,qBAAU,kBAAMzO,GvDCS,SAACA,GAC1BA,EAASD,KAAmBtB,MAAK,WAChCuB,EAASsF,cuDHwB,CAACtF,IAGlC,cAAC2c,GAAA,EAAD,UACGtX,EAEGjG,EAGJ,qCACC,cAAC,GAAD,IACA,eAAC,KAAD,WACC,cAAC,KAAD,CAAOwd,OAAK,EAACC,KAAM,YAAcrE,EAAYsE,OAAQ,kBAAM,cAAC,KAAD,CAAUjP,GAAI,gBACzE,cAAC,KAAD,CAAO+O,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,kBAAM,cAAC,GAAD,OACpD,cAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,KAAD,CAAOF,OAAK,EAACC,KAAM,cAAgBrE,EAAYsE,OAAQ,kBAAM,cAAC,KAAD,CAAUjP,GAAI,kBAC3E,cAAC,KAAD,CAAO+O,OAAK,EAACC,KAAK,sBAAsBC,OAAQ,kBAAM,cAAC,GAAD,OACtD,cAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,KAAD,CAAUjP,GAAI,sBAVpD,cAAC,GAAD,IAFA,cAAC,GAAD,OCbgBkP,QACU,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3E,MACxB,2D,kCCRIhY,GAAQ4c,aAAe,CAC5BhM,QAAS,CACRlF,KAAM,OACNmF,QAAS,CACRC,KAAM,WAGPgB,UAAW,CACVhB,KAAM,cAIT7J,QAAQ4V,IAAI7c,IACZ8c,IAASP,OACR,cAAC,IAAMQ,WAAP,UACC,cAAC,KAAD,UACC,cAAC,IAAD,CAAUvU,MAAOA,GAAjB,SACC,cAACwU,GAAA,EAAD,CAAehd,MAAOA,GAAtB,SACC,eAAC,KAAD,WACC,cAACid,GAAA,EAAD,IACA,cAAC,GAAD,eAMLC,SAASC,eAAe,SD+FpB,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMpf,MAAK,SAAAqf,GAClCA,EAAaC,kB","file":"static/js/main.98004248.chunk.js","sourcesContent":["export enum resultCodeEnum {\r\n\tsuccess = 0,\r\n\terror = 1,\r\n\tcaptcha = 10\r\n}\r\n\r\nexport type loginUserData = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n\tcaptcha: string\r\n}\r\n\r\nexport type profileDataType = {\r\n\tuserId: number\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tfullName: string | null\r\n\tfollowed: boolean\r\n\tphotos: photosType\r\n\tcontacts: {\r\n\t\t[facebook: string]: string | null\r\n\t\tinstagram: string | null\r\n\t\tvk: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t\ttwitter: string | null\r\n\t\twebsite: string | null\r\n\t\tyoutube: string | null\r\n\t}\r\n}\r\n\r\n\r\nexport type responseResultObject = {\r\n\tdata: {}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\nexport type photosType = {\r\n\tlarge: string\r\n\tsmall: string\r\n}\r\nexport type usersSearchType = {\r\n\tcurrentPage: number,\r\n\tpageSize: number,\r\n\tsearchTerm: string,\r\n\tfriend: string,\r\n}\r\nexport type allUsersItemType = {\r\n\tfollowed: boolean\r\n\tid: number\r\n\tname: string\r\n\tphotos: photosType\r\n\tstatus: null | string\r\n\tuniqueUrlName: null | string\r\n}\r\nexport type dialogsArrayType = {\r\n\thasNewMessages: boolean\r\n\tid: number\r\n\tlastDialogActivityDate: string\r\n\tlastUserActivityDate: string\r\n\tnewMessagesCount: number\r\n\tphotos: photosType\r\n\tuserName: string\r\n}\r\n\r\nexport type messagesArrayType = {\r\n\taddedAt: string\r\n\tbody: string\r\n\tdeletedByRecipient?: boolean\r\n\tdeletedBySender?: boolean\r\n\tdistributionId?: number | null\r\n\tid: string\r\n\tisSpam?: boolean\r\n\trecipientId: number\r\n\trecipientName?: string\r\n\tsenderId: number\r\n\tsenderName: string\r\n\ttranslatedBody: null\r\n\tviewed?: boolean\r\n}\r\nexport type postType = {\r\n\tuserId: number | null\r\n\tdate: string\r\n\tbody: string\r\n\tlikesCount: number\r\n\tisLiked: boolean\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true, //? withCredentials() makes your browser include cookies and authentication headers in your XHR request.\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: { \"API-KEY\": \"ca0951c1-2a9d-481e-a273-3d5f60141d92\" },\r\n});\r\n","import { loginUserData, resultCodeEnum } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\nconst login ={\r\n\temail: 'secondjump@bk.ru',\r\n\tpassword: 'qwaszx',\r\n\trememberMe: true\r\n}\r\n\t//апи\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get<responseIsAuthUser>(`auth/me`).then((res) => res.data);\r\n\t},\r\n\tlogin(loginUserData: loginUserData) {\r\n\t\treturn instance.post<responseLoginUser>('/auth/login', login).then((res) => res.data);\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete<responseLogoutUser>(`auth/login`).then(res => res.data);\r\n\t},\r\n\tgetCaptchaUrl() {\r\n\t\treturn instance.get<responseCaptchaUrl>(`security/get-captcha-url`).then(res => res.data)\r\n\t},\r\n};\r\n\r\n\t//типы\r\ntype responseIsAuthUser = {\r\n\tdata: { id: number, email: string, login: string }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n\tfieldsErrors:Array<string>\r\n}\r\ntype responseLoginUser = {\r\n\tdata: { userId: number }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n}\r\ntype responseLogoutUser = {\r\n\tresultCode: resultCodeEnum\r\n}\r\ntype responseCaptchaUrl = {\r\n\turl: string\r\n}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { authAPI } from '../api/auth-api'\r\nimport { loginUserData, resultCodeEnum } from '../../common/types/types'\r\nimport { AppDispatch } from '../store'\r\n\r\n//типы\r\nconst initialState = {\r\n\tid: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false ,\r\n\tcaptchaUrl: null as string | null,\r\n\terrorMessage: null as string | null\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetCaptchaUrl: (state, action) => { state.captchaUrl = action.payload },\r\n\t\tsetauthUserData: (state, action) => {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t},\r\n\t\tsetErrorMessage: (state, action) => { state.errorMessage = action.payload },\r\n\t},\r\n})\r\n//actions\r\nexport const { setCaptchaUrl, setauthUserData, setErrorMessage } = authSlice.actions\r\n//thunks\r\nexport const getCaptcha = () => async (dispatch: AppDispatch) => {\r\n\tconst { url } = await authAPI.getCaptchaUrl()\r\n\tdispatch(setCaptchaUrl(url))\r\n}\r\nexport const logout = () => async (dispatch: AppDispatch) => {\t\r\n\tconst response = await authAPI.logout()\r\n\tif (response.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setauthUserData({ id: null, email: null, login: null, isAuth: false }))\r\n\t}\r\n}\r\nexport const sendLogin = (loginUserData: loginUserData) => async (dispatch: AppDispatch) => {\r\n\tconst loginData = await authAPI.login(loginUserData)\r\n\tif (loginData.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tif (loginData.resultCode === resultCodeEnum.captcha) {\r\n\t\t\tdispatch(getCaptcha())\r\n\t\t}\r\n\t\tconst serverError = loginData.messages.length > 0 ? loginData.messages[0] : 'Some Error'\r\n\t\tdispatch(setErrorMessage(serverError))\r\n\t}\r\n}\r\nexport const getAuthUserData = () => async (dispatch: AppDispatch) => {\r\n\tconst response = await authAPI.me()\r\n\tif (response.resultCode === resultCodeEnum.success) { \r\n\t\tdispatch(setauthUserData({...response.data,isAuth:true})\r\n\t\t)\r\n\t}\r\n}\r\nexport default authSlice.reducer\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const loginStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: theme.spacing(5),\r\n\t\tflexDirection: 'column',\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tbackground: '#2f3136',\r\n\t\theight: '100%',\r\n\t\twidth: 500,\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: 20,\r\n\t\t'&>*': { paddingBottom: theme.spacing(1) },\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: 90,\r\n\t\twidth: '100%',\r\n\t\tcolor: '#61dafb',\r\n\t},\r\n\tcaptcha:\r\n\t{\r\n\t\tmargin: '0 auto',\r\n\t\twidth: '100px'\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red',\r\n\t}\r\n}))\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, photosType, profileDataType } from \"../../common/types/types\";\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: number | null) {\r\n\t\treturn instance.get<responseGetUserProfile>(`profile/` + userId).then((res) => res.data);\r\n\t},\r\n\tgetStatus(userId: number | null) {\r\n\t\treturn instance.get<string>(`profile/status/` + userId).then((res) => res.data); //запрос статуса отдельно с сервера\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance\r\n\t\t\t.put<responseResultObject>(`profile/status/`, { status: status })\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tupdateAvatar(photo: File) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", photo);\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile/photo`, formData, {\r\n\t\t\theaders: { \"Content-Type\": \"multipart/form-data\" },\r\n\t\t})\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tgetFollowStatus(userId: number | null) {\r\n\t\treturn instance.get<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\r\n\tupdateProfile(profile: profileDataType) {\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile`, profile).then((res) => res.data);\r\n\t},\r\n};\r\n\r\n//типы\r\ntype responseGetUserProfile = {\r\n\tuserId: number\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tfullName: string\r\n\tphotos: photosType\r\n\tcontacts: {\r\n\t\tfacebook: string | null\r\n\t\tinstagram: string | null\r\n\t\tvk: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t\ttwitter: string | null\r\n\t\twebsite: string | null\r\n\t\tyoutube: string | null\r\n\t}\r\n}\r\ntype responseUpdatePhoto = {\r\n\tdata: {\r\n\t\tphotos: photosType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\n","import { responseResultObject ,allUsersItemType } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number, pageSize: number, searchTerm: string, friend: string) {\r\n\t\treturn instance.get<responseGetUsers>(`users?page=${currentPage}&count=${pageSize}&term=${searchTerm}&friend=${friend}`)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tfollowAPI(userId: number) {\r\n\t\treturn instance.post<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\tunFollowAPI(userId: number) {\r\n\t\treturn instance.delete<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ntype responseGetUsers = {\r\n\terror: boolean\r\n\titems: Array<allUsersItemType>\r\n\ttotalCount: number\r\n}","import { profileAPI } from \"../api/profile-api\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { postType, profileDataType, resultCodeEnum } from '../../common/types/types'\r\nimport { posts } from \"../../common/posts\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\nexport const profileSlice = createSlice({\r\n\tname: 'profile',\r\n\tinitialState: {\r\n\t\tauthUser: {} as profileDataType,\r\n\t\tprofile: {} as profileDataType,\r\n\t\tstatus: \"\",\r\n\t\tposts: posts as Array<postType>,\r\n\t\tisLoading: true,\r\n\t\tisError: '' as string\r\n\t},\r\n\treducers: {\r\n\t\tsetUserProfile: (state, { payload }) => { state.profile = payload },\r\n\t\tsetUserStatus: (state, { payload }) => { state.status = payload },\r\n\t\tsetauthUser: (state, { payload }) => { state.authUser = payload },\r\n\t\tsetNewAvatar: (state, { payload }) => { state.authUser.photos = state.profile.photos = payload },\r\n\t\tsetUserFollowStatus: (state, { payload }) => { state.profile = { ...state.profile, followed: payload } },\r\n\t\tsetPost: (state, { payload }) => {\r\n\t\t\tstate.posts.push(payload)\r\n\t\t},\r\n\t\tsetLike: (state, { payload }) => {\r\n\t\t\tconst item = state.posts[payload.idx]\r\n\t\t\titem.isLiked = payload.like.checked\r\n\t\t\tpayload.like.checked ? ++item.likesCount : --item.likesCount\r\n\t\t},\r\n\t\tsetIsLoading: (state, {payload}) => { state.isLoading = payload },\r\n\t\tsetIsError: (state, {payload}) => { state.isError = payload }\r\n\t}\r\n})\r\n//action\r\nexport const { setIsError, setIsLoading, setLike, setPost, setUserFollowStatus, setUserProfile, setUserStatus, setauthUser, setNewAvatar } = profileSlice.actions;\r\n//thunk\r\nexport const getUserProfile = (id: number) => async (dispatch: AppDispatch) => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tconst profileData = await profileAPI.getProfile(id)\r\n\t\tconst profileStatus = await profileAPI.getStatus(id)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(id)\r\n\t\tdispatch(setUserProfile(profileData))\r\n\t\tdispatch(setUserStatus(profileStatus))\r\n\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t}\r\n\tcatch (error) {\r\n\t\tdispatch(setIsError(error))\r\n\t}\r\n\tfinally {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\nexport const getAuthUser = (id: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.getProfile(id)\r\n\tdispatch(setauthUser(data))\r\n}\r\nexport const updateAvatar = (file: File) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateAvatar(file)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setNewAvatar(data.data.photos))\r\n\t}\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateStatus(status)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setUserStatus(status))\r\n\t}\r\n}\r\nexport const putNewProfile = (profile: profileDataType) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateProfile(profile)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getUserProfile(profile.userId))\r\n\t\tdispatch(getAuthUser(profile.userId))\r\n\t}\r\n}\r\nexport default profileSlice.reducer;\r\n\r\n\r\n\r\n","export const posts = [{\r\n\tuserId: null,\r\n\tbody: \"Hello world!\",\r\n\tdate: '10/10/20',\r\n\tlikesCount: 14,\r\n\tisLiked: true,\r\n},\r\n{\r\n\tuserId: 1,\r\n\tbody: \"Lorem uae odit blanditiis temporibusinus odio consequatur placeat accusamus ex\",\r\n\tdate: '8/11/20',\r\n\tlikesCount: 1,\r\n\tisLiked: false,\r\n},\r\n{\r\n\tuserId: null,\r\n\tbody: \"Lorem ipsum dolor sit amet, ct blanditiis temporibus hic ipsum eaque, totam magnam minus eum dolorum reprehenderit rem odio consequatur placeat accusamus ex\",\r\n\tdate: '10/12/20',\r\n\tlikesCount: 66,\r\n\tisLiked: false,\r\n}]","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { allUsersItemType } from \"../../common/types/types\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { setUserFollowStatus } from \"./profile-reducer\";\r\n\r\nconst initialState = {\r\n\tusers: [] as Array<allUsersItemType>,\r\n\tpageSize: 100,\r\n\ttotalUsersCount: 5000,\r\n\tcurrentPage: 0,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [] as number[],\r\n\tfilter: {\r\n\t\tsearchTerm: \"\",\r\n\t\tfriend: 'null',\r\n\t}\r\n}\r\n\r\nexport const usersSlice = createSlice({\r\n\tname: \"users\",\r\n\tinitialState\r\n\t,\r\n\treducers: {\r\n\t\tsetIsFetching: (state, action) => { state.isFetching = action.payload; },\r\n\t\tsetUsers: (state, action) => { state.users = action.payload; },\r\n\t\tsetCurrentPage: (state, action) => { state.currentPage = action.payload; },\r\n\t\tsetTotalUsersCount: (state, action) => { state.totalUsersCount = action.payload; },\r\n\t\ttoggleFollow: (state, { payload }) => {\r\n\t\t\tstate.users = state.users.map(user => {\r\n\t\t\t\tif (user.id === payload) { return { ...user, followed: !user.followed } }\r\n\t\t\t\treturn user\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetFollowingInProgress: (state, { payload: { isFetching, userId } }) => {\r\n\t\t\tstate.followingInProgress = isFetching ? [...state.followingInProgress, userId]\r\n\t\t\t\t: state.followingInProgress.filter(id => id !== userId)\r\n\t\t},\r\n\t\tsetPageSize: (state, { payload }) => {\r\n\t\t\tstate.pageSize = payload\r\n\t\t\tstate.currentPage = 0\r\n\t\t},\r\n\t\tsetFilter: (state, { payload }) => { \r\n\t\t\tstate.currentPage = 0\r\n\t\t\tstate.filter = { ...state.filter, ...payload }\r\n\t\t},\r\n\t}\r\n});\r\n//actions\r\nexport const { setFilter,\r\n\tsetCurrentPage,\r\n\tsetPageSize,\r\n\tsetIsFetching,\r\n\tsetUsers,\r\n\tsetTotalUsersCount,\r\n\ttoggleFollow,\r\n\tsetFollowingInProgress,\r\n} = usersSlice.actions;\r\n//thunk\r\nexport const getUsers = (page:number, pageSize:number, searchTerm:string, friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tdispatch(setCurrentPage(page));\r\n\t\tconst data = await usersAPI.getUsers(page + 1, pageSize, searchTerm, friend);\r\n\t\tdispatch(setIsFetching(false));\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n\t};\r\n};\r\nexport const getFriends = (friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tconst data = await usersAPI.getUsers(1, 100, '', friend);\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setIsFetching(false));\r\n\r\n\t}\r\n}\r\nexport const followUser = (userId:number, follow:boolean) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setFollowingInProgress({ isFetching: true, userId }))\r\n\t\tconst response = !follow ? await usersAPI.followAPI(userId) : await usersAPI.unFollowAPI(userId)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(userId)\r\n\t\tif (response.resultCode === 0) {\r\n\t\t\tdispatch(toggleFollow(userId))\r\n\t\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t\t}\r\n\t\tdispatch(setFollowingInProgress({ isFetching: false, userId }))\r\n\t}\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\n\r\n\r\nexport const appSlice = createSlice({\r\n\tname: \"app\",\r\n\tinitialState: {\r\n\t\tisInit: false,\r\n\t},\r\n\treducers: {\r\n\t\tsetInit: (state) => {\r\n\t\t\tstate.isInit = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n//action\r\nexport const { setInit } = appSlice.actions;\r\n//thunk\r\nexport const init = () => (dispatch: AppDispatch) => {\r\n\tdispatch(getAuthUserData()).then(() => {\r\n\t\tdispatch(setInit());\r\n\t});\r\n};\r\n\r\nexport default appSlice.reducer;\r\n\r\n\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, messagesArrayType, dialogsArrayType } from \"../../common/types/types\";\r\n\r\nexport const dialogsAPI = {\r\n\tgetDialogs() {\r\n\t\treturn instance.get(`/dialogs`).then(res => res.data)\r\n\r\n\t},\r\n\tsendMessage(userId: number, body: string) {\r\n\t\treturn instance.post<Array<dialogsArrayType>>(`/dialogs/${userId}/messages`, { body: body }).then(res => res.data)\r\n\t},\r\n\tgetMessages(userId: number) {\r\n\t\treturn instance.get<responseSendMsg>(`/dialogs/${userId}/messages`).then(res => res.data)\r\n\t},\r\n\tdeleteMessages(messageId: number) {\r\n\t\treturn instance.delete(`/dialogs/messages/${messageId}`).then(res => res.data)\r\n\t},\r\n\tgetNewMessagesCount() {\r\n\t\treturn instance.get<responseGetMessages>(`/dialogs/messages/new/count`).then(res => res.data)\r\n\t},\r\n\tstartDialog(userId: number) {\r\n\t\treturn instance.put<responseResultObject>(`/dialogs/${userId}`).then(res => res.data)\r\n\t},\r\n\tdeleteMessage(messageId: string) {\r\n\t\treturn instance.delete<responseResultObject>(`/dialogs/messages/${messageId}\r\n\t\t`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ntype responseSendMsg = {\r\n\tdata: {\r\n\t\tmessage: messagesArrayType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\ntype responseGetMessages = {\r\n\terror: boolean\r\n\titems: Array<messagesArrayType>\r\n\ttotalCount: number\r\n}\r\n\r\n","import { dialogsArrayType, messagesArrayType } from '../../common/types/types'\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { dialogsAPI } from \"../api/dialogs-api\";\r\nimport { AppDispatch } from '../store';\r\n\r\n//типы\r\nconst initialState = {\r\n\tdialogs: [] as dialogsArrayType[],\r\n\tmessages: [] as messagesArrayType[] ,\r\n\tdialogsFetching: true,\r\n\tmessagesFething: true,\r\n\tnewMessagesCount: null as number | null\r\n};\r\n\r\nexport const dialogsSlice = createSlice({\r\n\tname: \"dialogs\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetDialogsFetching: (state, { payload }) => { state.dialogsFetching = payload },\r\n\t\tsetMessagesFetching: (state, { payload }) => {\r\n\t\t\tstate.messagesFething = payload\r\n\t\t},\r\n\t\tsetDialogs: (state, { payload }) => {\r\n\t\t\tstate.dialogs = payload\r\n\t\t},\r\n\t\tsetMessages: (state, { payload }) => {\r\n\t\t\tstate.messages = payload.items\r\n\t\t},\r\n\t\tsetNewMessagesCount: (state, { payload }) => {\r\n\t\t\tstate.newMessagesCount = payload\r\n\t\t},\r\n\t\tsetDeletedMessage(state, { payload }) {\r\n\t\t\tstate.messages = state.messages.filter(item => item.id !== payload)\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//actions\r\nexport const { setDeletedMessage, setNewMessagesCount, setMessagesFetching, setDialogsFetching, setDialogs, setMessages } = dialogsSlice.actions;\r\n//thunks\r\nexport const getNewMessagesCount = () => async (dispatch: AppDispatch) => {\r\n\tconst count = await dialogsAPI.getNewMessagesCount()\r\n\tdispatch(setNewMessagesCount(count))\r\n}\r\nexport const getDialogs = () => async (dispatch: AppDispatch) => {\r\n\tdispatch(setDialogsFetching(true));\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs();\r\n\tdispatch(setDialogsFetching(false));\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const getMessages = (id: number) => async (dispatch: AppDispatch) => {\r\n\tdispatch(setMessagesFetching(true));\r\n\tconst response = await dialogsAPI.getMessages(id);\r\n\tdispatch(setMessagesFetching(false));\r\n\tdispatch(setMessages(response))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const sendMessage = (userId: number, body: string) => async (dispatch: AppDispatch) => {\r\n\tawait dialogsAPI.sendMessage(userId, body)\r\n\tdispatch(getMessages(userId))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const deleteMessage = (messageId: string, userId: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await dialogsAPI.deleteMessage(messageId)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(getMessages(userId))\r\n\t\tdispatch(setDeletedMessage(messageId))\r\n\t}\r\n}\r\n\r\nexport default dialogsSlice.reducer;\r\n","const subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'","\r\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../api/chat-api'\r\nimport { v1 } from 'uuid'\r\nimport { AppDispatch } from '../store'\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & { id: string }\r\n\r\nexport const chatSlice = createSlice({\r\n\tname: \"chat\",\r\n\tinitialState: {\r\n\t\tmessages: [] as ChatMessageType[],\r\n\t\tstatus: 'pending' as StatusType\r\n\t},\r\n\treducers: {\r\n\t\tmessagesReceived: (state, { payload }) => { \r\n\t\t\tif (state.messages.length != payload.length)  {state.messages = [...state.messages, ...payload.map((m: any) => ({ ...m, id: v1() }))]\r\n\t\t\t\t.filter((m, index, array) => index >= array.length - 100)\r\n\t\t}},\r\n\t\tstatusChanged: (state, { payload }) => {\r\n\t\t\tstate.status = payload\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nexport const { messagesReceived, statusChanged } = chatSlice.actions;\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\n\r\n\r\nconst newMessageHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_newMessageHandler === null) {\r\n\t\t_newMessageHandler = (messages) => {\r\n\t\t\tdispatch(messagesReceived(messages))\r\n\t\t}\r\n\t}\r\n\treturn _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\n\r\n\r\nconst statusChangedHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_statusChangedHandler === null) {\r\n\t\t_statusChangedHandler = (status) => {\r\n\t\t\tdispatch(statusChanged(status))\r\n\t\t}\r\n\t}\r\n\treturn _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.start()\r\n\tchatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\tchatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string) => async () => {\r\n\tchatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatSlice.reducer\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport chatReducer from \"./reducers/chat-reducer\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tapp: appReducer,\r\n\t\tusers: usersReducer,\r\n\t\tchat:chatReducer,\r\n\t\tauth: authReducer,\r\n\t\tprofile: profileReducer,\r\n\t\tdialogs: dialogsReducer,\r\n\t\t\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false, //!почитать \r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport default store","import { useFormik } from 'formik';\r\nimport { sendLogin } from '../../app/reducers/auth-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextField, Button, Checkbox, Grid, FormControlLabel, Typography } from '@material-ui/core/';\r\nimport VpnKeyRoundedIcon from '@material-ui/icons/VpnKeyRounded';\r\nimport * as Yup from 'yup';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { loginStyles } from './login_styles';\r\nimport { RootState } from '../../app/store';\r\nimport { loginUserData } from '../../common/types/types';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\tconst { captchaUrl, errorMessage } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = loginStyles();\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false,\r\n\t\t\tcaptcha: '',\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\temail: Yup.string().email('Insert correct email ').required('Required'),\r\n\t\t\tpassword: Yup.string()\r\n\t\t\t\t.min(4, 'Password must be longer than 4 characters.')\r\n\t\t\t\t.max(12, 'Password must be shorter than 12 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (loginUserData: loginUserData) => {\r\n\t\t\tdispatch(sendLogin(loginUserData));\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<Grid container component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<ExitToAppIcon className={classes.icon} />\r\n\t\t\t<Typography variant='h6' className={classes.error}>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t</Typography>\r\n\t\t\t<TextField label='Email' onBlur={handleBlur} size='small' onChange={handleChange} id='email' name='email' value={values.email} />\r\n\t\t\t{errors.email && touched.email && <div className={classes.error}>{errors.email}</div>}\r\n\t\t\t<TextField\r\n\t\t\t\tlabel='Password'\r\n\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\tsize='small'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvariant='standard'\r\n\t\t\t\tid='password'\r\n\t\t\t\tname='password'\r\n\t\t\t\tvalue={values.password}\r\n\t\t\t/>\r\n\t\t\t{errors.password && touched.password && <div className={classes.error}>{errors.password}</div>}\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={<Checkbox checked={values.rememberMe} onChange={handleChange} name='rememberMe' color='primary' />}\r\n\t\t\t\tlabel='Remember me'\r\n\t\t\t/>\r\n\t\t\t{captchaUrl && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<img className={classes.captcha} src={captchaUrl} width='100px' alt='captcha' />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tlabel='Captcha'\r\n\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tid='captcha'\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tname='captcha'\r\n\t\t\t\t\t\tvalue={values.captcha}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<Button variant='contained' startIcon={<VpnKeyRoundedIcon />} size='large' type='submit' color='primary'>\r\n\t\t\t\tLog In\r\n\t\t\t</Button>\r\n\t\t\t<p>Для тестового просмотра используйте пару логин/пароль: </p>\r\n\t\t\t<p> free@samuraijs.com / free</p>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import  './preloader2.scss'\r\n\r\nexport const Preloader2 = () => {\r\n\treturn (\r\n<div className=\"container\">\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/defaultAvatar.832028ea.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usersList = makeStyles((theme) => ({\r\n\tname: {\r\n\t\tcolor: 'black',\r\n\t\tfontSize: 15,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\troot: {\r\n\t\toverflowY: 'scroll',\r\n\t\twidth: '100%',\r\n\t\theight: 430,\r\n\t\tpaddingLeft: 30,\r\n\t},\r\n\tcard: {\r\n\t\theight: 150,\r\n\t\tbackgroundColor:'grey',\r\n\r\n\t\t'&>:hover': {\r\n\t\t\tbackground: 'linear-gradient(to right, #8e9eab, #eef2f3)',\r\n\t\t},\r\n\t},\r\n\tcardmedia: {\r\n\t\theight: 90,\r\n\t},\r\n\tnotfound:{\r\n\t\tcolor: 'white',\r\n\t\t textAlign: 'center', \r\n\t\t fontSize: 50, \r\n\t\t margin: '0 auto' \r\n\t}\r\n}))\r\n","import { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { followUser } from '../../app/reducers/users-reducer';\r\nimport React from 'react';\r\nimport { RootState } from '../../app/store';\r\n\r\ninterface IProps {\r\n\tid: number,\r\n\tfollowed: boolean\r\n}\r\n//\r\nexport const FriendButton: React.FC<IProps> = ({ id, followed }) => {\r\n\tconst followingInProgress = useSelector((state: RootState) => state.users.followingInProgress);\r\n\tconst dispatch = useDispatch();\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tcolor={followed ? 'secondary' : 'primary'}\r\n\t\t\tfullWidth\r\n\t\t\tvariant='contained'\r\n\t\t\tdisabled={followingInProgress.some((item) => item === id)}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tdispatch(followUser(+id, followed));\r\n\t\t\t}}>\r\n\t\t\t{followed ? 'Unfriend' : 'Friend'}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\n","import { Preloader2 } from '../../../common/preloader2';\r\nimport defaultAvatar from '../../../common/assets/img/defaultAvatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { usersList } from './usersList_styles';\r\nimport { allUsersItemType } from '../../../common/types/types'\r\nimport { FriendButton } from '../../../components/FriendButton/FriendButton';\r\n\r\n\r\n\r\ntype PropsType = {\r\n\tusers: allUsersItemType[],\r\n\tisFetching: boolean\r\n}\r\nexport const UsersList: React.FC<PropsType> = React.memo(({ users, isFetching }) => {\r\n\tconst classes = usersList();\r\n\treturn isFetching ? (\r\n\t\t<Preloader2 />\r\n\t) : (\r\n\t\t\t<Grid container spacing={4} className={classes.root}>\r\n\t\t\t\t{users.length === 0 && <div className={classes.notfound}>User not found</div>}\r\n\t\t\t\t{users &&\r\n\t\t\t\t\tusers\r\n\t\t\t\t\t\t.map((user) => (\r\n\t\t\t\t\t\t\t<Grid item xs={2} key={user.id}>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.card}>\r\n\t\t\t\t\t\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.cardmedia}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\timage={user?.photos.large || defaultAvatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='user photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.name}>{user?.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<FriendButton id={user.id} followed={user.followed} />\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t);\r\n});\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // дебаунс для инпутов\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usersFilter = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 10,\r\n\t},\r\n}))\r\n","import { FormControl, FormControlLabel, Grid, Radio, RadioGroup, TextField } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsers, setCurrentPage, setFilter, setPageSize } from '../../../app/reducers/users-reducer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { useDebounce } from '../../../common/useDebounce';\r\nimport { RootState } from '../../../app/store';\r\nimport { usersFilter } from './usersFilter_styles'\r\n\r\n\r\nexport const UsersFilter: React.FC = () => {\r\n\tconst { currentPage, pageSize, totalUsersCount, filter } = useSelector((state: RootState) => state.users);\r\n\tconst classes = usersFilter();\r\n\tconst dispatch = useDispatch();\r\n\tconst debouncedSearchTerm = useDebounce(filter.searchTerm, 1000);\r\n\tconst debouncedCurrentPage = useDebounce(currentPage, 500)\r\n\t// получения списка пользователей и обновление его при изменении параметров\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(debouncedCurrentPage, pageSize, debouncedSearchTerm, filter.friend));\r\n\t}, [dispatch, debouncedCurrentPage, pageSize, debouncedSearchTerm, filter.friend]);\r\n\r\n\r\n\tconst radioValues = [\r\n\t\t{ value: 'null', label: 'All' },\r\n\t\t{ value: 'true', label: 'Friends' },\r\n\t\t{ value: 'false', label: 'Without friend' },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t<TextField label='Search people'\r\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\tdispatch(setFilter({ searchTerm: event.target.value }))\r\n\t\t\t\t}}\r\n\t\t\t\tid='searchTerm'\r\n\t\t\t\tname='searchTerm'\r\n\t\t\t\tvalue={filter.searchTerm} />\r\n\t\t\t<FormControl component='fieldset' >\r\n\t\t\t\t<RadioGroup row aria-label='position'\r\n\t\t\t\t\tname='position'\r\n\t\t\t\t\tvalue={filter.friend}\r\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => dispatch(setFilter({ friend: e.target.value }))}  >\r\n\t\t\t\t\t{radioValues.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormControlLabel key={item.label}\r\n\t\t\t\t\t\t\t\tvalue={item.value}\r\n\t\t\t\t\t\t\t\tcontrol={<Radio size='small' color='primary' />}\r\n\t\t\t\t\t\t\t\tlabel={item.label}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<TablePagination\r\n\t\t\t\tcomponent='div'\r\n\t\t\t\tcount={totalUsersCount}\r\n\t\t\t\tpage={currentPage}\r\n\t\t\t\tonChangePage={(e, newPage: number) => { dispatch(setCurrentPage(newPage)) }}\r\n\t\t\t\trowsPerPage={pageSize}\r\n\t\t\t\tonChangeRowsPerPage={(event: React.ChangeEvent<HTMLInputElement>) => { dispatch(setPageSize(parseInt(event.target.value, 10))) }}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { UsersList } from './UsersList/UsersList';\r\nimport { UsersFilter } from './UsersFilter/UsersFilter';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nexport const Users = () => {\r\n\tconst { users, isFetching } = useSelector((state:RootState) => state.users);\r\n\treturn (\r\n\t\t<>\t<div style={{background: '#2f3136',borderRadius:\"0px 0px 15px 15px\",height:600,position:'relative'}}>\r\n\t\t\t<UsersFilter />\r\n\t\t\t<UsersList users={users} isFetching={isFetching} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileMain = makeStyles((theme) => ({\r\n\t\r\n\troot: {\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '0 0 0 15px',\r\n\t\theight: 600,\r\n\t\talignItems: 'center',\r\n\t\tpadding: 15\r\n\t},\r\n\r\n\tfullName: {\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: 20,\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-all',\r\n\t},\r\n\tfriends: {\r\n\t\tborderTop: '1px solid grey',\r\n\t\tpaddingTop: 5,\r\n\t\twidth: '100%'\r\n\t},\r\n\tfriendButton: {\r\n\t\tmargin: 20,\r\n\t\twidth: 200\r\n\r\n\t},\r\n\tpmButton: {\r\n\t\tmargin: 20,\r\n\t\tcolor: 'black',\r\n\t\t\r\n\t\twidth: 200\r\n\t}\r\n\r\n}))\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileFreinds = makeStyles((theme) => ( {\r\n\tfriendsWrapper: {\r\n\t\tmargin: '15px 0',\r\n\t\talignItems: 'flex-start'\r\n\t},\r\n\tname: {\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-word'\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tmarginBottom:10\r\n\t},\r\n\tfriendItemWrapper: {\r\n\t\tcolor: 'grey',\r\n\t\tpadding: 10,\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: theme.palette.primary.main\r\n\t\t},\r\n\t},\r\n\tfriendsLabel: {\r\n\t\tcolor: 'grey',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 13,\r\n\t\tfontWeight: 700,\r\n\t},\r\n}));\r\n\r\n\r\n\r\n","import { Grid, Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { profileFreinds } from './profileFriends_style';\r\nimport React from 'react'\r\nimport { randomArray } from '../../../../common/randomArray';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../app/store';\r\nimport { allUsersItemType } from '../../../../common/types/types';\r\nimport { useAppDispatch } from '../../../../app/store';\r\nimport { getFriends, setFilter } from '../../../../app/reducers/users-reducer';\r\n\r\nexport const ProfileFriends: React.FC = React.memo(() => {\r\n\tconst users = useSelector((state: RootState) => state.users.users)\r\n\tconst randomUsers = randomArray(users, 6) as allUsersItemType[];\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tReact.useEffect(() => { dispatch(getFriends('true')) }\r\n\t\t, []);\r\n\tconst classes = profileFreinds();\r\n\treturn (\r\n\t\t<Grid container justify='center'>\r\n\t\t\t<p className={classes.friendsLabel}> Friends: <Link onClick={() => dispatch(setFilter({ friend: 'true' }))} to={`/users`}>{users.length}</Link> </p>\r\n\t\t\t<Grid container className={classes.friendsWrapper}>\r\n\t\t\t\t{randomUsers.map((item) => (\r\n\t\t\t\t\t<Grid item xs={4} key={item.id} >\r\n\t\t\t\t\t\t<Link to={`/profile/${item.id}`}>\r\n\t\t\t\t\t\t\t<Grid container className={classes.friendItemWrapper} >\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={item.photos?.large} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.name}>{item.name}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","export const randomArray = (arr , len)  => {  \r\n\tconst sorted = arr.slice().sort(() => Math.random() - 0.5);\r\n\tsorted.length = len\r\n\treturn sorted;\r\n}\r\n\r\n// перемешать и вытащить N рандомных элементов из массива\r\n//array is frozen in strict mode, you'll need to copy the array before sorting it","import { Badge, makeStyles, withStyles } from '@material-ui/core';\r\nexport const profileAvatar = makeStyles((theme) => ({\r\n\tavatar: {\r\n\t\twidth: 150,\r\n\t\theight: 150,\r\n\t},\r\n\tuploadButton: {\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.secondary.main\r\n\t\t}\r\n\t}\r\n\r\n}));\r\nexport const StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 140,\r\n\t\tright: 5,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\nimport { updateAvatar } from '../../../../app/reducers/profile-reducer';\r\nimport { profileAvatar, StyledBadge } from './profileAvatar_styles';\r\nimport React from 'react';\r\nimport { profileDataType } from '../../../../common/types/types';\r\nimport { useAppDispatch } from '../../../../app/store';\r\n\r\ntype PropsType = {\r\n\tprofile: profileDataType\r\n\trouterId: number\r\n}\r\n\r\n\r\nexport const ProfileAvatar: React.FC<PropsType> = React.memo(({ profile, routerId }) => {\r\n\tconst classes = profileAvatar();\r\n\tconst dispatch = useAppDispatch();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<StyledBadge\r\n\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\tid='contained-button-file'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\tonChange={(e) => e.target.files && dispatch(updateAvatar(e.target.files[0]))}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor='contained-button-file'>\r\n\t\t\t\t\t\t\t\t<IconButton color='primary' className={classes.uploadButton} component='span'>\r\n\t\t\t\t\t\t\t\t\t<AddAPhotoOutlinedIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t<Avatar className={classes.avatar} alt='user foto' src={profile.photos?.large} />\r\n\t\t\t\t</StyledBadge>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Avatar className={classes.avatar} alt='user foto' src={profile.photos?.large} />\r\n\t\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n","import { updateStatus } from '../../../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport {  useAppDispatch } from '../../../../app/store';\r\n\r\nexport const useStatus = () => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState('');\r\n\tconst status = useSelector((state) => state.profile.status);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tsetUserStatus(status);\r\n\t}, [status]);\r\n\r\n\r\n\tconst deactivateMode = (action) => () => {\r\n\t\tif (!action) {\r\n\t\t\tsetUserStatus(status);\r\n\t\t\tsetEditMode(false);\r\n\t\t} else {\r\n\t\t\tsetEditMode(false);\r\n\t\t\tdispatch(updateStatus(userStatus));\r\n\t\t}\r\n\t};\r\n\tconst onStatusChange = (e => {\r\n\t\tsetUserStatus(e.target.value);\r\n\t})\r\n\r\n\r\n\treturn [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status]\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileStatus = makeStyles((theme) => ({\r\n\tstatus: {\r\n\t\tcursor: 'pointer',\r\n\t\tfontSize: 16,\r\n\t\t\"&:hover\": { color: theme.palette.secondary.main },\r\n\t\tcolor: theme.palette.primary.main,\r\n\t\twordBreak: 'break-word',\r\n\t\tpadding: 10,\r\n\t},\r\n\ticon: {\r\n\t\tmargin:'0 5px 0 10px',\r\n\t\tfontSize: 20,\r\n\t\tcursor:'pointer',\r\n\t},\r\n\tinput: {\r\n\t\twidth: 300,\r\n\t\tfontSize: 20,\r\n\t\tmarginRight:10,\r\n\t\ttextAlign:'center'\r\n\t\t\r\n\t},\r\n\troot:{\r\n\t\tminHeight:70,\r\n\t\tpadding:5,\r\n\t}\r\n}))\r\n","import React from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, InputBase } from '@material-ui/core';\r\nimport { useStatus } from './useStatus';\r\nimport { profileStatus } from './profileStatus_styles';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\nexport const ProfileStatus: React.FC<PropsType> = React.memo(({ routerId }) => {\r\n\tconst [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status] = useStatus();\r\n\tconst classes = profileStatus();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{editMode && !routerId ? (\r\n\t\t\t\t<Grid component='form' onSubmit={deactivateMode(true)}>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tvalue={userStatus}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<SaveIcon fontSize='small' color='primary' className={classes.icon} onClick={deactivateMode(true)}/>\r\n\t\t\t\t\t\t\t\t\t<CloseIcon fontSize='small' color='secondary'className={classes.icon}  onClick={deactivateMode(false)}/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={classes.status}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetEditMode(true);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t\t<span>{!routerId && <EditIcon className={classes.icon} color='inherit' />}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n});\r\n","import { profileMain } from './profileMain_styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ProfileFriends } from './ProfileFriends/ProfileFriends';\r\nimport { ProfileAvatar } from './ProfileAvatar/ProfileAvatar';\r\nimport React from 'react';\r\nimport { ProfileStatus } from './ProfileStatus/ProfileStatus';\r\nimport { FriendButton } from '../../../components/FriendButton/FriendButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../../app/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\n\r\nexport const ProfileMain: React.FC<PropsType> = ({ routerId }) => {\r\n\tconst profile = useSelector((state: RootState) => state.profile.profile);\r\n\r\n\tconst classes = profileMain();\r\n\treturn (\r\n\t\t<Grid container className={classes.root} direction='column' justify='space-around'>\r\n\t\t\t<ProfileAvatar profile={profile} routerId={routerId} />\r\n\t\t\t<Grid item className={classes.fullName}>\r\n\t\t\t\t{profile.fullName?.toUpperCase()}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<ProfileStatus routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<Grid item className={classes.friends}>\r\n\t\t\t\t\t<ProfileFriends />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{routerId && (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className={classes.friendButton}>\r\n\t\t\t\t\t\t\t\t\t<FriendButton id={routerId} followed={profile.followed} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t<Link to={`/messenger/${routerId}`}>\r\n\t\t\t\t\t\t\t\t\t\t<Button color='secondary' variant='contained' className={classes.pmButton} >\r\n\t\t\t\t\t\t\t\t\t\t\tWhite a message\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileInfoStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\theight: 600,\r\n\t\tmaxWidth: 300,\r\n\t\tpadding: 2,\r\n\t\tjustifyContent: 'space-around',\r\n\t\talignItems: 'center',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'grey', \r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tdescriptionLabel:{\r\n\t\tcolor:theme.palette.secondary.main,\r\n\t\tfontSize:16,\r\n\t\tfontWeight:700\r\n\t}\r\n}))\r\n","import React, { Dispatch } from 'react';\r\nimport { FormControlLabel, Grid, IconButton, Radio } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsSharp';\r\nimport { RootState } from '../../../app/store';\r\nimport { profileInfoStyles } from './profileInfo_styles'\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n\tsetEditForm: Dispatch<boolean>\r\n\trouterId: number\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo(({ setEditForm, routerId }) => {\r\n\tconst  profile  = useSelector((state: RootState) => state.profile.profile);\r\n\tconst isContacts = profile.contacts && Object.values(profile.contacts).find((i) => !!i);\r\n\tconst classes = profileInfoStyles();\r\n\tconst editHandler = () => {\r\n\t\tsetEditForm(true);\r\n\t};\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t{profile?.aboutMe && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<p className={classes.descriptionLabel}>About me:</p>\r\n\t\t\t\t\t<p>{profile?.aboutMe}</p>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{profile?.lookingForAJobDescription && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.descriptionLabel}> Skills: </p>\r\n\t\t\t\t\t<p>{profile?.lookingForAJobDescription}</p>\r\n\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tvalue='best'\r\n\t\t\t\t\t\tcontrol={<Radio checked={profile?.lookingForAJob} color='primary' disabled />}\r\n\t\t\t\t\t\tlabel='Looking for a job'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{isContacts && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.descriptionLabel}>Contacts:</p>\r\n\t\t\t\t\t{profile.contacts &&\r\n\t\t\t\t\t\tObject.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tprofile.contacts[key] && (\r\n\t\t\t\t\t\t\t\t\t<Grid key={key} item>\r\n\t\t\t\t\t\t\t\t\t\t<a href={`//${profile.contacts[key]}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t{profile.contacts[key]} </a>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{!routerId && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<IconButton onClick={editHandler} color='secondary'>\r\n\t\t\t\t\t\t<SettingsSharpIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileEditForm = makeStyles((theme) => ({\r\n\troot: {\r\n\t\talignItems: 'center',\r\n\t\theight: 600,\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tflexDirection: 'column'\r\n\t},\r\n\tleftBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\t\"&>*\": { margin: 30 }\r\n\r\n\t},\r\n\trightBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tjustifyContent: 'space-around'\r\n\t},\r\n\tcontacts: {\r\n\t\tmargin: 30\r\n\t},\r\n\tjob: {\r\n\r\n\t\tcolor: 'white',\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red'\r\n\t},\r\n\tbuttons: {\r\n\t\tmargin: 20,\r\n\t}\r\n}));","import { Grid, TextField, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { putNewProfile } from '../../../../app/reducers/profile-reducer';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { profileEditForm } from './profileEditForm_style';\r\nimport * as Yup from 'yup';\r\nimport { Dispatch } from 'react';\r\nimport { RootState } from '../../../../app/store';\r\n\r\ntype PropsType = {\r\n\tsetEditForm: Dispatch<boolean>\r\n}\r\nexport const ProfileEditForm: React.FC<PropsType> = ({ setEditForm }) => {\r\n\tconst { profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = profileEditForm();\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: profile,\r\n\t\tonSubmit: (e) => {\r\n\r\n\t\t\tdispatch(putNewProfile(e));\r\n\t\t\tsetEditForm(false);\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tfullName: Yup.string()\r\n\t\t\t\t.min(4, 'Name must be longer than 4 characters.')\r\n\t\t\t\t.max(30, 'Name must be shorter than 30 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t\taboutMe: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t\tlookingForAJobDescription: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t}),\r\n\t});\r\n\r\n\tconst contactsName = ['vk', 'facebook', 'github'];\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<Grid container direction='row' justify='center' alignItems='center'>\r\n\t\t\t\t<div className={classes.leftBlock}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> Name: </h2>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvalue={values?.fullName}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tplaceholder={'Enter your name'}\r\n\t\t\t\t\t\t\tid='fullName'\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.fullName && touched.fullName && <div className={classes.error}>{errors.fullName}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> About: </h2>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\trowsMax={2}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tvalue={values?.aboutMe}\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tid='aboutMe'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.aboutMe && touched.aboutMe && <div className={classes.error}>{errors.aboutMe}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> Skills: </h2>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\trowsMax={2}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={values?.lookingForAJobDescription}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tid='lookingForAJobDescription'\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{errors.lookingForAJobDescription && touched.lookingForAJobDescription && (\r\n\t\t\t\t\t\t\t<div className={classes.error}>{errors.lookingForAJobDescription}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.rightBlock}>\r\n\t\t\t\t\t<h2>Contacts:</h2>\r\n\t\t\t\t\t{contactsName.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tkey={item}\r\n\t\t\t\t\t\t\t\tclassName={classes.contacts}\r\n\t\t\t\t\t\t\t\tvalue={values?.contacts[item] || ''}\r\n\t\t\t\t\t\t\t\tname={'contacts.' + item}\r\n\t\t\t\t\t\t\t\tid={item}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tlabel={item}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<div>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tclassName={classes.job}\r\n\t\t\t\t\tlabelPlacement='start'\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Checkbox size='small' checked={values?.lookingForAJob} onChange={handleChange} color='primary' id='lookingForAJob' />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel='Are you looking for a job?'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t<AddRoundedIcon color='primary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={() => setEditForm(false)} type='submit'>\r\n\t\t\t\t\t\t<CloseRoundedIcon color='secondary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nexport const dateHelper = (date,timeZone=10800000) => {\r\n\t// работает,но че-т хрень какая-то)\r\n\t\r\n\tconst ruTime = new Date(date).getTime()\r\n\tconst currentTime = new Date(ruTime+timeZone).toLocaleTimeString('ru', {hour: '2-digit', minute:'2-digit'})\r\n\tconst formatedDate = new Date(ruTime+timeZone).toLocaleDateString()\r\n\tconst currentDate = new Date().toLocaleDateString()\r\n\tconst yesterdayDate = new Date(Date.now() - 86400000+ timeZone).toLocaleDateString()\r\n\t\r\n\r\n\r\n\tconst visibleDate =\r\n\t\tformatedDate === currentDate ?\r\n\t\t\t'today ' + currentTime\r\n\t\t\t:\r\n\t\t\tformatedDate === yesterdayDate ?\r\n\t\t\t\t'yesterday ' + currentTime\r\n\t\t\t\t:\r\n\t\t\t\tformatedDate\r\n\r\n\treturn visibleDate\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profilePosts = makeStyles((theme) => ({\r\n\troot: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 450,\r\n\t\twidth: '100%',\r\n\r\n\t},\r\n\tcontainer: {\r\n\t\tpaddingRight: 30,\r\n\t\tcolor: 'grey',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\toverflowY: 'auto',\r\n\t\twidth: '100%',\r\n\t\twordBreak: 'break-word'\r\n\r\n\t},\r\n\tpostWrapper: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tbackgroundColor: '#202225',\r\n\t\tpadding: 10,\r\n\t\tmarginTop: 20,\r\n\t\tborderRadius: 5\r\n\r\n\t},\r\n\tdate: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: 9\r\n\t},\r\n\tbody: {\r\n\t\twidth: '100%',\r\n\t\tpaddingTop: 40\r\n\t},\r\n\tavatar: {\r\n\t\tmarginRight: 20\r\n\t},\r\n\tfullName: {\r\n\t\tmarginRight: 10,\r\n\t\tcolor: 'orange'\r\n\t}\r\n}));","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../app/store\";\r\nimport { dateHelper } from '../../../../common/dateHelper'\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\r\nimport { Avatar, Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { useAppDispatch } from '../../../../app/store';\r\nimport { setLike } from \"../../../../app/reducers/profile-reducer\";\r\nimport { profilePosts } from \"./profilePosts_styles\";\r\n\r\nexport const ProfilePosts: React.FC = () => {\r\n\tconst { authUser, posts, profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = profilePosts()\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t{posts?.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={item.date} className={classes.postWrapper}>\r\n\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={item.userId ? authUser.photos?.small : profile.photos?.small} />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Grid container direction='row' alignItems='center' >\r\n\t\t\t\t\t\t\t\t\t<p className={classes.fullName}>{item.userId ? authUser.fullName : profile.fullName}</p>\r\n\t\t\t\t\t\t\t\t\t<p className={classes.date}>{dateHelper(item.date, 0)}</p>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<span className={classes.body}>{item.body}</span>\r\n\t\t\t\t\t\t\t\t<Grid container alignItems='center'>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => dispatch(setLike({ like: e.target, idx }))}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={item.isLiked} icon={<FavoriteBorder />} checkedIcon={<Favorite />} name='checkedH\t' />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={item.likesCount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileWall = makeStyles((theme) => ({\r\n\r\n\troot: {\r\n\t\tbackgroundColor: '#2f3136',\r\n\t\theight: 600,\r\n\t\tpadding: 30,\r\n\t\tborderRadius: '0 0 15px 0'\r\n\t},\r\n\twrapper: {\r\n\t\tbackgroundColor: '#202225',\r\n\t\tmarginBottom: 20,\r\n\t\tcolor: 'white',\r\n\t\tpadding: 10,\r\n\t\twidth: '95%',\r\n\t\tborderRadius: 8,\r\n\t\twordBreak: 'break-word'\r\n\t},\r\n\tinput: {\r\n\t\twidth: '90%',\r\n\t\tmarginLeft: 20\r\n\t},\r\n\tinputWrapper: {\r\n\t\tmarginLeft: 20\r\n\t}\r\n}))","import { Avatar, Grid, IconButton, InputBase } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport { RootState } from '../../../app/store';\r\nimport { useAppDispatch } from '../../../app/store';\r\nimport { setPost } from '../../../app/reducers/profile-reducer';\r\nimport { ProfilePosts } from './ProfilePost/ProfilePosts';\r\nimport { profileWall } from './profileWall_styles';\r\nimport React from 'react'\r\n\r\n\r\n\r\nexport const ProfileWall: React.FC = React.memo(() => {\r\n\tconst authUser = useSelector((state: RootState) => state.profile.authUser);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = profileWall()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tbody: '',\r\n\t\t},\r\n\t\tonSubmit: ({ body }) => {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetPost({\r\n\t\t\t\t\tuserId: authUser.userId,\r\n\t\t\t\t\tbody: body,\r\n\t\t\t\t\tdate: new Date().toJSON(),\r\n\t\t\t\t\tlikesCount: 0,\r\n\t\t\t\t\tisLiked: false,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid className={classes.root}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection='row'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\tclassName={classes.wrapper}>\r\n\t\t\t\t<Avatar src={authUser.photos?.small} />\r\n\t\t\t\t<Grid item xs component='form' className={classes.inputWrapper} onSubmit={handleSubmit}>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tplaceholder='Write something'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\tname='body'\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tvalue={values.body}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t\t\t<SendRoundedIcon color='inherit' fontSize='small' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<ProfilePosts />\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tborderRadius: '0 0 15px 15px',\r\n\t\tposition: 'relative',\r\n\t\twidth: '100%',\r\n\t\theight: 600,\r\n\t\tjustifyContent: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\r\n\t},\r\n\trightBlockWrapper: {\r\n\t\theight: 600\r\n\t}\r\n}));","import { useSelector } from 'react-redux';\r\nimport { getUserProfile, setIsError } from '../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Preloader2 } from '../../common/preloader2';\r\nimport { ProfileMain } from './ProfileMain/ProfileMain';\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\nimport { ProfileEditForm } from './ProfileInfo/ProfileEditForm/ProfileEditForm';\r\nimport { ProfileWall } from './ProfileWall/ProfileWall';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { profileStyles } from './profile_styles'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ProfilePage: React.FC = ({ match }: any) => {\r\n\t//TODO обработать ошибки сервера\r\n\tconst authUserId = useSelector((state: RootState) => state.auth.id);\r\n\tconst routerId = match.params.userId;\r\n\tconst profileUserId = routerId || authUserId;\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [editForm, setEditForm] = useState(false);\r\n\tconst classes = profileStyles();\r\n\tconst isLoading = useSelector((state: RootState) => state.profile.isLoading);\r\n\tconst isError = useSelector((state: RootState) => state.profile.isError);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (profileUserId) dispatch(getUserProfile(profileUserId))\r\n\t\t}, [dispatch, profileUserId]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tdispatch(setIsError(''))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Snackbar open={!!isError} autoHideDuration={5000} onClose={handleClose} >\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tFetch error\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t\t{isLoading ? (<Preloader2 />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<ProfileMain routerId={routerId} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={8} className={classes.rightBlockWrapper}>\r\n\t\t\t\t\t\t{editForm ? (\r\n\t\t\t\t\t\t\t<ProfileEditForm setEditForm={setEditForm} />) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProfileInfo routerId={routerId} setEditForm={setEditForm} />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProfileWall />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default withRouter(ProfilePage);\r\n","import { makeStyles } from \"@material-ui/core\";\r\nexport const chatForm = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#40444b',\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 20,\r\n\t\tborderRadius: 7,\r\n\t\twidth: '100%'\r\n\t},\r\n\tinput: {\r\n\t\tcolor: 'white',\r\n\t\tmarginLeft: 15,\r\n\t\twidth: '100%',\r\n\t\tpadding: 8,\r\n\t\tpaddingRight: 40\r\n\t},\r\n}))","import { Grid, InputBase } from '@material-ui/core';\r\nimport { chatForm } from './chatInput_styles';\r\n\r\ninterface IProps {\r\n\thandleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void,\r\n\tonChange: { (e: React.ChangeEvent<any>): void },\r\n\tvalue: string,\r\n\tdisabled?: boolean\r\n}\r\n\r\nexport const ChatInput: React.FC<IProps> = ({ handleSubmit, ...props}) => {\r\n\tconst classes = chatForm()\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<InputBase inputProps={{...props}}\r\n\t\t\t\tclassName={classes.input}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tautoFocus={true}\r\n\t\t\t\tplaceholder='write a message'\r\n\t\t\t\tname='message'\r\n\t\t\t\tid='message'\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\n","import { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../../../app/store';\r\nimport { useAppDispatch } from '../../../../app/store';\r\nimport { ChatInput } from '../../../../components/ChatInput/ChatInput';\r\n\r\n\r\nexport const ChatForm: React.FC = () => {\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(sendMessage(message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<ChatInput\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tvalue={values.message}\r\n\t\t\tdisabled={status !== 'ready'}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatMessages = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\r\n\t},\r\n\tsenderName: {\r\n\t\tcolor: 'white',\r\n\t\tfontWeight: 700,\r\n\t},\r\n\tmessageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: \"break-word\",\r\n\t},\r\n\tmessagesWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tmessage: {\r\n\t\tpadding: '14px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t},\r\n}))","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ChatForm } from './ChatForm/ChatForm';\r\nimport React from 'react';\r\nimport { chatMessages } from './chatMessages_styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../app/store';\r\n\r\nexport const ChatMessages: React.FC = () => {\r\n\tconst messages = useSelector((state: RootState) => state.chat.messages)\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\tconst classes = chatMessages();\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => scrollToBottom(), [messages]);\r\n\r\n\r\n\treturn (\r\n\t\t<Grid item xs className={classes.root}>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Grid className={classes.messagesWrapper}>\r\n\t\t\t\t\t{messages?.map((i, idx) => (\r\n\t\t\t\t\t\t<Grid className={classes.message} key={idx}>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Avatar alt='avatar' src={i?.photo} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\t\t\t<p className={classes.senderName}> {i.userName}</p>\r\n\t\t\t\t\t\t\t\t<p className={classes.messageBody}>{i.message} </p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<ChatForm />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/devs.b3345405.jpg\";","import { makeStyles, Badge, withStyles } from '@material-ui/core';\r\nexport const messengerNavBar = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: '15px',\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0px 0px 0px 15px',\r\n\t\theight: 600,\r\n\t},\r\n\t\r\n\tpmWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\tpadding: '0 5px'\r\n\t},\r\n\tchip: {\r\n\t\twidth: 160,\r\n\t\tjustifyContent: 'left',\r\n\t\tmargin: '5px 0',\r\n\t\tbackground: '#40444b',\r\n\t},\r\n}));\r\n\r\nexport const NavBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: 21,\r\n\t\tright: 15,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, Chip } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getDialogs } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport devs from '../../common/assets/img/devs.jpg';\r\nimport { messengerNavBar, NavBadge } from './chatNavBar_styles';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\nexport const ChatNavBar: React.FC = () => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tdispatch(getDialogs());\r\n\t}, []);\r\n\tconst classes = messengerNavBar();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<h4>Chat rooms: </h4>\r\n\t\t\t<NavLink to={'/messenger'} activeClassName='navchat'>\r\n\t\t\t\t<Avatar src={devs} />\r\n\t\t\t</NavLink>\r\n\t\t\t<h4>PM: </h4>\r\n\t\t\t<div className={classes.pmWrapper}>\r\n\t\t\t\t{dialogs.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NavLink to={`/messenger/${item.id}`} key={item.id} activeClassName='navchat'>\r\n\t\t\t\t\t\t\t<NavBadge badgeContent={item.newMessagesCount} color='secondary' >\r\n\t\t\t\t\t\t\t\t<Chip key={idx}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\tavatar={<Avatar src={item?.photos?.small} />}\r\n\t\t\t\t\t\t\t\t\tlabel={item?.userName}\r\n\t\t\t\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\t\t\t></Chip>\r\n\t\t\t\t\t\t\t</NavBadge>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n};\r\n","\r\nimport { useFormik } from 'formik';\r\nimport { sendMessage } from '../../../../app/reducers/dialogs-reducer';\r\nimport { useAppDispatch } from '../../../../app/store';\r\nimport { ChatInput } from '../../../../components/ChatInput/ChatInput';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\n\r\nexport const PrivateForm: React.FC<PropsType> = ({ routerId }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(sendMessage(routerId, message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<ChatInput handleSubmit={handleSubmit} onChange={handleChange} value={values.message} />\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateMessages = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\t},\r\n\tmessagesWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tmessageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: 'break-word',\r\n\t},\r\n\tdoneIcon: {\r\n\t\tcolor: 'orange',\r\n\t\tfontSize: 12,\r\n\t},\r\n\tdoneAllIcon: {\r\n\t\tcolor: 'green',\r\n\t\tfontSize: 12,\r\n\r\n\t},\r\n\taddedAt: {\r\n\t\tfontSize: 10,\r\n\t\tcolor: 'grey',\r\n\t},\r\n\tsenderName: {\r\n\t\tcolor: '#fff',\r\n\t\tfontWeight: 700,\r\n\t\tmarginRight: 10\r\n\r\n\t},\r\n\tmessageContent: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '9px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": {\r\n\t\t\t\t\"&>*\": {\r\n\t\t\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeleteIcon: {\r\n\t\tcursor: 'pointer',\r\n\t\topacity: 0,\r\n\t\tfontSize: 15,\r\n\t\tmarginLeft: 5\r\n\r\n\t},\r\n\tmessageTitle: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t}\r\n\r\n\t},\r\n\tavatar: {\r\n\t\tmarginRight: 15\r\n\t}\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { PrivateForm } from './PrivateForm/PrivateForm';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\r\nimport { deleteMessage, getMessages } from '../../../app/reducers/dialogs-reducer';\r\nimport { dateHelper } from '../../../common/dateHelper';\r\nimport { Preloader2 } from '../../../common/preloader2';\r\nimport { privateMessages } from './privateMessages_styles';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { dialogsArrayType } from '../../../common/types/types';\r\nimport { RootState } from '../../../app/store';\r\nimport { useAppDispatch } from '../../../app/store';\r\nimport { getNewMessagesCount } from '../../../app/reducers/dialogs-reducer';\r\n\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n\trecipient: dialogsArrayType\r\n\r\n}\r\nexport const PrivateMessages: React.FC<PropsType> = ({ routerId, recipient }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = privateMessages();\r\n\tconst { messagesFething, messages } = useSelector((state: RootState) => state.dialogs);\r\n\tconst { authUser } = useSelector((state: RootState) => state.profile);\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (routerId) {\r\n\t\t\tdispatch(getMessages(routerId));\r\n\r\n\t\t}\r\n\t}, [routerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getNewMessagesCount())\r\n\t\tscrollToBottom()\r\n\t}, [messages]);\r\n\r\n\treturn (\r\n\t\t<Grid item xs className={classes.root}>\r\n\t\t\t{messagesFething && messages?.length === 0 ? (\r\n\t\t\t\t<Preloader2 />\r\n\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Grid className={classes.messagesWrapper}>\r\n\t\t\t\t\t\t\t{messages && messages.map((item: any, idx: any) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\tclassName={classes.messageContent}\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteMessage(item.id, routerId))}>\r\n\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\talt='avatar'\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\t\t\t\t\tsrc={item.senderId === authUser?.userId ? authUser?.photos?.large : recipient?.photos?.large}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Grid container >\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.senderName}>{item.senderName}</span>\r\n\t\t\t\t\t\t\t\t\t\t<Grid className={classes.messageTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.senderId === authUser?.userId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(item.viewed ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneAllRoundedIcon className={classes.doneAllIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneRoundedIcon className={classes.doneIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={classes.addedAt}>{dateHelper(item.addedAt)}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlineOutlinedIcon className={classes.deleteIcon} color='secondary' />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center' className={classes.messageBody}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>{item.body}</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<PrivateForm routerId={routerId} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateUserInfo = makeStyles((theme) => ({\r\n\troot: {\r\n\t\r\n\t\tbackground: '#2f3136',\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\tcolor: '#8e9297',\r\n\t\tposition: 'relative',\r\n\t\theight: 600,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'orange',\r\n\t\t},\r\n\t\tpadding:30\r\n\t},\r\n\tavatar: {\r\n\t\tborderRadius: '50%',\r\n\t\twidth: 250,\r\n\t\theight: 250,\r\n\t\tpadding:30\r\n\t},\r\n\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dateHelper } from '../../../common/dateHelper';\r\nimport { privateUserInfo } from './privateUserInfo_styles';\r\nimport { dialogsArrayType } from '../../../common/types/types';\r\n\r\ntype PropsType = {\r\n\trecipient:dialogsArrayType,\r\n\trouterId:number\r\n}\r\n\r\nexport const PrivateUserInfo:React.FC<PropsType> = ({recipient,routerId}) => {\r\n\tconst classes = privateUserInfo();\r\n\t//* РАБОЧИЙ КОМПОНЕНТ\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to={'/profile/' + routerId}>\r\n\t\t\t\t<Grid container direction='column' alignItems='center' justify='space-around' className={classes.root}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h2>{recipient?.userName}</h2>\r\n\t\t\t\t\t\t\t<Avatar alt='profile avatar' src={recipient?.photos.large} className={classes.avatar} />\r\n\t\t\t\t\t\t\t<Grid container direction='column' alignItems='center'>\r\n\t\t\t\t\t\t\t\t<div> Was online:</div>\r\n\t\t\t\t\t\t\t\t<div>{recipient?.lastUserActivityDate && dateHelper(recipient?.lastUserActivityDate)}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t</Link>\r\n\t</>\r\n\t);\r\n};\r\n","import { Badge, makeStyles, withStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatUsersList = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: 15,\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\theight: 600,\r\n\t},\r\n\tuser: {\r\n\t\tcolor: '#8e9297',\r\n\t\tmargin: 5,\r\n\t\twidth: 250,\r\n\t\tpadding: '10px 20px',\r\n\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(79,84,92,0.32)',\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderRadius: 7,\r\n\t\t\tpadding: '10px 20px',\r\n\t\t},\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\tusersWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\tpadding: 7,\r\n\t\tmargin: '16px auto'\r\n\t},\r\n}));\r\n\r\nexport const StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: '#44b700',\r\n\t\tboxShadow: `0 0 0 1px ${theme.palette.background.paper}`,\r\n\t\t'&::after': {\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: '50%',\r\n\t\t},\r\n\t},\r\n}))(Badge);","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../../app/store';\r\nimport { chatUsersList, StyledBadge } from './chatUsersList_styles';\r\n\r\n\r\nexport const ChatUsersList: React.FC = () => {\r\n\tconst { messages } = useSelector((state: RootState) => state.chat);\r\n\tconst usersList = messages.filter(((temp) => (a: any) => !temp[a.userId] && (temp[a.userId] = true))(Object.create(null)));\r\n\r\n\tconst classes = chatUsersList();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<h4>Users — {usersList?.length}</h4>\r\n\t\t\t<div className={classes.usersWrapper}>\r\n\t\t\t\t{usersList?.map((i, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link to={`/messenger/${i.userId || i.id}`} key={idx}>\r\n\t\t\t\t\t\t\t<Grid container alignItems='center' className={classes.user}>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\toverlap='circle'\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvariant='dot'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={i?.photo} className={classes.avatar} />\r\n\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<p style={{ marginLeft: 12 }}>\r\n\t\t\t\t\t\t\t\t\t{i.userName}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { ChatMessages } from './ChatMessages/ChatMessages';\r\nimport { ChatNavBar } from '../../components/ChatNavBar/ChatNavBar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { PrivateMessages } from './privateMessages/PrivateMessages';\r\nimport { PrivateUserInfo } from './privateUserInfo/PrivateUserInfo';\r\nimport { ChatUsersList } from './ChatUsersList/ChatUsersList';\r\nimport { startMessagesListening, stopMessagesListening } from '../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\nconst MessengerPage: React.FC = ({ match }: any) => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst routerId = match.params.userId;\r\n\tconst recipient = dialogs.filter((item) => item.id == routerId)[0]\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startMessagesListening());\r\n\t\treturn () => {\r\n\t\t\tdispatch(stopMessagesListening());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container direction='row' justify='center'>\r\n\t\t\t<Grid item xs={2}>\r\n\t\t\t\t<ChatNavBar />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={10}>\r\n\t\t\t\t<Grid container >\r\n\t\t\t\t\t{routerId ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PrivateMessages routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t\t<PrivateUserInfo routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n\t\t\t\t\t\t\t\t<ChatMessages />\r\n\t\t\t\t\t\t\t\t<ChatUsersList />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MessengerPage);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const header = makeStyles((theme) => ({\r\n\twrapper: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '5px 30px',\r\n\t\twidth: 1240\r\n\t},\r\n\tauthUserWrapper: {\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t},\r\n\troot: {\r\n\t\tbackground: 'linear-gradient(to top, #232526, #414345)',\r\n\t\tborderRadius: '15px 15px 0 0',\r\n\t},\r\n}));","import {  Avatar, Badge, Grid, IconButton } from '@material-ui/core';\r\nimport { logout } from '../../app/reducers/auth-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuthUser } from '../../app/reducers/profile-reducer';\r\nimport LaunchOutlinedIcon from '@material-ui/icons/LaunchOutlined';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { getNewMessagesCount } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { header } from './header_styles';\r\n\r\nexport const Header = () => {\r\n\tconst classes = header();\r\n\tconst authUser = useSelector((state: RootState) => state.profile.authUser);\r\n\tconst { isAuth, id } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\tconst { newMessagesCount } = useSelector((state: RootState) => state.dialogs);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (id) {\r\n\t\t\tdispatch(getAuthUser(id));\r\n\t\t\tdispatch(getNewMessagesCount());\r\n\t\t}\r\n\t}, [dispatch, id]);\r\n\r\n\tconst navTitles = ['profile', 'users', 'messenger'];\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t\t{navTitles.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid item key={item}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/' + item} activeClassName='header'>\r\n\t\t\t\t\t\t\t\t\t<h2> {item.toLocaleUpperCase()}</h2>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{isAuth && (\r\n\t\t\t\t\t<Grid container spacing={3} className={classes.authUserWrapper}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<a href='https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#'>\r\n\t\t\t\t\t\t\t\t<h2>API</h2>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Link to={`/profile`}>\r\n\t\t\t\t\t\t\t\t<h4>{authUser?.fullName}</h4>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t{newMessagesCount ? (\r\n\t\t\t\t\t\t\t\t<Link to={`/messenger`}>\r\n\t\t\t\t\t\t\t\t\t<Badge badgeContent={newMessagesCount} color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<IconButton onClick={() => dispatch(logout())}>\r\n\t\t\t\t\t\t\t\t<LaunchOutlinedIcon color='secondary' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { LoginPage } from './pages/LoginPage/LoginPage';\r\nimport { Users } from './pages/UsersPage/Users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { init } from './app/reducers/app-reducer';\r\nimport { useEffect } from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\r\nimport MessengerPage from './pages/MessangerPage/MessengerPage';\r\nimport { Preloader2 } from './common/preloader2';\r\nimport { Container} from '@material-ui/core';\r\nimport { Header } from './components/Header/Header';\r\n\r\n//TODO сделать lazy load\r\n//  const Chat = React.lazy(() => import(\"./features/chat\"))\r\nfunction App() {\r\n\tconst isInit = useSelector((state) => state.app.isInit);\r\n\tconst isAuth = useSelector((state) => state.auth.isAuth);\r\n\tconst authUserId = useSelector((state) => state.auth.id);\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => dispatch(init()), [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{!isInit ? (\r\n\t\t\t\t<Preloader2 />\r\n\t\t\t) : !isAuth ? (\r\n\t\t\t\t<LoginPage />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path={'/profile/' + authUserId} render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t\t<Route exact path='/profile/:userId?' render={() => <ProfilePage />} />\r\n\t\t\t\t\t\t<Route exact path='/users' render={() => <Users />} />\r\n\t\t\t\t\t\t<Route exact path={'/messenger/' + authUserId} render={() => <Redirect to={'/messenger'} />} />\r\n\t\t\t\t\t\t<Route exact path='/messenger/:userId?' render={() => <MessengerPage />} />\r\n\t\t\t\t\t\t<Route exact path='*' render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: {\r\n\t\t\tmain: \"#00BFFF\",\r\n\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#B22222'\r\n\t\t}\r\n\t},\r\n});\r\nconsole.log(theme)\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}