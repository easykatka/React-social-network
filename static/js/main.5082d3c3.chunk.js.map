{"version":3,"sources":["common/types/types.ts","app/api/api.ts","app/api/auth-api.ts","app/reducers/auth-reducer.ts","pages/LoginPage/login_styles.tsx","app/api/profile-api.ts","app/api/users-api.ts","app/reducers/profile-reducer.ts","common/posts.js","app/reducers/users-reducer.ts","app/reducers/app-reducer.ts","app/api/dialogs-api.ts","app/reducers/dialogs-reducer.ts","app/api/chat-api.ts","app/reducers/chat-reducer.ts","app/store.ts","pages/LoginPage/LoginPage.tsx","common/preloader3.js","common/assets/img/defaultAvatar.png","components/UsersList/usersList_styles.tsx","components/CustomFriendButton/FriendButton.tsx","components/UsersList/UsersList.tsx","common/useDebounce.js","components/UsersFilter/usersFilter_styles.tsx","components/UsersFilter/UsersFilter.tsx","pages/UsersPage/UsersPage.tsx","components/ProfileMain/profileMain_styles.tsx","components/ProfileFriends/profileFriends_style.tsx","components/ProfileFriends/ProfileFriends.tsx","common/randomArray.ts","components/ProfileAvatar/profileAvatar_styles.tsx","components/ProfileAvatar/ProfileAvatar.tsx","components/ProfileStatus/useStatus.js","components/ProfileStatus/profileStatus_styles.tsx","components/ProfileStatus/ProfileStatus.tsx","components/ProfileMain/ProfileMain.tsx","components/ProfileInfo/profileInfo_styles.tsx","components/ProfileInfo/ProfileInfo.tsx","components/ProfileEditForm/profileEditForm_style.tsx","components/CustomTextField/CustomTextFeild.tsx","components/ProfileEditForm/ProfileEditForm.tsx","common/dateHelper.js","components/ProfilePost/profilePosts_styles.tsx","components/ProfilePost/ProfilePosts.tsx","components/ProfileWall/profileWall_styles.tsx","components/ChatInput/chatInput_styles.tsx","components/ChatInput/ChatInput.tsx","components/ProfileWall/ProfileWall.tsx","pages/ProfilePage/profile_styles.tsx","pages/ProfilePage/ProfilePage.tsx","components/ChatForm/ChatForm.tsx","components/ChatMessages/chatMessages_styles.tsx","components/ChatMessages/ChatMessages.tsx","common/assets/img/devs.jpg","components/ChatNavBar/chatNavBar_styles.tsx","components/ChatNavBar/ChatNavBar.tsx","components/PrivateForm/PrivateForm.tsx","components/PrivateMessages/privateMessages_styles.tsx","components/PrivateMessages/PrivateMessages.tsx","components/PrivateUserInfo/privateUserInfo_styles.tsx","components/PrivateUserInfo/PrivateUserInfo.tsx","components/ChatUsersList/chatUsersList_styles.tsx","components/ChatUsersList/ChatUsersList.tsx","pages/MessangerPage/MessengerPage.tsx","components/Header/header_styles.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["resultCodeEnum","instance","axios","create","withCredentials","baseURL","headers","authAPI","get","then","res","data","loginUserData","post","delete","authSlice","createSlice","name","initialState","id","email","login","isAuth","captchaUrl","errorMessage","reducers","setCaptchaUrl","state","action","payload","setauthUserData","setErrorMessage","actions","sendLogin","dispatch","a","loginData","resultCode","success","getAuthUserData","captcha","url","serverError","messages","length","response","loginStyles","makeStyles","theme","root","padding","spacing","flexDirection","textAlign","margin","background","height","width","color","borderRadius","paddingBottom","icon","fontSize","palette","primary","main","error","profileAPI","userId","status","put","photo","formData","FormData","append","profile","usersAPI","currentPage","pageSize","searchTerm","friend","profileSlice","authUser","posts","body","date","likesCount","isLiked","isLoading","isError","setUserProfile","setUserStatus","setauthUser","setNewAvatar","photos","setUserFollowStatus","followed","setPost","push","setLike","item","idx","like","checked","setIsLoading","setIsError","getUserProfile","profileData","profileStatus","followStatus","getAuthUser","usersSlice","users","totalUsersCount","isFetching","followingInProgress","filter","setIsFetching","setUsers","setCurrentPage","setTotalUsersCount","toggleFollow","map","user","setFollowingInProgress","setPageSize","setFilter","appSlice","isInit","setInit","dialogsAPI","messageId","dialogsSlice","dialogs","dialogsFetching","messagesFething","newMessagesCount","setDialogsFetching","setMessagesFetching","setDialogs","setMessages","items","setNewMessagesCount","setDeletedMessage","getNewMessagesCount","count","getMessages","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","message","send","chatSlice","messagesReceived","m","v1","_","index","array","statusChanged","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","store","configureStore","reducer","app","appReducer","usersReducer","chat","chatReducer","auth","authReducer","profileReducer","dialogsReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useDispatch","LoginPage","useSelector","classes","loginDefault","password","rememberMe","useFormik","initialValues","validationSchema","Yup","required","min","max","onSubmit","handleSubmit","handleChange","values","errors","touched","handleBlur","Grid","container","component","className","Typography","variant","TextField","label","onBlur","size","onChange","value","type","FormControlLabel","control","Checkbox","src","alt","Button","startIcon","Preloader3","class","usersList","overflowY","paddingLeft","card","backgroundColor","cardmedia","notfound","FriendButton","fullWidth","disabled","some","onClick","follow","UsersList","React","memo","xs","Card","CardActionArea","to","CardMedia","image","large","defaultAvatar","title","CardContent","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","usersFilter","display","alignItems","UsersFilter","debouncedSearchTerm","debouncedCurrentPage","page","totalCount","getUsers","event","target","FormControl","RadioGroup","row","aria-label","Radio","TablePagination","onChangePage","newPage","rowsPerPage","onChangeRowsPerPage","parseInt","UsersPage","style","position","profileMain","fullName","fontWeight","wordBreak","friends","borderTop","paddingTop","friendButton","pmButton","profileFreinds","friendsWrapper","avatar","marginBottom","friendItemWrapper","friendsLabel","ProfileFriends","randomUsers","arr","len","sorted","slice","sort","Math","random","randomArray","justify","Avatar","profileAvatar","uploadButton","secondary","StyledBadge","withStyles","badge","top","right","Badge","ProfileAvatar","routerId","badgeContent","accept","files","file","htmlFor","IconButton","useStatus","editMode","setEditMode","userStatus","updateStatus","cursor","input","marginRight","minHeight","ProfileStatus","onStatusChange","deactivateMode","InputBase","autoFocus","endAdornment","ProfileMain","direction","toUpperCase","profileInfoStyles","maxWidth","justifyContent","descriptionLabel","ProfileInfo","setEditForm","isContacts","contacts","Object","find","i","aboutMe","lookingForAJobDescription","lookingForAJob","keys","key","href","profileEditForm","leftBlock","marginLeft","rightBlock","job","buttons","CustomTextField","props","multiline","rowsMax","ProfileEditForm","putNewProfile","labelPlacement","dateHelper","timeZone","ruTime","Date","getTime","currentTime","toLocaleTimeString","hour","minute","formatedDate","toLocaleDateString","currentDate","yesterdayDate","now","visibleDate","profilePosts","marginTop","paddingRight","postWrapper","ProfilePosts","small","FavoriteBorder","checkedIcon","Favorite","profileWall","chatForm","sendIcon","ChatInput","inputProps","placeholder","ProfileWall","toJSON","resetForm","log","profileStyles","rightBlockWrapper","Alert","elevation","withRouter","match","authUserId","params","profileUserId","editForm","handleClose","Snackbar","open","autoHideDuration","onClose","severity","ChatForm","sendMessage","chatMessages","senderName","messageBody","messagesWrapper","ChatMessages","messagesEndRef","useRef","current","scrollIntoView","userName","ref","messengerNavBar","pmWrapper","chip","NavBadge","ChatNavBar","activeClassName","devs","Chip","clickable","PrivateForm","privateMessages","doneIcon","doneAllIcon","addedAt","messageContent","opacity","deleteIcon","messageTitle","PrivateMessages","recipient","senderId","viewed","privateUserInfo","PrivateUserInfo","lastUserActivityDate","chatUsersList","usersWrapper","boxShadow","paper","left","ChatUsersList","temp","overlap","anchorOrigin","vertical","horizontal","header","wrapper","authUserWrapper","Header","toLocaleUpperCase","App","Container","exact","path","render","Boolean","window","location","hostname","createMuiTheme","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5082d3c3.chunk.js","sourcesContent":["export enum resultCodeEnum {\r\n\tsuccess = 0,\r\n\terror = 1,\r\n\tcaptcha = 10\r\n}\r\n\r\nexport type loginUserData = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n\tcaptcha?: string\r\n}\r\n\r\nexport interface profileDataType  {\r\n\tuserId: number\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tfullName: string | null\r\n\tfollowed: boolean\r\n\tphotos: photosType\r\n\tcontacts: {\r\n\t\t[facebook: string]: string | null\r\n\t\tinstagram: string | null\r\n\t\tvk: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t\ttwitter: string | null\r\n\t\twebsite: string | null\r\n\t\tyoutube: string | null\r\n\t}\r\n}\r\nexport interface responseResultObject  {\r\n\tdata: {}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\nexport interface photosType  {\r\n\tlarge: string\r\n\tsmall: string\r\n}\r\nexport interface usersSearchType  {\r\n\tcurrentPage: number,\r\n\tpageSize: number,\r\n\tsearchTerm: string,\r\n\tfriend: string,\r\n}\r\nexport interface allUsersItemType  {\r\n\tfollowed: boolean\r\n\tid: number\r\n\tname: string\r\n\tphotos: photosType\r\n\tstatus: null | string\r\n\tuniqueUrlName: null | string\r\n}\r\nexport interface dialogsArrayType  {\r\n\thasNewMessages: boolean\r\n\tid: number\r\n\tlastDialogActivityDate: string\r\n\tlastUserActivityDate: string\r\n\tnewMessagesCount: number\r\n\tphotos: photosType\r\n\tuserName: string\r\n}\r\n\r\nexport interface messagesArrayType  {\r\n\taddedAt: string\r\n\tbody: string\r\n\tdeletedByRecipient?: boolean\r\n\tdeletedBySender?: boolean\r\n\tdistributionId?: number | null\r\n\tid: string\r\n\tisSpam?: boolean\r\n\trecipientId: number\r\n\trecipientName?: string\r\n\tsenderId: number\r\n\tsenderName: string\r\n\ttranslatedBody: null\r\n\tviewed?: boolean\r\n}\r\nexport interface postType  {\r\n\tuserId: number | null\r\n\tdate: string\r\n\tbody: string\r\n\tlikesCount: number\r\n\tisLiked: boolean\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true, //? withCredentials() makes your browser include cookies and authentication headers in your XHR request.\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: { \"API-KEY\": \"ca0951c1-2a9d-481e-a273-3d5f60141d92\" },\r\n});\r\n","import { loginUserData, resultCodeEnum } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\r\n//апи\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get<responseIsAuthUser>(`auth/me`).then((res) => res.data);\r\n\t},\r\n\tlogin(loginUserData: loginUserData) {\r\n\t\treturn instance.post<responseLoginUser>('/auth/login', loginUserData).then((res) => res.data);\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete<responseLogoutUser>(`auth/login`).then(res => res.data);\r\n\t},\r\n\tgetCaptchaUrl() {\r\n\t\treturn instance.get<responseCaptchaUrl>(`security/get-captcha-url`).then(res => res.data)\r\n\t},\r\n};\r\n\r\n//типы\r\ninterface responseIsAuthUser {\r\n\tdata: { id: number, email: string, login: string }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n\tfieldsErrors: Array<string>\r\n}\r\ninterface responseLoginUser {\r\n\tdata: { userId: number }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n}\r\ninterface responseLogoutUser {\r\n\tresultCode: resultCodeEnum\r\n}\r\ninterface responseCaptchaUrl {\r\n\turl: string\r\n}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { authAPI } from '../api/auth-api'\r\nimport { loginUserData, resultCodeEnum } from '../../common/types/types'\r\nimport { AppDispatch } from '../store'\r\n\r\n//типы\r\nconst initialState = {\r\n\tid: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false ,\r\n\tcaptchaUrl: null as string | null,\r\n\terrorMessage: null as string | null\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetCaptchaUrl: (state, action) => { state.captchaUrl = action.payload },\r\n\t\tsetauthUserData: (state, action) => {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t},\r\n\t\tsetErrorMessage: (state, action) => { state.errorMessage = action.payload },\r\n\t},\r\n})\r\n//actions\r\nexport const { setCaptchaUrl, setauthUserData, setErrorMessage } = authSlice.actions\r\n//thunks\r\nexport const getCaptcha = () => async (dispatch: AppDispatch) => {\r\n\tconst { url } = await authAPI.getCaptchaUrl()\r\n\tdispatch(setCaptchaUrl(url))\r\n}\r\nexport const logout = () => async (dispatch: AppDispatch) => {\t\r\n\tconst response = await authAPI.logout()\r\n\tif (response.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setauthUserData({ id: null, email: null, login: null, isAuth: false }))\r\n\t}\r\n}\r\nexport const sendLogin = (loginUserData: loginUserData) => async (dispatch: AppDispatch) => {\r\n\tconst loginData = await authAPI.login(loginUserData)\r\n\tif (loginData.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tif (loginData.resultCode === resultCodeEnum.captcha) {\r\n\t\t\tdispatch(getCaptcha())\r\n\t\t}\r\n\t\tconst serverError = loginData.messages.length > 0 ? loginData.messages[0] : 'Some Error'\r\n\t\tdispatch(setErrorMessage(serverError))\r\n\t}\r\n}\r\nexport const getAuthUserData = () => async (dispatch: AppDispatch) => {\r\n\tconst response = await authAPI.me()\r\n\tif (response.resultCode === resultCodeEnum.success) { \r\n\t\tdispatch(setauthUserData({...response.data,isAuth:true})\r\n\t\t)\r\n\t}\r\n}\r\nexport default authSlice.reducer\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const loginStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: theme.spacing(5),\r\n\t\tflexDirection: 'column',\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tbackground: '#2f3136',\r\n\t\theight: '100%',\r\n\t\twidth: 500,\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: 20,\r\n\t\t'&>*': { paddingBottom: theme.spacing(1) },\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: 90,\r\n\t\twidth: '100%',\r\n\t\tcolor: theme.palette.primary.main,\r\n\t},\r\n\tcaptcha:\r\n\t{\r\n\t\tmargin: '0 auto',\r\n\t\twidth: '100px'\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red',\r\n\t}\r\n}))\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, photosType, profileDataType } from \"../../common/types/types\";\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: number | null) {\r\n\t\treturn instance.get<profileDataType>(`profile/` + userId).then((res) => res.data);\r\n\t},\r\n\tgetStatus(userId: number | null) {\r\n\t\treturn instance.get<string>(`profile/status/` + userId).then((res) => res.data); //запрос статуса отдельно с сервера\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance\r\n\t\t\t.put<responseResultObject>(`profile/status/`, { status: status })\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tupdateAvatar(photo: File) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", photo);\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile/photo`, formData, {\r\n\t\t\theaders: { \"Content-Type\": \"multipart/form-data\" },\r\n\t\t})\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tgetFollowStatus(userId: number | null) {\r\n\t\treturn instance.get<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\r\n\tupdateProfile(profile: profileDataType) {\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile`, profile).then((res) => res.data);\r\n\t},\r\n};\r\n\r\n//типы\r\ninterface responseUpdatePhoto {\r\n\tdata: {\r\n\t\tphotos: photosType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\n","import { responseResultObject ,allUsersItemType } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number, pageSize: number, searchTerm: string, friend: string) {\r\n\t\treturn instance.get<responseGetUsers>(`users?page=${currentPage}&count=${pageSize}&term=${searchTerm}&friend=${friend}`)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tfollowAPI(userId: number) {\r\n\t\treturn instance.post<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\tunFollowAPI(userId: number) {\r\n\t\treturn instance.delete<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ninterface responseGetUsers  {\r\n\terror: boolean\r\n\titems: Array<allUsersItemType>\r\n\ttotalCount: number\r\n}","import { profileAPI } from \"../api/profile-api\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { postType, profileDataType, resultCodeEnum } from '../../common/types/types'\r\nimport { posts } from \"../../common/posts\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\nexport const profileSlice = createSlice({\r\n\tname: 'profile',\r\n\tinitialState: {\r\n\t\tauthUser: {} as profileDataType,\r\n\t\tprofile: {} as profileDataType,\r\n\t\tstatus: \"\",\r\n\t\tposts: posts as Array<postType>,\r\n\t\tisLoading: true,\r\n\t\tisError: '' \r\n\t},\r\n\treducers: {\r\n\t\tsetUserProfile: (state, { payload }) => { state.profile = payload },\r\n\t\tsetUserStatus: (state, { payload }) => { state.status = payload },\r\n\t\tsetauthUser: (state, { payload }) => { state.authUser = payload },\r\n\t\tsetNewAvatar: (state, { payload }) => { state.authUser.photos = state.profile.photos = payload },\r\n\t\tsetUserFollowStatus: (state, { payload }) => { state.profile = { ...state.profile, followed: payload } },\r\n\t\tsetPost: (state, { payload }) => {\r\n\t\t\tstate.posts.push(payload)\r\n\t\t},\r\n\t\tsetLike: (state, { payload }) => {\r\n\t\t\tconst item = state.posts[payload.idx]\r\n\t\t\titem.isLiked = payload.like.checked\r\n\t\t\tpayload.like.checked ? ++item.likesCount : --item.likesCount\r\n\t\t},\r\n\t\tsetIsLoading: (state, {payload}) => { state.isLoading = payload },\r\n\t\tsetIsError: (state, {payload}) => { state.isError = payload }\r\n\t}\r\n})\r\n//action\r\nexport const { setIsError, setIsLoading, setLike, setPost, setUserFollowStatus, setUserProfile, setUserStatus, setauthUser, setNewAvatar } = profileSlice.actions;\r\n//thunk\r\nexport const getUserProfile = (id: number) => async (dispatch: AppDispatch) => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tconst profileData = await profileAPI.getProfile(id)\r\n\t\tconst profileStatus = await profileAPI.getStatus(id)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(id)\r\n\t\tdispatch(setUserProfile(profileData))\r\n\t\tdispatch(setUserStatus(profileStatus))\r\n\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t}\r\n\tcatch (error) {\r\n\t\tdispatch(setIsError(error))\r\n\t}\r\n\tfinally {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\nexport const getAuthUser = (id: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.getProfile(id)\r\n\tdispatch(setauthUser(data))\r\n}\r\nexport const updateAvatar = (file: File) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateAvatar(file)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setNewAvatar(data.data.photos))\r\n\t}\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateStatus(status)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setUserStatus(status))\r\n\t}\r\n}\r\nexport const putNewProfile = (profile: profileDataType) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateProfile(profile)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getUserProfile(profile.userId))\r\n\t\tdispatch(getAuthUser(profile.userId))\r\n\t}\r\n}\r\nexport default profileSlice.reducer;\r\n\r\n\r\n\r\n","export const posts = [{\r\n\tuserId: null,\r\n\tbody: \"Hello world!\",\r\n\tdate: '10/10/20',\r\n\tlikesCount: 14,\r\n\tisLiked: true,\r\n},\r\n{\r\n\tuserId: 1,\r\n\tbody: \"Lorem uae odit blanditiis temporibusinus odio consequatur placeat accusamus ex\",\r\n\tdate: '8/11/20',\r\n\tlikesCount: 1,\r\n\tisLiked: false,\r\n},\r\n{\r\n\tuserId: null,\r\n\tbody: \"Lorem ipsum dolor sit amet, ct blanditiis temporibus hic ipsum eaque, totam magnam minus eum dolorum reprehenderit rem odio consequatur placeat accusamus ex\",\r\n\tdate: '10/12/20',\r\n\tlikesCount: 66,\r\n\tisLiked: false,\r\n}]","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { allUsersItemType } from \"../../common/types/types\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { setUserFollowStatus } from \"./profile-reducer\";\r\n\r\nconst initialState = {\r\n\tusers: [] as Array<allUsersItemType>,\r\n\tpageSize: 100,\r\n\ttotalUsersCount: 5000,\r\n\tcurrentPage: 0,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [] as number[],\r\n\tfilter: {\r\n\t\tsearchTerm: \"\",\r\n\t\tfriend: 'null',\r\n\t}\r\n}\r\n\r\nexport const usersSlice = createSlice({\r\n\tname: \"users\",\r\n\tinitialState\r\n\t,\r\n\treducers: {\r\n\t\tsetIsFetching: (state, action) => { state.isFetching = action.payload; },\r\n\t\tsetUsers: (state, action) => { state.users = action.payload},\r\n\t\tsetCurrentPage: (state, action) => { state.currentPage = action.payload; },\r\n\t\tsetTotalUsersCount: (state, action) => { state.totalUsersCount = action.payload; },\r\n\t\ttoggleFollow: (state, { payload }) => {\r\n\t\t\tstate.users = state.users.map(user => {\r\n\t\t\t\tif (user.id === payload) { return { ...user, followed: !user.followed } }\r\n\t\t\t\treturn user\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetFollowingInProgress: (state, { payload: { isFetching, userId } }) => {\r\n\t\t\tstate.followingInProgress = isFetching ? [...state.followingInProgress, userId]\r\n\t\t\t\t: state.followingInProgress.filter(id => id !== userId)\r\n\t\t},\r\n\t\tsetPageSize: (state, { payload }) => {\r\n\t\t\tstate.pageSize = payload\r\n\t\t\tstate.currentPage = 0\r\n\t\t},\r\n\t\tsetFilter: (state, { payload }) => { \r\n\t\t\tstate.currentPage = 0\r\n\t\t\tstate.filter = { ...state.filter, ...payload }\r\n\t\t},\r\n\t}\r\n});\r\n//actions\r\nexport const { setFilter,\r\n\tsetCurrentPage,\r\n\tsetPageSize,\r\n\tsetIsFetching,\r\n\tsetUsers,\r\n\tsetTotalUsersCount,\r\n\ttoggleFollow,\r\n\tsetFollowingInProgress,\r\n} = usersSlice.actions;\r\n//thunk\r\nexport const getUsers = (page:number, pageSize:number, searchTerm:string, friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tdispatch(setCurrentPage(page));\r\n\t\tconst data = await usersAPI.getUsers(page + 1, pageSize, searchTerm, friend);\r\n\t\tdispatch(setIsFetching(false));\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n\t};\r\n};\r\nexport const getFriends = (friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tconst data = await usersAPI.getUsers(1, 100, '', friend);\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setIsFetching(false));\r\n\r\n\t}\r\n}\r\nexport const followUser = (userId:number, follow:boolean) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setFollowingInProgress({ isFetching: true, userId }))\r\n\t\tconst response = !follow ? await usersAPI.followAPI(userId) : await usersAPI.unFollowAPI(userId)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(userId)\r\n\t\tif (response.resultCode === 0) {\r\n\t\t\tdispatch(toggleFollow(userId))\r\n\t\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t\t}\r\n\t\tdispatch(setFollowingInProgress({ isFetching: false, userId }))\r\n\t}\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\n\r\n\r\nexport const appSlice = createSlice({\r\n\tname: \"app\",\r\n\tinitialState: {\r\n\t\tisInit: false,\r\n\t},\r\n\treducers: {\r\n\t\tsetInit: (state) => {\r\n\t\t\tstate.isInit = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n//action\r\nexport const { setInit } = appSlice.actions;\r\n//thunk\r\nexport const init = () => (dispatch: AppDispatch) => {\r\n\tdispatch(getAuthUserData()).then(() => {\r\n\t\tdispatch(setInit());\r\n\t});\r\n};\r\n\r\nexport default appSlice.reducer;\r\n\r\n\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, messagesArrayType, dialogsArrayType } from \"../../common/types/types\";\r\n\r\nexport const dialogsAPI = {\r\n\tgetDialogs() {\r\n\t\treturn instance.get(`/dialogs`).then(res => res.data)\r\n\r\n\t},\r\n\tsendMessage(userId: number, body: string) {\r\n\t\treturn instance.post<Array<dialogsArrayType>>(`/dialogs/${userId}/messages`, { body: body }).then(res => res.data)\r\n\t},\r\n\tgetMessages(userId: number) {\r\n\t\treturn instance.get<responseSendMsg>(`/dialogs/${userId}/messages`).then(res => res.data)\r\n\t},\r\n\tdeleteMessages(messageId: number) {\r\n\t\treturn instance.delete(`/dialogs/messages/${messageId}`).then(res => res.data)\r\n\t},\r\n\tgetNewMessagesCount() {\r\n\t\treturn instance.get<responseGetMessages>(`/dialogs/messages/new/count`).then(res => res.data)\r\n\t},\r\n\tstartDialog(userId: number) {\r\n\t\treturn instance.put<responseResultObject>(`/dialogs/${userId}`).then(res => res.data)\r\n\t},\r\n\tdeleteMessage(messageId: string) {\r\n\t\treturn instance.delete<responseResultObject>(`/dialogs/messages/${messageId}\r\n\t\t`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ninterface responseSendMsg {\r\n\tdata: {\r\n\t\tmessage: messagesArrayType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\ninterface responseGetMessages {\r\n\terror: boolean\r\n\titems: Array<messagesArrayType>\r\n\ttotalCount: number\r\n}\r\n\r\n","import { dialogsArrayType, messagesArrayType } from '../../common/types/types'\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { dialogsAPI } from \"../api/dialogs-api\";\r\nimport { AppDispatch } from '../store';\r\n\r\n//типы\r\nconst initialState = {\r\n\tdialogs: [] as dialogsArrayType[],\r\n\tmessages: [] as messagesArrayType[] ,\r\n\tdialogsFetching: true,\r\n\tmessagesFething: true,\r\n\tnewMessagesCount: null as number | null\r\n};\r\n\r\nexport const dialogsSlice = createSlice({\r\n\tname: \"dialogs\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetDialogsFetching: (state, { payload }) => { state.dialogsFetching = payload },\r\n\t\tsetMessagesFetching: (state, { payload }) => {\r\n\t\t\tstate.messagesFething = payload\r\n\t\t},\r\n\t\tsetDialogs: (state, { payload }) => {\r\n\t\t\tstate.dialogs = payload\r\n\t\t},\r\n\t\tsetMessages: (state, { payload }) => { debugger\r\n\t\t\tstate.messages = payload.items\r\n\t\t},\r\n\t\tsetNewMessagesCount: (state, { payload }) => {\r\n\t\t\tstate.newMessagesCount = payload\r\n\t\t},\r\n\t\tsetDeletedMessage(state, { payload }) {\r\n\t\t\tstate.messages = state.messages.filter(item => item.id !== payload)\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//actions\r\nexport const { setDeletedMessage, setNewMessagesCount, setMessagesFetching, setDialogsFetching, setDialogs, setMessages } = dialogsSlice.actions;\r\n//thunks\r\nexport const getNewMessagesCount = () => async (dispatch: AppDispatch) => {\r\n\tconst count = await dialogsAPI.getNewMessagesCount()\r\n\tdispatch(setNewMessagesCount(count))\r\n}\r\nexport const getDialogs = () => async (dispatch: AppDispatch) => {\r\n\tdispatch(setDialogsFetching(true));\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs();\r\n\tdispatch(setDialogsFetching(false));\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const getMessages = (id: number) => async (dispatch: AppDispatch) => {\r\n\tdispatch(setMessagesFetching(true));\r\n\tconst response = await dialogsAPI.getMessages(id);\r\n\tdispatch(setMessagesFetching(false));\r\n\tdispatch(setMessages(response))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const sendMessage = (userId: number, body: string) => async (dispatch: AppDispatch) => {\r\n\tawait dialogsAPI.sendMessage(userId, body)\r\n\tdispatch(getMessages(userId))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const deleteMessage = (messageId: string, userId: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await dialogsAPI.deleteMessage(messageId)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(getMessages(userId))\r\n\t\tdispatch(setDeletedMessage(messageId))\r\n\t}\r\n}\r\n\r\nexport default dialogsSlice.reducer;\r\n","const subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'","\r\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../api/chat-api'\r\nimport { v1 } from 'uuid'\r\nimport { AppDispatch } from '../store'\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & { id: string }\r\n\r\nexport const chatSlice = createSlice({\r\n\tname: \"chat\",\r\n\tinitialState: {\r\n\t\tmessages: [] as ChatMessageType[],\r\n\t\tstatus: 'pending' as StatusType\r\n\t},\r\n\treducers: {\r\n\t\tmessagesReceived: (state, { payload }) => { \r\n\t\t\tif (state.messages.length != payload.length)  {state.messages = [...state.messages, ...payload.map((m: any) => ({ ...m, id: v1() }))]\r\n\t\t\t\t.filter((_, index, array) => index >= array.length - 100)\r\n\t\t}},\r\n\t\tstatusChanged: (state, { payload }) => {\r\n\t\t\tstate.status = payload\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nexport const { messagesReceived, statusChanged } = chatSlice.actions;\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\n\r\n\r\nconst newMessageHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_newMessageHandler === null) {\r\n\t\t_newMessageHandler = (messages) => {\r\n\t\t\tdispatch(messagesReceived(messages))\r\n\t\t}\r\n\t}\r\n\treturn _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\n\r\n\r\nconst statusChangedHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_statusChangedHandler === null) {\r\n\t\t_statusChangedHandler = (status) => {\r\n\t\t\tdispatch(statusChanged(status))\r\n\t\t}\r\n\t}\r\n\treturn _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.start()\r\n\tchatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\tchatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string) => async () => {\r\n\tchatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatSlice.reducer\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport chatReducer from \"./reducers/chat-reducer\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tapp: appReducer,\r\n\t\tusers: usersReducer,\r\n\t\tchat:chatReducer,\r\n\t\tauth: authReducer,\r\n\t\tprofile: profileReducer,\r\n\t\tdialogs: dialogsReducer,\r\n\t\t\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false, //!почитать \r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport default store","import { useFormik } from 'formik';\r\nimport { sendLogin } from '../../app/reducers/auth-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextField, Button, Checkbox, Grid, FormControlLabel, Typography } from '@material-ui/core/';\r\nimport VpnKeyRoundedIcon from '@material-ui/icons/VpnKeyRounded';\r\nimport * as Yup from 'yup';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { loginStyles } from './login_styles';\r\nimport { RootState } from '../../app/store';\r\nimport { loginUserData } from '../../common/types/types';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\tconst { captchaUrl, errorMessage } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = loginStyles();\r\n\tconst loginDefault:loginUserData = {\r\n\t\temail: 'secondjump@bk.ru',\r\n\t\tpassword: 'qwaszx',\r\n\t\trememberMe: true\r\n\t}\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false,\r\n\t\t\tcaptcha: '',\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\temail: Yup.string().email('Insert correct email ').required('Required'),\r\n\t\t\tpassword: Yup.string()\r\n\t\t\t\t.min(4, 'Password must be longer than 4 characters.')\r\n\t\t\t\t.max(12, 'Password must be shorter than 12 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (loginData: loginUserData) => {\r\n\t\t\tif (loginData.email === 'free@samuraijs.com') \r\n\t\t\tdispatch(sendLogin(loginDefault))\r\n\t\t\telse {\r\n\t\t\t\tdispatch(sendLogin(loginData))\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid container component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<ExitToAppIcon className={classes.icon} />\r\n\t\t\t<Typography variant='h6' className={classes.error}>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t</Typography>\r\n\t\t\t<TextField label='Email' onBlur={handleBlur} size='small' onChange={handleChange} id='email' name='email' value={values.email} />\r\n\t\t\t{errors.email && touched.email && <div className={classes.error}>{errors.email}</div>}\r\n\t\t\t<TextField\r\n\t\t\t\tlabel='Password'\r\n\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\tsize='small'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvariant='standard'\r\n\t\t\t\tid='password'\r\n\t\t\t\tname='password'\r\n\t\t\t\tvalue={values.password}\r\n\t\t\t/>\r\n\t\t\t{errors.password && touched.password && <div className={classes.error}>{errors.password}</div>}\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={<Checkbox checked={values.rememberMe} onChange={handleChange} name='rememberMe' color='primary' />}\r\n\t\t\t\tlabel='Remember me'\r\n\t\t\t/>\r\n\t\t\t{captchaUrl && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<img className={classes.captcha} src={captchaUrl} width='100px' alt='captcha' />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tlabel='Captcha'\r\n\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tid='captcha'\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tname='captcha'\r\n\t\t\t\t\t\tvalue={values.captcha}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<Button variant='contained' startIcon={<VpnKeyRoundedIcon />} size='large' type='submit' color='primary'>\r\n\t\t\t\tLog In\r\n\t\t\t</Button>\r\n\t\t\t<p>Для тестового просмотра используйте пару логин/пароль: </p>\r\n\t\t\t<p> free@samuraijs.com / free</p>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import './preloader3.scss'\r\nexport const Preloader3 = () => {\r\n\treturn (\r\n\t\t<div class=\"loader\">Loading...</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.832028ea.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usersList = makeStyles(() => ({\r\n\tname: {\r\n\t\tcolor: 'black',\r\n\t\tfontSize: 15,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\troot: {\r\n\t\toverflowY: 'scroll',\r\n\t\twidth: '100%',\r\n\t\theight: 430,\r\n\t\tpaddingLeft: 30,\r\n\t},\r\n\tcard: {\r\n\t\theight: 150,\r\n\t\tbackgroundColor:'grey',\r\n\r\n\t\t'&>:hover': {\r\n\t\t\tbackground: 'linear-gradient(to right, #8e9eab, #eef2f3)',\r\n\t\t},\r\n\t},\r\n\tcardmedia: {\r\n\t\theight: 90,\r\n\t},\r\n\tnotfound:{\r\n\t\tcolor: 'white',\r\n\t\t textAlign: 'center', \r\n\t\t fontSize: 50, \r\n\t\t margin: '0 auto' \r\n\t}\r\n}))\r\n","import { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { followUser } from '../../app/reducers/users-reducer';\r\nimport React from 'react';\r\nimport { RootState } from '../../app/store';\r\n\r\ninterface IProps {\r\n\tid: number,\r\n\tfollowed: boolean\r\n}\r\n//\r\nexport const FriendButton: React.FC<IProps> = ({ id, followed }) => {\r\n\tconst followingInProgress = useSelector((state: RootState) => state.users.followingInProgress);\r\n\tconst dispatch = useDispatch();\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tcolor={followed ? 'secondary' : 'primary'}\r\n\t\t\tfullWidth\r\n\t\t\tvariant='contained'\r\n\t\t\tdisabled={followingInProgress.some((item) => item === id)}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tdispatch(followUser(+id, followed));\r\n\t\t\t}}>\r\n\t\t\t{followed ? 'Unfriend' : 'Friend'}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\n","import { Preloader3 } from '../../common/preloader3';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { usersList } from './usersList_styles';\r\nimport { allUsersItemType } from '../../common/types/types'\r\nimport { FriendButton } from '../CustomFriendButton/FriendButton';\r\n\r\n\r\n\r\ninterface IProps {\r\n\tusers: allUsersItemType[],\r\n\tisFetching: boolean\r\n}\r\nexport const UsersList: React.FC<IProps> = React.memo(({ users, isFetching }) => {\r\n\tconst classes = usersList();\r\n\treturn isFetching ? (\r\n\t\t<Preloader3 />\r\n\t) : (\r\n\t\t\t<Grid container spacing={4} className={classes.root}>\r\n\t\t\t\t{users.length === 0 && <div className={classes.notfound}>User not found</div>}\r\n\t\t\t\t{users &&\r\n\t\t\t\t\tusers\r\n\t\t\t\t\t\t.map((user) => (\r\n\t\t\t\t\t\t\t<Grid item xs={2} key={user.id}>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<div className={classes.card}>\r\n\t\t\t\t\t\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.cardmedia}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\timage={user?.photos.large || defaultAvatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='user photo'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.name}>{user?.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<FriendButton id={user.id} followed={user.followed} />\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t);\r\n});\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // дебаунс для инпутов\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usersFilter = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 10,\r\n\t},\r\n}))\r\n","import { FormControl, FormControlLabel, Grid, Radio, RadioGroup, TextField } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsers, setCurrentPage, setFilter, setPageSize, setUsers } from '../../app/reducers/users-reducer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { useDebounce } from '../../common/useDebounce';\r\nimport { RootState } from '../../app/store';\r\nimport { usersFilter } from './usersFilter_styles'\r\n\r\n\r\nexport const UsersFilter: React.FC = () => {\r\n\tconst { currentPage, pageSize, totalUsersCount, filter } = useSelector((state: RootState) => state.users);\r\n\tconst classes = usersFilter();\r\n\tconst dispatch = useDispatch();\r\n\tconst debouncedSearchTerm = useDebounce(filter.searchTerm, 1000);\r\n\tconst debouncedCurrentPage = useDebounce(currentPage, 500)\r\n\t// получения списка пользователей и обновление его при изменении параметров\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(debouncedCurrentPage, pageSize, debouncedSearchTerm, filter.friend))\r\n\t\treturn () => {\r\n\t\t\tdispatch(setUsers([]))\r\n\t\t}\r\n\t}, [dispatch, debouncedCurrentPage, pageSize, debouncedSearchTerm, filter.friend])\r\n\r\n\r\n\r\n\r\n\tconst radioValues = [\r\n\t\t{ value: 'null', label: 'All' },\r\n\t\t{ value: 'true', label: 'Friends' },\r\n\t\t{ value: 'false', label: 'Without friend' },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t<TextField label='Search people'\r\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\tdispatch(setFilter({ searchTerm: event.target.value }))\r\n\t\t\t\t}}\r\n\t\t\t\tid='searchTerm'\r\n\t\t\t\tname='searchTerm'\r\n\t\t\t\tvalue={filter.searchTerm} />\r\n\t\t\t<FormControl component='fieldset' >\r\n\t\t\t\t<RadioGroup row aria-label='position'\r\n\t\t\t\t\tname='position'\r\n\t\t\t\t\tvalue={filter.friend}\r\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => dispatch(setFilter({ friend: e.target.value }))}  >\r\n\t\t\t\t\t{radioValues.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormControlLabel key={item.label}\r\n\t\t\t\t\t\t\t\tvalue={item.value}\r\n\t\t\t\t\t\t\t\tcontrol={<Radio size='small' color='primary' />}\r\n\t\t\t\t\t\t\t\tlabel={item.label}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<TablePagination\r\n\t\t\t\tcomponent='div'\r\n\t\t\t\tcount={totalUsersCount}\r\n\t\t\t\tpage={currentPage}\r\n\t\t\t\tonChangePage={(_, newPage: number) => { dispatch(setCurrentPage(newPage)) }}\r\n\t\t\t\trowsPerPage={pageSize}\r\n\t\t\t\tonChangeRowsPerPage={(event: React.ChangeEvent<HTMLInputElement>) => { dispatch(setPageSize(parseInt(event.target.value, 10))) }}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { UsersList } from '../../components/UsersList/UsersList';\r\nimport { UsersFilter } from '../../components/UsersFilter/UsersFilter';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nexport const UsersPage = () => {\r\n\tconst { users, isFetching } = useSelector((state: RootState) => state.users);\r\n\treturn (\r\n\t\t<>\t<div style={{ background: '#2f3136', borderRadius: \"0px 0px 15px 15px\", height: 600, position: 'relative' }}>\r\n\t\t\t<UsersFilter />\r\n\t\t\t<UsersList users={users} isFetching={isFetching} />\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileMain = makeStyles(() => ({\r\n\t\r\n\troot: {\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '0 0 0 15px',\r\n\t\theight: 600,\r\n\t\talignItems: 'center',\r\n\t\tpadding: 15\r\n\t},\r\n\r\n\tfullName: {\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: 20,\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-all',\r\n\t},\r\n\tfriends: {\r\n\t\tborderTop: '1px solid grey',\r\n\t\tpaddingTop: 5,\r\n\t\twidth: '100%'\r\n\t},\r\n\tfriendButton: {\r\n\t\tmargin: 20,\r\n\t\twidth: 200\r\n\r\n\t},\r\n\tpmButton: {\r\n\t\tmargin: 20,\r\n\t\tcolor: 'black',\r\n\t\t\r\n\t\twidth: 200\r\n\t}\r\n\r\n}))\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileFreinds = makeStyles((theme) => ( {\r\n\tfriendsWrapper: {\r\n\t\tmargin: '15px 0',\r\n\t\talignItems: 'flex-start',\r\n\t\theight:200\r\n\t},\r\n\tname: {\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-word'\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tmarginBottom:10\r\n\t},\r\n\tfriendItemWrapper: {\r\n\t\tcolor: 'grey',\r\n\t\tpadding: 10,\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: theme.palette.primary.main\r\n\t\t},\r\n\t},\r\n\tfriendsLabel: {\r\n\t\tcolor: 'grey',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 13,\r\n\t\tfontWeight: 700,\r\n\t},\r\n}));\r\n\r\n\r\n\r\n","import { Grid, Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { profileFreinds } from './profileFriends_style';\r\nimport React from 'react'\r\nimport { randomArray } from '../../common/randomArray';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nimport { allUsersItemType } from '../../common/types/types';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { getFriends, setFilter } from '../../app/reducers/users-reducer';\r\n\r\nexport const ProfileFriends: React.FC = React.memo(() => {\r\n\tconst users = useSelector((state: RootState) => state.users.users)\r\n\tconst randomUsers = randomArray(users, 6) as allUsersItemType[];\r\n\tconst dispatch = useAppDispatch()\r\n\tReact.useEffect(() => {dispatch(getFriends('true')) }\r\n\t\r\n\t\t, []);\r\n\tconst classes = profileFreinds();\r\n\treturn (\r\n\t\t<Grid container justify='center'>\r\n\t\t\t<p className={classes.friendsLabel}> Friends: <Link onClick={() => dispatch(setFilter({ friend: 'true' }))} to={`/users`}>{users.length}</Link> </p>\r\n\t\t\t<Grid container className={classes.friendsWrapper}>\r\n\t\t\t\t{randomUsers.map((item) => (\r\n\t\t\t\t\t<Grid item xs={4} key={item.id} >\r\n\t\t\t\t\t\t<Link to={`/profile/${item.id}`}>\r\n\t\t\t\t\t\t\t<Grid container className={classes.friendItemWrapper} >\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={item.photos?.large} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.name}>{item.name}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { allUsersItemType } from \"./types/types\";\r\n\r\nexport const randomArray = (arr:allUsersItemType[] , len:number)  => {  \r\n\tconst sorted = arr.slice().sort(() => Math.random() - 0.5);\r\n\tsorted.length = len\r\n\treturn sorted;\r\n}\r\n\r\n// перемешать и вытащить N рандомных элементов из массива\r\n//array is frozen in strict mode, you'll need to copy the array before sorting it","import { Badge, makeStyles, withStyles } from '@material-ui/core';\r\nexport const profileAvatar = makeStyles((theme) => ({\r\n\tavatar: {\r\n\t\twidth: 150,\r\n\t\theight: 150,\r\n\t},\r\n\tuploadButton: {\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.secondary.main\r\n\t\t}\r\n\t}\r\n\r\n}));\r\nexport const StyledBadge = withStyles(() => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 140,\r\n\t\tright: 5,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\nimport { updateAvatar } from '../../app/reducers/profile-reducer';\r\nimport { profileAvatar, StyledBadge } from './profileAvatar_styles';\r\nimport React from 'react';\r\nimport { profileDataType } from '../../common/types/types';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png'\r\n\r\ntype PropsType = {\r\n\tprofile: profileDataType\r\n\trouterId: number\r\n}\r\n\r\n\r\nexport const ProfileAvatar: React.FC<PropsType> = React.memo(({ profile, routerId }) => {\r\n\tconst classes = profileAvatar();\r\n\tconst dispatch = useAppDispatch();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<StyledBadge\r\n\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\tid='contained-button-file'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\tonChange={(e) => e.target.files && dispatch(updateAvatar(e.target.files[0]))}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor='contained-button-file'>\r\n\t\t\t\t\t\t\t\t<IconButton color='primary' className={classes.uploadButton} component='span'>\r\n\t\t\t\t\t\t\t\t\t<AddAPhotoOutlinedIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t<Avatar className={classes.avatar} alt='user foto' src={profile.photos?.large} />\r\n\t\t\t\t</StyledBadge>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Avatar className={classes.avatar} alt='user foto' src={profile.photos?.large || defaultAvatar} />\r\n\t\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n","import { updateStatus } from '../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport {  useAppDispatch } from '../../app/store';\r\n\r\nexport const useStatus = () => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState('');\r\n\tconst status = useSelector((state) => state.profile.status);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tsetUserStatus(status);\r\n\t}, [status]);\r\n\r\n\r\n\tconst deactivateMode = (action) => () => {\r\n\t\tif (!action) {\r\n\t\t\tsetUserStatus(status);\r\n\t\t\tsetEditMode(false);\r\n\t\t} else {\r\n\t\t\tsetEditMode(false);\r\n\t\t\tdispatch(updateStatus(userStatus));\r\n\t\t}\r\n\t};\r\n\tconst onStatusChange = (e => {\r\n\t\tsetUserStatus(e.target.value);\r\n\t})\r\n\r\n\r\n\treturn [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status]\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileStatus = makeStyles((theme) => ({\r\n\tstatus: {\r\n\t\tcursor: 'pointer',\r\n\t\tfontSize: 16,\r\n\t\t\"&:hover\": { color: theme.palette.secondary.main },\r\n\t\tcolor: theme.palette.primary.main,\r\n\t\twordBreak: 'break-word',\r\n\t\tpadding: 10,\r\n\t},\r\n\ticon: {\r\n\t\tmargin:'0 5px 0 10px',\r\n\t\tfontSize: 20,\r\n\t\tcursor:'pointer',\r\n\t},\r\n\tinput: {\r\n\t\twidth: 300,\r\n\t\tfontSize: 20,\r\n\t\tmarginRight:10,\r\n\t\ttextAlign:'center'\r\n\t\t\r\n\t},\r\n\troot:{\r\n\t\tminHeight:70,\r\n\t\tpadding:5,\r\n\t}\r\n}))\r\n","import React from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, InputBase } from '@material-ui/core';\r\nimport { useStatus } from './useStatus';\r\nimport { profileStatus } from './profileStatus_styles';\r\n\r\ninterface IProps  {\r\n\trouterId: number\r\n}\r\nexport const ProfileStatus: React.FC<IProps> = React.memo(({ routerId }) => {\r\n\tconst [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status] = useStatus();\r\n\tconst classes = profileStatus();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{editMode && !routerId ? (\r\n\t\t\t\t<Grid component='form' onSubmit={deactivateMode(true)}>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tvalue={userStatus}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<SaveIcon fontSize='small' color='primary' className={classes.icon} onClick={deactivateMode(true)}/>\r\n\t\t\t\t\t\t\t\t\t<CloseIcon fontSize='small' color='secondary'className={classes.icon}  onClick={deactivateMode(false)}/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={classes.status}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetEditMode(true);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t\t<span>{!routerId && <EditIcon className={classes.icon} color='inherit' />}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n});\r\n","import { profileMain } from './profileMain_styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ProfileFriends } from '../ProfileFriends/ProfileFriends';\r\nimport { ProfileAvatar } from '../ProfileAvatar/ProfileAvatar';\r\nimport React from 'react';\r\nimport { ProfileStatus } from '../ProfileStatus/ProfileStatus';\r\nimport { FriendButton } from '../CustomFriendButton/FriendButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../app/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\ntype IProps = {\r\n\trouterId: number\r\n}\r\n\r\nexport const ProfileMain: React.FC<IProps> = ({ routerId }) => {\r\n\tconst profile = useSelector((state: RootState) => state.profile.profile);\r\n\r\n\tconst classes = profileMain();\r\n\treturn (\r\n\t\t<Grid container className={classes.root} direction='column' justify='space-around'>\r\n\t\t\t<ProfileAvatar profile={profile} routerId={routerId} />\r\n\t\t\t<Grid item className={classes.fullName}>\r\n\t\t\t\t{profile.fullName?.toUpperCase()}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<ProfileStatus routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<Grid item className={classes.friends}>\r\n\t\t\t\t\t<ProfileFriends />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{routerId && (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className={classes.friendButton}>\r\n\t\t\t\t\t\t\t\t\t<FriendButton id={routerId} followed={profile.followed} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t<Link to={`/messenger/${routerId}`}>\r\n\t\t\t\t\t\t\t\t\t\t<Button color='secondary' variant='contained' className={classes.pmButton} >\r\n\t\t\t\t\t\t\t\t\t\t\tWhite a message\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileInfoStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\theight: 600,\r\n\t\tmaxWidth: 300,\r\n\t\tpadding: 2,\r\n\t\tjustifyContent: 'space-around',\r\n\t\talignItems: 'center',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'grey', \r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tdescriptionLabel:{\r\n\t\tcolor:theme.palette.secondary.main,\r\n\t\tfontSize:16,\r\n\t\tfontWeight:700\r\n\t}\r\n}))\r\n","import React, { Dispatch } from 'react';\r\nimport { FormControlLabel, Grid, IconButton, Radio } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsSharp';\r\nimport { RootState } from '../../app/store';\r\nimport { profileInfoStyles } from './profileInfo_styles'\r\n\r\ninterface IProps  {\r\n\tsetEditForm: Dispatch<boolean>\r\n\trouterId: number\r\n}\r\nexport const ProfileInfo: React.FC<IProps> = React.memo(({ setEditForm, routerId }) => {\r\n\tconst  profile  = useSelector((state: RootState) => state.profile.profile);\r\n\tconst isContacts = profile.contacts && Object.values(profile.contacts).find((i) => !!i);\r\n\tconst classes = profileInfoStyles();\r\n\tconst editHandler = () => {\r\n\t\tsetEditForm(true);\r\n\t};\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t{profile?.aboutMe && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<p className={classes.descriptionLabel}>About me:</p>\r\n\t\t\t\t\t<p>{profile?.aboutMe}</p>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{profile?.lookingForAJobDescription && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.descriptionLabel}> Skills: </p>\r\n\t\t\t\t\t<p>{profile?.lookingForAJobDescription}</p>\r\n\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tvalue='best'\r\n\t\t\t\t\t\tcontrol={<Radio checked={profile?.lookingForAJob} color='primary' disabled />}\r\n\t\t\t\t\t\tlabel='Looking for a job'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{isContacts && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.descriptionLabel}>Contacts:</p>\r\n\t\t\t\t\t{profile.contacts &&\r\n\t\t\t\t\t\tObject.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tprofile.contacts[key] && (\r\n\t\t\t\t\t\t\t\t\t<Grid key={key} item>\r\n\t\t\t\t\t\t\t\t\t\t<a href={`//${profile.contacts[key]}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t{profile.contacts[key]} </a>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{!routerId && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<IconButton onClick={editHandler} color='secondary'>\r\n\t\t\t\t\t\t<SettingsSharpIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileEditForm = makeStyles(() => ({\r\n\troot: {\r\n\t\talignItems: 'center',\r\n\t\theight: 600,\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tflexDirection: 'column'\r\n\t},\r\n\tleftBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\t\"&>*\": { margin: 30 },\r\n\t\tmarginLeft:100\r\n\r\n\t},\r\n\trightBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\t\"&>*\": { margin: 27 },\r\n\t\tmarginRight:100\r\n\t},\r\n\tjob: {\r\n\r\n\t\tcolor: 'white',\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red'\r\n\t},\r\n\tbuttons: {\r\n\t\tmargin: 20,\r\n\t}\r\n}));","import { TextField } from \"@material-ui/core\"\r\n\r\n\r\ninterface IProps {\r\n\tlabel: string,\r\n\terrors: string | undefined,\r\n\ttouched: boolean | undefined,\r\n\t[x:string]: any;\r\n}\r\nexport const CustomTextField: React.FC<IProps> = ({ label, errors, touched, ...props }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2> {label}: </h2>\r\n\t\t\t<TextField\r\n\t\t\t\ttype='text'\r\n\t\t\t\tsize='small'\r\n\t\t\t\tmultiline\r\n\t\t\t\trowsMax={2}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{errors && touched &&\r\n\t\t\t\t<div >\r\n\t\t\t\t\t{errors}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import { Grid, TextField, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { putNewProfile } from '../../app/reducers/profile-reducer';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { profileEditForm } from './profileEditForm_style';\r\nimport * as Yup from 'yup';\r\nimport { Dispatch } from 'react';\r\nimport { RootState } from '../../app/store';\r\nimport { CustomTextField } from '../CustomTextField/CustomTextFeild';\r\n\r\n\r\ninterface IProps {\r\n\tsetEditForm: Dispatch<boolean>\r\n}\r\nexport const ProfileEditForm: React.FC<IProps> = ({ setEditForm }) => {\r\n\tconst { profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = profileEditForm();\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: profile,\r\n\t\tonSubmit: (e) => {\r\n\t\t\tdispatch(putNewProfile(e));\r\n\t\t\tsetEditForm(false);\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tfullName: Yup.string()\r\n\t\t\t\t.min(4, 'Name must be longer than 4 characters.')\r\n\t\t\t\t.max(30, 'Name must be shorter than 30 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t\taboutMe: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t\tlookingForAJobDescription: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t}),\r\n\t});\r\n\r\n\tconst contactsName = ['vk', 'facebook', 'github'];\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<Grid container direction='row' justify='space-around' alignItems='center'>\r\n\t\t\t\t<div className={classes.leftBlock}>\r\n\t\t\t\t\t<CustomTextField label='Name' id='fullName' errors={errors.fullName} touched={touched.fullName}\r\n\t\t\t\t\t\tonBlur={handleBlur} onChange={handleChange} value={values.fullName} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CustomTextField label='About me' id='aboutMe' errors={errors.aboutMe} touched={touched.aboutMe}\r\n\t\t\t\t\t\t\tonBlur={handleBlur} onChange={handleChange} value={values.aboutMe} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CustomTextField label='Skills' id='lookingForAJobDescription' errors={errors.lookingForAJobDescription}\r\n\t\t\t\t\t\t\ttouched={touched.lookingForAJobDescription}\r\n\t\t\t\t\t\t\tonBlur={handleBlur} onChange={handleChange} value={values.lookingForAJobDescription} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.rightBlock}>\r\n\t\t\t\t\t<h2>Contacts:</h2>\r\n\t\t\t\t\t{contactsName.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tkey={item}\r\n\t\t\t\t\t\t\t\tvalue={values?.contacts[item] || ''}\r\n\t\t\t\t\t\t\t\tname={'contacts.' + item}\r\n\t\t\t\t\t\t\t\tid={item}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tlabel={item}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<div>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tclassName={classes.job}\r\n\t\t\t\t\tlabelPlacement='start'\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Checkbox size='small' checked={values?.lookingForAJob} onChange={handleChange} color='primary' id='lookingForAJob' />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel='Are you looking for a job?'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t<AddRoundedIcon color='primary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={() => setEditForm(false)} type='submit'>\r\n\t\t\t\t\t\t<CloseRoundedIcon color='secondary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nexport const dateHelper = (date,timeZone=10800000) => {\r\n\t// работает,но че-т хрень какая-то)\r\n\t\r\n\tconst ruTime = new Date(date).getTime()\r\n\tconst currentTime = new Date(ruTime+timeZone).toLocaleTimeString('ru', {hour: '2-digit', minute:'2-digit'})\r\n\tconst formatedDate = new Date(ruTime+timeZone).toLocaleDateString()\r\n\tconst currentDate = new Date().toLocaleDateString()\r\n\tconst yesterdayDate = new Date(Date.now() - 86400000+ timeZone).toLocaleDateString()\r\n\t\r\n\r\n\r\n\tconst visibleDate =\r\n\t\tformatedDate === currentDate ?\r\n\t\t\t'today ' + currentTime\r\n\t\t\t:\r\n\t\t\tformatedDate === yesterdayDate ?\r\n\t\t\t\t'yesterday ' + currentTime\r\n\t\t\t\t:\r\n\t\t\t\tformatedDate\r\n\r\n\treturn visibleDate\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profilePosts = makeStyles(() => ({\r\n\troot: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 450,\r\n\t\twidth: '100%',\r\n\t\tmarginTop:20,\r\n\t\tpaddingRight:3\r\n\r\n\t},\r\n\tcontainer: {\r\n\t\tcolor: 'grey',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\t\r\n\t\twidth: '100%',\r\n\t\twordBreak: 'break-word'\r\n\r\n\t},\r\n\tpostWrapper: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tbackgroundColor: '#202225',\r\n\t\tpadding: 10,\r\n\t\tmarginBottom:10,\r\n\t\tborderRadius: 5\r\n\r\n\t},\r\n\tdate: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: 9\r\n\t},\r\n\tbody: {\r\n\t\twidth: '100%',\r\n\t\tpaddingTop: 40\r\n\t},\r\n\tavatar: {\r\n\t\tmarginRight: 20\r\n\t},\r\n\tfullName: {\r\n\t\tmarginRight: 10,\r\n\t\tcolor: 'orange'\r\n\t}\r\n}));","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { dateHelper } from '../../common/dateHelper'\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\r\nimport { Avatar, Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { setLike } from \"../../app/reducers/profile-reducer\";\r\nimport { profilePosts } from \"./profilePosts_styles\";\r\n\r\nexport const ProfilePosts: React.FC = () => {\r\n\tconst { authUser, posts, profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = profilePosts()\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t{posts?.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={item.date} className={classes.postWrapper}>\r\n\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={item.userId ? authUser.photos?.small : profile.photos?.small} />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Grid container direction='row' alignItems='center' >\r\n\t\t\t\t\t\t\t\t\t<p className={classes.fullName}>{item.userId ? authUser.fullName : profile.fullName}</p>\r\n\t\t\t\t\t\t\t\t\t<p className={classes.date}>{dateHelper(item.date, 0)}</p>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<span className={classes.body}>{item.body}</span>\r\n\t\t\t\t\t\t\t\t<Grid container alignItems='center'>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => dispatch(setLike({ like: e.target, idx }))}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={item.isLiked} icon={<FavoriteBorder />} checkedIcon={<Favorite />} name='checkedH\t' />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={item.likesCount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileWall = makeStyles(() => ({\r\n\r\n\troot: {\r\n\t\tbackgroundColor: '#2f3136',\r\n\t\theight: 600,\r\n\t\tpadding: 10,\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\t\r\n\t},\r\n\r\n}))","import { makeStyles } from \"@material-ui/core\";\r\nexport const chatForm = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#40444b',\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 10,\r\n\t\tborderRadius: 7,\r\n\t\twidth: '100%'\r\n\t},\r\n\tinput: {\r\n\t\tcolor: 'white',\r\n\t\tmarginLeft: 15,\r\n\t\twidth: '100%',\r\n\t\tpaddingRight: 20,\r\n\t\tpadding:4\r\n\t},\r\n\tsendIcon:{\r\n\t\tfontSize:13,\r\n\t\tcolor:theme.palette.primary.main\r\n\t}\r\n}))","import { Grid, InputBase, IconButton } from '@material-ui/core';\r\nimport { chatForm } from './chatInput_styles';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\ninterface IProps {\r\n\tdisabled?: boolean,\r\n\t[x:string]:any,\r\n}\r\n\r\nexport const ChatInput: React.FC<IProps> = ({ handleSubmit, ...props }) => {\r\n\tconst classes = chatForm()\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<InputBase inputProps={{ ...props }}\r\n\t\t\t\tclassName={classes.input}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tautoFocus={true}\r\n\t\t\t\tplaceholder='write a message'\r\n\t\t\t\tname='message'\r\n\t\t\t\tid='message'\r\n\t\t\t\tendAdornment={\r\n\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t<SendRoundedIcon color='inherit' className={classes.sendIcon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\n","import { Grid } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { setPost } from '../../app/reducers/profile-reducer';\r\nimport { ProfilePosts } from '../ProfilePost/ProfilePosts';\r\nimport { profileWall } from './profileWall_styles';\r\nimport React from 'react'\r\nimport { ChatInput } from '../ChatInput/ChatInput';\r\n\r\n\r\n\r\n\r\nexport const ProfileWall: React.FC = React.memo(() => {\r\n\tconst userId = useSelector((state: RootState) => state.profile.authUser.userId);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = profileWall()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetPost({\r\n\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\tbody: message,\r\n\t\t\t\t\tdate: new Date().toJSON(),\r\n\t\t\t\t\tlikesCount: 0,\r\n\t\t\t\t\tisLiked: false,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\tconsole.log('render')\r\n\treturn (\r\n\t\t<Grid className={classes.root}>\r\n\t\t\t<ChatInput onChange={handleChange} handleSubmit={handleSubmit} value={values.message} />\r\n\t\t\t<ProfilePosts />\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tborderRadius: '0 0 15px 15px',\r\n\t\tposition: 'relative',\r\n\t\twidth: '100%',\r\n\t\theight: 600,\r\n\t\tjustifyContent: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\t\r\n\r\n\t},\r\n\trightBlockWrapper: {\r\n\t\theight: 600\r\n\t}\r\n}));","import { useSelector } from 'react-redux';\r\nimport { getUserProfile, setIsError, setIsLoading } from '../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Preloader3 } from '../../common/preloader3';\r\nimport { ProfileMain } from '../../components/ProfileMain/ProfileMain';\r\nimport { ProfileInfo } from '../../components/ProfileInfo/ProfileInfo';\r\nimport { ProfileEditForm } from '../../components/ProfileEditForm/ProfileEditForm';\r\nimport { ProfileWall } from '../../components/ProfileWall/ProfileWall';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { profileStyles } from './profile_styles'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ProfilePage: React.FC = ({ match }: any) => {\r\n\t//TODO обработать ошибки сервера\r\n\tconst authUserId = useSelector((state: RootState) => state.auth.id);\r\n\tconst routerId = match.params.userId;\r\n\tconst profileUserId = routerId || authUserId;\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [editForm, setEditForm] = useState(false);\r\n\tconst classes = profileStyles();\r\n\tconst isLoading = useSelector((state: RootState) => state.profile.isLoading);\r\n\tconst isError = useSelector((state: RootState) => state.profile.isError);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tprofileUserId && dispatch(getUserProfile(profileUserId))\r\n\t\treturn () => {\r\n\t\t\tdispatch(setIsLoading(true))\r\n\t\t}\r\n\t}, [dispatch, profileUserId])\r\n\r\n\tconst handleClose = () => {\r\n\t\tdispatch(setIsError(''))\r\n\t};\r\n\r\n\tif (isLoading) {\r\n\t\treturn <div className={classes.root}>\r\n\t\t\t<Preloader3 />\r\n\t\t</div>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Snackbar open={!!isError} autoHideDuration={5000} onClose={handleClose} >\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tFetch error\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<ProfileMain routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={8} className={classes.rightBlockWrapper}>\r\n\t\t\t\t{editForm ? (\r\n\t\t\t\t\t<ProfileEditForm setEditForm={setEditForm} />) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t<ProfileInfo routerId={routerId} setEditForm={setEditForm} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t<ProfileWall />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default withRouter(ProfilePage);\r\n","import { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { ChatInput } from '../ChatInput/ChatInput';\r\n\r\n\r\nexport const ChatForm: React.FC = () => {\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tmessage && dispatch(sendMessage(message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<ChatInput\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tvalue={values.message}\r\n\t\t\tdisabled={status !== 'ready'}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatMessages = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\r\n\t},\r\n\tsenderName: {\r\n\t\tcolor: 'white',\r\n\t\tfontWeight: 700,\r\n\t},\r\n\tmessageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: \"break-word\",\r\n\t},\r\n\tmessagesWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tmessage: {\r\n\t\tpadding: '14px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t},\r\n}))","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ChatForm } from '../ChatForm/ChatForm';\r\nimport React from 'react';\r\nimport { chatMessages } from './chatMessages_styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\n\r\nexport const ChatMessages: React.FC = () => {\r\n\tconst messages = useSelector((state: RootState) => state.chat.messages)\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\tconst classes = chatMessages();\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => scrollToBottom(), [messages]);\r\n\r\n\r\n\treturn (\r\n\t\t<Grid xs className={classes.root}>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Grid className={classes.messagesWrapper}>\r\n\t\t\t\t\t{messages?.map((i, idx) => (\r\n\t\t\t\t\t\t<Grid className={classes.message} key={idx}>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Avatar alt='avatar' src={i?.photo} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\t\t\t<p className={classes.senderName}> {i.userName}</p>\r\n\t\t\t\t\t\t\t\t<p className={classes.messageBody}>{i.message} </p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<ChatForm />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/devs.b3345405.jpg\";","import { makeStyles, Badge, withStyles } from '@material-ui/core';\r\nexport const messengerNavBar = makeStyles(() => ({\r\n\troot: {\r\n\t\tpadding: '15px',\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0px 0px 0px 15px',\r\n\t\theight: 600,\r\n\t},\r\n\t\r\n\tpmWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\tpadding: '0 5px'\r\n\t},\r\n\tchip: {\r\n\t\twidth: 160,\r\n\t\tjustifyContent: 'left',\r\n\t\tmargin: '5px 0',\r\n\t\tbackground: '#40444b',\r\n\t},\r\n}));\r\n\r\nexport const NavBadge = withStyles(() => ({\r\n\tbadge: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: 21,\r\n\t\tright: 15,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, Chip } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getDialogs } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport devs from '../../common/assets/img/devs.jpg';\r\nimport { messengerNavBar, NavBadge } from './chatNavBar_styles';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png'\r\n\r\nexport const ChatNavBar: React.FC = () => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tdispatch(getDialogs());\r\n\t}, []);\r\n\tconst classes = messengerNavBar();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<h4>Chat rooms: </h4>\r\n\t\t\t<NavLink to={'/messenger'} activeClassName='navchat'>\r\n\t\t\t\t<Avatar src={devs} />\r\n\t\t\t</NavLink>\r\n\t\t\t<h4>PM: </h4>\r\n\t\t\t<div className={classes.pmWrapper}>\r\n\t\t\t\t{dialogs.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NavLink to={`/messenger/${item.id}`} key={item.id} activeClassName='navchat'>\r\n\t\t\t\t\t\t\t<NavBadge badgeContent={item.newMessagesCount} color='secondary' >\r\n\t\t\t\t\t\t\t\t<Chip key={idx}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\tavatar={<Avatar src={item?.photos?.small || defaultAvatar} />}\r\n\t\t\t\t\t\t\t\t\tlabel={item?.userName}\r\n\t\t\t\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\t\t\t></Chip>\r\n\t\t\t\t\t\t\t</NavBadge>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n};\r\n","\r\nimport { useFormik } from 'formik';\r\nimport { sendMessage } from '../../app/reducers/dialogs-reducer';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { ChatInput } from '../ChatInput/ChatInput';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\n\r\nexport const PrivateForm: React.FC<PropsType> = ({ routerId }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(sendMessage(routerId, message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<ChatInput handleSubmit={handleSubmit} onChange={handleChange} value={values.message} />\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateMessages = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\r\n\t},\r\n\tmessagesWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tmessageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: 'break-word',\r\n\t},\r\n\tdoneIcon: {\r\n\t\tcolor: 'orange',\r\n\t\tfontSize: 12,\r\n\t},\r\n\tdoneAllIcon: {\r\n\t\tcolor: 'green',\r\n\t\tfontSize: 12,\r\n\r\n\t},\r\n\taddedAt: {\r\n\t\tfontSize: 10,\r\n\t\tcolor: 'grey',\r\n\t},\r\n\tsenderName: {\r\n\t\tcolor: '#fff',\r\n\t\tfontWeight: 700,\r\n\t\tmarginRight: 10\r\n\r\n\t},\r\n\tmessageContent: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '9px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": {\r\n\t\t\t\t\"&>*\": {\r\n\t\t\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeleteIcon: {\r\n\t\tcursor: 'pointer',\r\n\t\topacity: 0,\r\n\t\tfontSize: 15,\r\n\t\tmarginLeft: 5\r\n\r\n\t},\r\n\tmessageTitle: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t}\r\n\r\n\t},\r\n\tavatar: {\r\n\t\tmarginRight: 15\r\n\t}\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { PrivateForm } from '../PrivateForm/PrivateForm';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\r\nimport { deleteMessage, getMessages, setMessages } from '../../app/reducers/dialogs-reducer';\r\nimport { dateHelper } from '../../common/dateHelper';\r\nimport { privateMessages } from './privateMessages_styles';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { dialogsArrayType } from '../../common/types/types';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { getNewMessagesCount } from '../../app/reducers/dialogs-reducer';\r\nimport { Preloader3 } from '../../common/preloader3'\r\n\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n\trecipient: dialogsArrayType\r\n\r\n}\r\nexport const PrivateMessages: React.FC<PropsType> = ({ routerId, recipient }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = privateMessages();\r\n\tconst messages = useSelector((state: RootState) => state.dialogs.messages);\r\n\tconst messagesFething = useSelector((state: RootState) => state.dialogs.messagesFething);\r\n\tconst { authUser } = useSelector((state: RootState) => state.profile);\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tdispatch(setMessages([]))\r\n\t\tdispatch(getMessages(routerId));\r\n\r\n\t}, [routerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getNewMessagesCount())\r\n\t\tscrollToBottom()\r\n\t}, [messages]);\r\n\r\n\treturn (\r\n\t\t<Grid item xs className={classes.root}>\r\n\t\t\t<Grid className={classes.messagesWrapper}>\r\n\t\t\t\t{messagesFething && !messages ? <Preloader3 /> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{messages?.map((item: any, idx: any) => (\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tclassName={classes.messageContent}\r\n\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\talt='avatar'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\t\t\t\tsrc={item.senderId === authUser?.userId ? authUser?.photos?.large : recipient?.photos?.large}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Grid container >\r\n\t\t\t\t\t\t\t\t\t<span className={classes.senderName}>{item.senderName}</span>\r\n\t\t\t\t\t\t\t\t\t<Grid className={classes.messageTitle}>\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.senderId === authUser?.userId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t(item.viewed ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneAllRoundedIcon className={classes.doneAllIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneRoundedIcon className={classes.doneIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.addedAt}>{dateHelper(item.addedAt)}</span>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteOutlineOutlinedIcon onClick={() => dispatch(deleteMessage(item.id, routerId))} className={classes.deleteIcon} color='secondary' />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center' className={classes.messageBody}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item>{item.body}</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<PrivateForm routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateUserInfo = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth:250,\r\n\t\tpadding:'100px 0px',\r\n\t\tbackground: '#2f3136',\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\tcolor: '#8e9297',\r\n\t\tposition: 'relative',\r\n\t\theight: 600,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: theme.palette.primary.main,\r\n\t\t},\r\n\t\r\n\t},\r\n\tavatar: {\r\n\t\tborderRadius: '50%',\r\n\t\twidth: 250,\r\n\t\theight: 250,\r\n\t\tpadding:30\r\n\t},\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dateHelper } from '../../common/dateHelper';\r\nimport { privateUserInfo } from './privateUserInfo_styles';\r\nimport { dialogsArrayType } from '../../common/types/types';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png'\r\n\r\ntype PropsType = {\r\n\trecipient: dialogsArrayType,\r\n\trouterId: number\r\n}\r\n\r\nexport const PrivateUserInfo: React.FC<PropsType> = ({ recipient, routerId }) => {\r\n\tconst classes = privateUserInfo();\r\n\treturn (\r\n\t\t<Link to={'/profile/' + routerId}>\r\n\t\t\t<Grid container direction='column' alignItems='center' justify='space-around' className={classes.root}>\r\n\t\t\t\t<h2>{recipient?.userName}</h2>\r\n\t\t\t\t<Avatar alt='profile avatar' src={recipient?.photos.large || defaultAvatar} className={classes.avatar} />\r\n\t\t\t\t<Grid container direction='column' alignItems='center'>\r\n\t\t\t\t\t<div> Was online:</div>\r\n\t\t\t\t\t<div>{recipient?.lastUserActivityDate && dateHelper(recipient?.lastUserActivityDate)}</div>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t</Link>\r\n\t);\r\n};\r\n","import { Badge, makeStyles, withStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatUsersList = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth:250,\r\n\t\tpadding:'20px 0px',\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\theight: 600,\r\n\t},\r\n\tuser: {\r\n\t\tcolor: '#8e9297',\r\n\t\tfontSize:14,\r\n\t\tpadding: '10px 20px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(79,84,92,0.32)',\r\n\t\t\tcolor:  theme.palette.primary.main,\r\n\t\t\tborderRadius: 7,\r\n\t\t\t\r\n\t\t},\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\tusersWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\tmargin: '16px 0px'\r\n\t},\r\n}));\r\n\r\nexport const StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: '#44b700',\r\n\t\tboxShadow: `0 0 0 1px ${theme.palette.background.paper}`,\r\n\t\t'&::after': {\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: '50%',\r\n\t\t},\r\n\t},\r\n}))(Badge);","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../app/store';\r\nimport { chatUsersList, StyledBadge } from './chatUsersList_styles';\r\n\r\n\r\nexport const ChatUsersList: React.FC = () => {\r\n\tconst { messages } = useSelector((state: RootState) => state.chat);\r\n\tconst usersList = messages.filter(((temp) => (a: any) => !temp[a.userId] && (temp[a.userId] = true))(Object.create(null)));\r\n\r\n\tconst classes = chatUsersList();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<h4>Users — {usersList?.length}</h4>\r\n\t\t\t<div className={classes.usersWrapper}>\r\n\t\t\t\t{usersList?.map((i, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link to={`/messenger/${i.userId || i.id}`} key={idx}>\r\n\t\t\t\t\t\t\t<Grid container alignItems='center' className={classes.user}>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\toverlap='circle'\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvariant='dot'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={i?.photo} className={classes.avatar} />\r\n\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<p style={{ marginLeft: 12 }}>\r\n\t\t\t\t\t\t\t\t\t{i.userName}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { ChatMessages } from '../../components/ChatMessages/ChatMessages';\r\nimport { ChatNavBar } from '../../components/ChatNavBar/ChatNavBar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { PrivateMessages } from '../../components/PrivateMessages/PrivateMessages';\r\nimport { PrivateUserInfo } from '../../components/PrivateUserInfo/PrivateUserInfo';\r\nimport { ChatUsersList } from '../../components/ChatUsersList/ChatUsersList';\r\nimport { startMessagesListening, stopMessagesListening } from '../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\nconst MessengerPage: React.FC = ({ match }: any) => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst routerId = match.params.userId;\r\n\tconst recipient = dialogs.filter((item) => item.id == routerId)[0]\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startMessagesListening());\r\n\t\treturn () => {\r\n\t\t\tdispatch(stopMessagesListening());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container direction='row' justify='center'>\r\n\t\t\t<Grid item xs={2}>\r\n\t\t\t\t<ChatNavBar />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={10}>\r\n\t\t\t\t<Grid container >\r\n\t\t\t\t\t{routerId ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PrivateMessages routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t\t<PrivateUserInfo routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n\t\t\t\t\t\t\t\t<ChatMessages />\r\n\t\t\t\t\t\t\t\t<ChatUsersList />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MessengerPage);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const header = makeStyles(() => ({\r\n\twrapper: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '5px 30px',\r\n\t\twidth: 1240\r\n\t},\r\n\tauthUserWrapper: {\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t},\r\n\troot: {\r\n\t\tbackground: 'linear-gradient(to top, #232526, #414345)',\r\n\t\tborderRadius: '15px 15px 0 0',\r\n\t},\r\n}));","import {  Avatar, Badge, Grid, IconButton } from '@material-ui/core';\r\nimport { logout } from '../../app/reducers/auth-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuthUser } from '../../app/reducers/profile-reducer';\r\nimport LaunchOutlinedIcon from '@material-ui/icons/LaunchOutlined';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { getNewMessagesCount } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { header } from './header_styles';\r\n\r\nexport const Header = () => {\r\n\tconst classes = header();\r\n\tconst authUser = useSelector((state: RootState) => state.profile.authUser);\r\n\tconst { isAuth, id } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\tconst { newMessagesCount } = useSelector((state: RootState) => state.dialogs);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (id) {\r\n\t\t\tdispatch(getAuthUser(id));\r\n\t\t\tdispatch(getNewMessagesCount());\r\n\t\t}\r\n\t}, [dispatch, id]);\r\n\r\n\tconst navTitles = ['profile', 'users', 'messenger'];\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t\t{navTitles.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid item key={item}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/' + item} activeClassName='header'>\r\n\t\t\t\t\t\t\t\t\t<h2> {item.toLocaleUpperCase()}</h2>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{isAuth && (\r\n\t\t\t\t\t<Grid container spacing={3} className={classes.authUserWrapper}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<a href='https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#'>\r\n\t\t\t\t\t\t\t\t<h2>API</h2>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Link to={`/profile`}>\r\n\t\t\t\t\t\t\t\t<h4>{authUser?.fullName}</h4>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t{newMessagesCount ? (\r\n\t\t\t\t\t\t\t\t<Link to={`/messenger`}>\r\n\t\t\t\t\t\t\t\t\t<Badge badgeContent={newMessagesCount} color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<IconButton onClick={() => dispatch(logout())}>\r\n\t\t\t\t\t\t\t\t<LaunchOutlinedIcon color='secondary' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { LoginPage } from './pages/LoginPage/LoginPage';\r\nimport { UsersPage } from './pages/UsersPage/UsersPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { init } from './app/reducers/app-reducer';\r\nimport { useEffect } from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\r\nimport MessengerPage from './pages/MessangerPage/MessengerPage';\r\nimport { Preloader3 } from './common/preloader3';\r\nimport { Container} from '@material-ui/core';\r\nimport { Header } from './components/Header/Header';\r\nimport { RootState, useAppDispatch } from './app/store';\r\n\r\n//TODO сделать lazy load\r\n//  const Chat = React.lazy(() => import(\"./features/chat\"))\r\nfunction App() {\r\n\tconst isInit = useSelector((state:RootState) => state.app.isInit);\r\n\tconst isAuth = useSelector((state:RootState) => state.auth.isAuth);\r\n\tconst authUserId = useSelector((state:RootState) => state.auth.id);\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => dispatch(init()), [dispatch]);\r\n\treturn (\r\n\t\t<Container >\r\n\t\t\t{!isInit ? (\r\n\t\t\t\t<Preloader3 />\r\n\t\t\t) : !isAuth ? (\r\n\t\t\t\t<LoginPage />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path={'/profile/' + authUserId} render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t\t<Route exact path='/profile/:userId?' render={() => <ProfilePage />} />\r\n\t\t\t\t\t\t<Route exact path='/users' render={() => <UsersPage />} />\r\n\t\t\t\t\t\t<Route exact path={'/messenger/' + authUserId} render={() => <Redirect to={'/messenger'} />} />\r\n\t\t\t\t\t\t<Route exact path='/messenger/:userId?' render={() => <MessengerPage />} />\r\n\t\t\t\t\t\t<Route exact path='*' render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: {\r\n\t\t\tmain: \"#00BFFF\",\r\n\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#B22222'\r\n\t\t}\r\n\t},\r\n});\r\nconsole.log(theme)\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}