{"version":3,"sources":["app/api/api.ts","common/types/types.ts","app/api/auth-api.ts","app/reducers/auth-reducer.ts","pages/LoginPage/login_styles.tsx","app/api/profile-api.ts","app/api/users-api.ts","app/reducers/profile-reducer.ts","common/posts.js","app/reducers/users-reducer.ts","app/reducers/app-reducer.ts","app/api/dialogs-api.ts","app/reducers/dialogs-reducer.ts","app/api/chat-api.ts","app/reducers/chat-reducer.ts","app/store.ts","pages/LoginPage/LoginPage.tsx","common/preloader3.js","common/assets/img/defaultAvatar.png","components/UsersList/usersList_styles.tsx","components/CustomFriendButton/FriendButton.tsx","components/UsersList/UsersList.tsx","common/useDebounce.js","components/UsersFilter/usersFilter_styles.tsx","components/UsersFilter/UsersFilter.tsx","pages/UsersPage/UsersPage.tsx","components/ProfileMain/profileMain_styles.tsx","components/ProfileFriends/profileFriends_style.tsx","components/ProfileFriends/ProfileFriends.tsx","common/randomArray.ts","components/ProfileAvatar/profileAvatar_styles.tsx","components/ProfileAvatar/ProfileAvatar.tsx","components/ProfileStatus/useStatus.js","components/ProfileStatus/profileStatus_styles.tsx","components/ProfileStatus/ProfileStatus.tsx","components/ProfileMain/ProfileMain.tsx","components/ProfileInfo/profileInfo_styles.tsx","components/ProfileInfo/ProfileInfo.tsx","components/ProfileEditForm/profileEditForm_style.tsx","components/CustomTextField/CustomTextFeild.tsx","components/ProfileEditForm/ProfileEditForm.tsx","common/dateHelper.js","components/ProfilePost/profilePosts_styles.tsx","components/ProfilePost/ProfilePosts.tsx","components/ProfileWall/profileWall_styles.tsx","components/ChatInput/chatInput_styles.tsx","components/ChatInput/ChatInput.tsx","components/ProfileWall/ProfileWall.tsx","pages/ProfilePage/profile_styles.tsx","pages/ProfilePage/ProfilePage.tsx","components/ChatForm/ChatForm.tsx","components/ChatMessages/chatMessages_styles.tsx","components/ChatMessages/ChatMessages.tsx","common/assets/img/devs.jpg","components/ChatNavBar/chatNavBar_styles.tsx","components/ChatNavBar/ChatNavBar.tsx","components/PrivateForm/PrivateForm.tsx","components/PrivateMessages/privateMessages_styles.tsx","components/PrivateMessages/PrivateMessages.tsx","components/PrivateUserInfo/privateUserInfo_styles.tsx","components/PrivateUserInfo/PrivateUserInfo.tsx","components/ChatUsersList/chatUsersList_styles.tsx","components/ChatUsersList/ChatUsersList.tsx","pages/MessangerPage/MessengerPage.tsx","components/Header/header_styles.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["axios","defaults","withCredentials","resultCodeEnum","instance","create","baseURL","headers","authAPI","get","then","res","data","loginUserData","post","delete","authSlice","createSlice","name","initialState","id","email","login","isAuth","captchaUrl","errorMessage","reducers","setCaptchaUrl","state","action","payload","setauthUserData","setErrorMessage","actions","sendLogin","dispatch","a","loginData","resultCode","success","getAuthUserData","captcha","url","serverError","messages","length","response","loginStyles","makeStyles","theme","root","padding","spacing","flexDirection","justifyContent","textAlign","margin","background","width","color","borderRadius","paddingBottom","icon","fontSize","palette","primary","main","error","profileAPI","userId","status","put","photo","formData","FormData","append","profile","usersAPI","currentPage","pageSize","searchTerm","friend","profileSlice","authUser","posts","body","date","likesCount","isLiked","isLoading","isError","avatarIsLoading","setUserProfile","setUserStatus","setauthUser","setNewAvatar","photos","setUserFollowStatus","followed","setPost","push","setLike","item","idx","like","checked","setIsLoading","setIsError","setAvatarIsLoading","getUserProfile","profileData","profileStatus","followStatus","getAuthUser","usersSlice","users","totalUsersCount","isFetching","followingInProgress","filter","setIsFetching","setUsers","setCurrentPage","setTotalUsersCount","toggleFollow","map","user","setFollowingInProgress","setPageSize","setFilter","appSlice","isInit","setInit","dialogsAPI","messageId","dialogsSlice","dialogs","dialogsFetching","messagesFething","newMessagesCount","setDialogsFetching","setMessagesFetching","setDialogs","setMessages","items","setNewMessagesCount","setDeletedMessage","getNewMessagesCount","count","getMessages","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","message","send","chatSlice","messagesReceived","m","v1","_","index","array","statusChanged","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","store","configureStore","reducer","app","appReducer","usersReducer","chat","chatReducer","auth","authReducer","profileReducer","dialogsReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useDispatch","LoginPage","useSelector","classes","loginDefault","password","rememberMe","useFormik","initialValues","validationSchema","Yup","required","min","max","onSubmit","trim","handleSubmit","handleChange","values","errors","touched","handleBlur","Grid","container","component","className","Typography","variant","TextField","label","onBlur","size","onChange","value","type","FormControlLabel","control","Checkbox","src","alt","Button","startIcon","Preloader3","usersList","marginLeft","overflowWrap","maxWidth","whiteSpace","overflow","textOverflow","overflowY","height","userWrapper","friendBtn","notfound","avatar","FriendButton","props","disabled","some","onClick","follow","UsersList","direction","alignItems","justify","xs","md","lg","to","Avatar","large","defaultAvatar","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","usersFilter","display","UsersFilter","debouncedSearchTerm","debouncedCurrentPage","debouncedpageSize","debouncedFriend","page","totalCount","getUsers","event","target","FormControl","RadioGroup","row","aria-label","Radio","TablePagination","onChangePage","newPage","rowsPerPage","labelRowsPerPage","onChangeRowsPerPage","parseInt","UsersPage","style","position","profileMain","fullName","fontWeight","wordBreak","friends","borderTop","paddingTop","friendButton","pmButton","profileFreinds","friendsWrapper","marginBottom","friendItemWrapper","friendsLabel","ProfileFriends","React","memo","randomUsers","arr","len","sorted","slice","sort","Math","random","randomArray","profileAvatar","uploadButton","secondary","StyledBadge","withStyles","badge","backgroundColor","top","right","Badge","ProfileAvatar","routerId","badgeContent","accept","files","file","htmlFor","IconButton","useStatus","editMode","setEditMode","userStatus","updateStatus","cursor","input","marginRight","minHeight","ProfileStatus","onStatusChange","deactivateMode","InputBase","autoFocus","endAdornment","ProfileMain","toUpperCase","profileInfoStyles","descriptionLabel","ProfileInfo","setEditForm","isContacts","contacts","Object","find","i","aboutMe","lookingForAJobDescription","lookingForAJob","keys","key","href","profileEditForm","leftBlock","rightBlock","job","buttons","CustomTextField","multiline","rowsMax","ProfileEditForm","putNewProfile","labelPlacement","dateHelper","timeZone","ruTime","Date","getTime","currentTime","toLocaleTimeString","hour","minute","formatedDate","toLocaleDateString","currentDate","yesterdayDate","now","visibleDate","profilePosts","marginTop","paddingRight","postWrapper","ProfilePosts","small","FavoriteBorder","checkedIcon","Favorite","profileWall","chatForm","sendIcon","ChatInput","inputProps","placeholder","ProfileWall","toJSON","resetForm","profileStyles","rightBlockWrapper","Alert","elevation","withRouter","match","authUserId","params","profileUserId","editForm","handleClose","Snackbar","open","autoHideDuration","onClose","severity","ChatForm","sendMessage","chatMessages","senderName","messageBody","messagesWrapper","ChatMessages","messagesEndRef","useRef","current","scrollIntoView","userName","ref","messengerNavBar","pmWrapper","chip","NavBadge","ChatNavBar","activeClassName","devs","Chip","clickable","PrivateForm","privateMessages","doneIcon","doneAllIcon","addedAt","messageContent","opacity","deleteIcon","messageTitle","PrivateMessages","recipient","senderId","viewed","privateUserInfo","PrivateUserInfo","lastUserActivityDate","chatUsersList","usersWrapper","boxShadow","paper","left","ChatUsersList","temp","overlap","anchorOrigin","vertical","horizontal","header","wrapper","authUserWrapper","Header","toLocaleUpperCase","App","Container","exact","path","render","Boolean","window","location","hostname","createMuiTheme","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6db18cff.chunk.js","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true, \r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\" ,\r\n\theaders: { \"API-KEY\": \"ca0951c1-2a9d-481e-a273-3d5f60141d92\" ,\r\n\r\n},\r\n});\r\n","export enum resultCodeEnum {\r\n\tsuccess = 0,\r\n\terror = 1,\r\n\tcaptcha = 10\r\n}\r\n\r\nexport type loginUserData = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n\tcaptcha?: string\r\n}\r\n\r\nexport interface profileDataType  {\r\n\tuserId: number\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tfullName: string | null\r\n\tfollowed: boolean\r\n\tphotos: photosType\r\n\tcontacts: {\r\n\t\t[facebook: string]: string | null\r\n\t\tinstagram: string | null\r\n\t\tvk: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t\ttwitter: string | null\r\n\t\twebsite: string | null\r\n\t\tyoutube: string | null\r\n\t}\r\n}\r\nexport interface responseResultObject  {\r\n\tdata: {}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\nexport interface photosType  {\r\n\tlarge: string\r\n\tsmall: string\r\n}\r\nexport interface usersSearchType  {\r\n\tcurrentPage: number,\r\n\tpageSize: number,\r\n\tsearchTerm: string,\r\n\tfriend: string,\r\n}\r\nexport interface allUsersItemType  {\r\n\tfollowed: boolean\r\n\tid: number\r\n\tname: string\r\n\tphotos: photosType\r\n\tstatus: null | string\r\n\tuniqueUrlName: null | string\r\n}\r\nexport interface dialogsArrayType  {\r\n\thasNewMessages: boolean\r\n\tid: number\r\n\tlastDialogActivityDate: string\r\n\tlastUserActivityDate: string\r\n\tnewMessagesCount: number\r\n\tphotos: photosType\r\n\tuserName: string\r\n}\r\n\r\nexport interface messagesArrayType  {\r\n\taddedAt: string\r\n\tbody: string\r\n\tdeletedByRecipient?: boolean\r\n\tdeletedBySender?: boolean\r\n\tdistributionId?: number | null\r\n\tid: string\r\n\tisSpam?: boolean\r\n\trecipientId: number\r\n\trecipientName?: string\r\n\tsenderId: number\r\n\tsenderName: string\r\n\ttranslatedBody: null\r\n\tviewed?: boolean\r\n}\r\nexport interface postType  {\r\n\tuserId: number | null\r\n\tdate: string\r\n\tbody: string\r\n\tlikesCount: number\r\n\tisLiked: boolean\r\n}\r\n\r\n\r\n","import { loginUserData, resultCodeEnum } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\r\n//апи\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get<responseIsAuthUser>(`auth/me/`).then((res) => res.data);\r\n\t},\r\n\tlogin(loginUserData: loginUserData) {\r\n\t\treturn instance.post<responseLoginUser>('auth/login/', loginUserData).then((res) => res.data);\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete<responseLogoutUser>(`auth/login`).then(res => res.data);\r\n\t},\r\n\tgetCaptchaUrl() {\r\n\r\n\t\treturn instance.get<responseCaptchaUrl>(`security/get-captcha-url`).then(res => res.data)\r\n\t},\r\n};\r\n\r\n//типы\r\ninterface responseIsAuthUser {\r\n\tdata: { id: number, email: string, login: string }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n\tfieldsErrors: Array<string>\r\n}\r\ninterface responseLoginUser {\r\n\tdata: { userId: number }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n}\r\ninterface responseLogoutUser {\r\n\tresultCode: resultCodeEnum\r\n}\r\ninterface responseCaptchaUrl {\r\n\turl: string\r\n}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { authAPI } from '../api/auth-api'\r\nimport { loginUserData, resultCodeEnum } from '../../common/types/types'\r\nimport { AppDispatch } from '../store'\r\n\r\n//типы\r\nconst initialState = {\r\n\tid: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false ,\r\n\tcaptchaUrl: null as string | null,\r\n\terrorMessage: null as string | null\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetCaptchaUrl: (state, action) => { state.captchaUrl = action.payload },\r\n\t\tsetauthUserData: (state, action) => {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t},\r\n\t\tsetErrorMessage: (state, action) => { state.errorMessage = action.payload },\r\n\t},\r\n})\r\n//actions\r\nexport const { setCaptchaUrl, setauthUserData, setErrorMessage } = authSlice.actions\r\n//thunks\r\nexport const getCaptcha = () => async (dispatch: AppDispatch) => {\r\n\tconst { url } = await authAPI.getCaptchaUrl()\r\n\tdispatch(setCaptchaUrl(url))\r\n}\r\nexport const logout = () => async (dispatch: AppDispatch) => {\t\r\n\tconst response = await authAPI.logout()\r\n\tif (response.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setauthUserData({ id: null, email: null, login: null, isAuth: false }))\r\n\t}\r\n}\r\nexport const sendLogin = (loginUserData: loginUserData) => async (dispatch: AppDispatch) => {\r\n\tconst loginData = await authAPI.login(loginUserData)\r\n\tif (loginData.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tif (loginData.resultCode === resultCodeEnum.captcha) {\r\n\t\t\tdispatch(getCaptcha())\r\n\t\t}\r\n\t\tconst serverError = loginData.messages.length > 0 ? loginData.messages[0] : 'Some Error'\r\n\t\tdispatch(setErrorMessage(serverError))\r\n\t}\r\n}\r\nexport const getAuthUserData = () => async (dispatch: AppDispatch) => {\r\n\tconst response = await authAPI.me()\r\n\tif (response.resultCode === resultCodeEnum.success) { \r\n\t\tdispatch(setauthUserData({...response.data,isAuth:true})\r\n\t\t)\r\n\t}\r\n}\r\nexport default authSlice.reducer\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const loginStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: theme.spacing(5),\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent:'flex-end',\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: 'auto auto',\r\n\t\tbackground: '#2f3136',\r\n\t\twidth: 500,\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: 20,\r\n\t\t'&>*': { paddingBottom: theme.spacing(1) },\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: 90,\r\n\t\twidth: '100%',\r\n\t\tcolor: theme.palette.primary.main,\r\n\t},\r\n\tcaptcha:\r\n\t{\r\n\t\tmargin: '0 auto',\r\n\t\twidth: '100px'\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red',\r\n\t}\r\n}))\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, photosType, profileDataType } from \"../../common/types/types\";\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: number | null) {\r\n\t\treturn instance.get<profileDataType>(`profile/` + userId).then((res) => res.data);\r\n\t},\r\n\tgetStatus(userId: number | null) {\r\n\t\treturn instance.get<string>(`profile/status/` + userId).then((res) => res.data); //запрос статуса отдельно с сервера\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance\r\n\t\t\t.put<responseResultObject>(`profile/status/`, { status: status })\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tupdateAvatar(photo: File) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", photo);\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile/photo`, formData, {\r\n\t\t\theaders: { \"Content-Type\": \"multipart/form-data\" },\r\n\t\t})\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tgetFollowStatus(userId: number | null) {\r\n\t\treturn instance.get<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\r\n\tupdateProfile(profile: profileDataType) {\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile`, profile).then((res) => res.data);\r\n\t},\r\n};\r\n\r\n//типы\r\ninterface responseUpdatePhoto {\r\n\tdata: {\r\n\t\tphotos: photosType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\n","import { responseResultObject ,allUsersItemType } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number, pageSize: number, searchTerm: string, friend: string) {\r\n\t\treturn instance.get<responseGetUsers>(`users?page=${currentPage}&count=${pageSize}&term=${searchTerm}&friend=${friend}`)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tfollowAPI(userId: number) {\r\n\t\treturn instance.post<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\tunFollowAPI(userId: number) {\r\n\t\treturn instance.delete<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ninterface responseGetUsers  {\r\n\terror: boolean\r\n\titems: Array<allUsersItemType>\r\n\ttotalCount: number\r\n}","import { profileAPI } from \"../api/profile-api\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { postType, profileDataType, resultCodeEnum } from '../../common/types/types'\r\nimport { posts } from \"../../common/posts\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\nexport const profileSlice = createSlice({\r\n\tname: 'profile',\r\n\tinitialState: {\r\n\t\tauthUser: {} as profileDataType,\r\n\t\tprofile: {} as profileDataType,\r\n\t\tstatus: \"\",\r\n\t\tposts: posts as Array<postType>,\r\n\t\tisLoading: true,\r\n\t\tisError: '',\r\n\t\tavatarIsLoading: false,\r\n\t},\r\n\treducers: {\r\n\t\tsetUserProfile: (state, { payload }) => { state.profile = payload },\r\n\t\tsetUserStatus: (state, { payload }) => { state.status = payload },\r\n\t\tsetauthUser: (state, { payload }) => { state.authUser = payload },\r\n\t\tsetNewAvatar: (state, { payload }) => { state.authUser.photos = state.profile.photos = payload },\r\n\t\tsetUserFollowStatus: (state, { payload }) => { state.profile = { ...state.profile, followed: payload } },\r\n\t\tsetPost: (state, { payload }) => {\r\n\t\t\tstate.posts.push(payload)\r\n\t\t},\r\n\t\tsetLike: (state, { payload }) => {\r\n\t\t\tconst item = state.posts[payload.idx]\r\n\t\t\titem.isLiked = payload.like.checked\r\n\t\t\tpayload.like.checked ? ++item.likesCount : --item.likesCount\r\n\t\t},\r\n\t\tsetIsLoading: (state, { payload }) => { state.isLoading = payload },\r\n\t\tsetIsError: (state, { payload }) => { state.isError = payload },\r\n\t\tsetAvatarIsLoading: (state, { payload }) => { state.avatarIsLoading = payload }\r\n\t}\r\n})\r\n//action\r\nexport const { setAvatarIsLoading, setIsError, setIsLoading, setLike, setPost, setUserFollowStatus, setUserProfile, setUserStatus, setauthUser, setNewAvatar } = profileSlice.actions;\r\n//thunk\r\nexport const getUserProfile = (id: number) => async (dispatch: AppDispatch) => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tconst profileData = await profileAPI.getProfile(id)\r\n\t\tconst profileStatus = await profileAPI.getStatus(id)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(id)\r\n\t\tdispatch(setUserProfile(profileData))\r\n\t\tdispatch(setUserStatus(profileStatus))\r\n\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t}\r\n\tcatch (error) {\r\n\t\tdispatch(setIsError(error))\r\n\t}\r\n\tfinally {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\nexport const getAuthUser = (id: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.getProfile(id)\r\n\tdispatch(setauthUser(data))\r\n}\r\nexport const updateAvatar = (file: File) => async (dispatch: AppDispatch) => {\r\n\tdispatch(setAvatarIsLoading(true))\r\n\tconst data = await profileAPI.updateAvatar(file)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setNewAvatar(data.data.photos))\r\n\t}\r\n\tdispatch(setAvatarIsLoading(false))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateStatus(status)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setUserStatus(status))\r\n\t}\r\n}\r\nexport const putNewProfile = (profile: profileDataType) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateProfile(profile)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getUserProfile(profile.userId))\r\n\t\tdispatch(getAuthUser(profile.userId))\r\n\t}\r\n}\r\nexport default profileSlice.reducer;\r\n\r\n\r\n\r\n","export const posts = [{\r\n\tuserId: null,\r\n\tbody: \"Hello world!\",\r\n\tdate: '10/10/20',\r\n\tlikesCount: 14,\r\n\tisLiked: true,\r\n},\r\n{\r\n\tuserId: 1,\r\n\tbody: \"Lorem uae odit blanditiis temporibusinus odio consequatur placeat accusamus ex\",\r\n\tdate: '8/11/20',\r\n\tlikesCount: 1,\r\n\tisLiked: false,\r\n},\r\n{\r\n\tuserId: null,\r\n\tbody: \"Lorem ipsum dolor sit amet, ct blanditiis temporibus hic ipsum eaque, totam magnam minus eum dolorum reprehenderit rem odio consequatur placeat accusamus ex\",\r\n\tdate: '10/12/20',\r\n\tlikesCount: 66,\r\n\tisLiked: false,\r\n}]","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { allUsersItemType } from \"../../common/types/types\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { setUserFollowStatus } from \"./profile-reducer\";\r\n\r\nconst initialState = {\r\n\tusers: [] as Array<allUsersItemType>,\r\n\tpageSize: 100,\r\n\ttotalUsersCount: 5000,\r\n\tcurrentPage: 0,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [] as number[],\r\n\tfilter: {\r\n\t\tsearchTerm: \"\",\r\n\t\tfriend: 'null',\r\n\t}\r\n}\r\n\r\nexport const usersSlice = createSlice({\r\n\tname: \"users\",\r\n\tinitialState\r\n\t,\r\n\treducers: {\r\n\t\tsetIsFetching: (state, action) => { state.isFetching = action.payload; },\r\n\t\tsetUsers: (state, action) => { state.users = action.payload},\r\n\t\tsetCurrentPage: (state, action) => { state.currentPage = action.payload; },\r\n\t\tsetTotalUsersCount: (state, action) => { state.totalUsersCount = action.payload; },\r\n\t\ttoggleFollow: (state, { payload }) => {\r\n\t\t\tstate.users = state.users.map(user => {\r\n\t\t\t\tif (user.id === payload) { return { ...user, followed: !user.followed } }\r\n\t\t\t\treturn user\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetFollowingInProgress: (state, { payload: { isFetching, userId } }) => {\r\n\t\t\tstate.followingInProgress = isFetching ? [...state.followingInProgress, userId]\r\n\t\t\t\t: state.followingInProgress.filter(id => id !== userId)\r\n\t\t},\r\n\t\tsetPageSize: (state, { payload }) => {\r\n\t\t\tstate.currentPage = 0\r\n\t\t\tstate.pageSize = payload\r\n\t\t},\r\n\t\tsetFilter: (state, { payload }) => { \r\n\t\t\tstate.currentPage = 0\r\n\t\t\tstate.filter = { ...state.filter, ...payload }\r\n\t\t\t// return {...state,\r\n\t\t\t// \tcurrentPage:0 ,\r\n\t\t\t// \tfilter:{ ...state.filter, ...payload }}\r\n\t\t},\r\n\t}\r\n});\r\n//actions\r\nexport const { setFilter,\r\n\tsetCurrentPage,\r\n\tsetPageSize,\r\n\tsetIsFetching,\r\n\tsetUsers,\r\n\tsetTotalUsersCount,\r\n\ttoggleFollow,\r\n\tsetFollowingInProgress,\r\n} = usersSlice.actions;\r\n//thunk\r\nexport const getUsers = (page:number, pageSize:number, searchTerm:string, friend:string) => {\r\n\treturn async (dispatch: AppDispatch ) => {\r\n\t\tdispatch(setIsFetching(true))\r\n\t\tdispatch(setCurrentPage(page))\r\n\t\tconst data = await usersAPI.getUsers(page + 1, pageSize, searchTerm, friend)\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setTotalUsersCount(data.totalCount))\r\n\t\tdispatch(setIsFetching(false)) \r\n\t\t\r\n\t};\r\n};\r\nexport const getFriends = (friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tconst data = await usersAPI.getUsers(1, 100, '', friend);\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setIsFetching(false));\r\n\r\n\t}\r\n}\r\nexport const followUser = (userId:number, follow:boolean) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setFollowingInProgress({ isFetching: true, userId }))\r\n\t\tconst response = !follow ? await usersAPI.followAPI(userId) : await usersAPI.unFollowAPI(userId)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(userId)\r\n\t\tif (response.resultCode === 0) {\r\n\t\t\tdispatch(toggleFollow(userId))\r\n\t\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t\t}\r\n\t\tdispatch(setFollowingInProgress({ isFetching: false, userId }))\r\n\t}\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\n\r\n\r\nexport const appSlice = createSlice({\r\n\tname: \"app\",\r\n\tinitialState: {\r\n\t\tisInit: false,\r\n\t},\r\n\treducers: {\r\n\t\tsetInit: (state) => {\r\n\t\t\tstate.isInit = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n//action\r\nexport const { setInit } = appSlice.actions;\r\n//thunk\r\nexport const init = () => (dispatch: AppDispatch) => {\r\n\tdispatch(getAuthUserData()).then(() => {\r\n\t\tdispatch(setInit());\r\n\t});\r\n};\r\n\r\nexport default appSlice.reducer;\r\n\r\n\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, messagesArrayType, dialogsArrayType } from \"../../common/types/types\";\r\n\r\nexport const dialogsAPI = {\r\n\tgetDialogs() {\r\n\t\treturn instance.get(`/dialogs`).then(res => res.data)\r\n\r\n\t},\r\n\tsendMessage(userId: number, body: string) {\r\n\t\treturn instance.post<Array<dialogsArrayType>>(`/dialogs/${userId}/messages`, { body: body }).then(res => res.data)\r\n\t},\r\n\tgetMessages(userId: number) {\r\n\t\treturn instance.get<responseSendMsg>(`/dialogs/${userId}/messages`).then(res => res.data)\r\n\t},\r\n\tdeleteMessages(messageId: number) {\r\n\t\treturn instance.delete(`/dialogs/messages/${messageId}`).then(res => res.data)\r\n\t},\r\n\tgetNewMessagesCount() {\r\n\t\treturn instance.get<responseGetMessages>(`/dialogs/messages/new/count`).then(res => res.data)\r\n\t},\r\n\tstartDialog(userId: number) {\r\n\t\treturn instance.put<responseResultObject>(`/dialogs/${userId}`).then(res => res.data)\r\n\t},\r\n\tdeleteMessage(messageId: string) {\r\n\t\treturn instance.delete<responseResultObject>(`/dialogs/messages/${messageId}\r\n\t\t`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ninterface responseSendMsg {\r\n\tdata: {\r\n\t\tmessage: messagesArrayType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\ninterface responseGetMessages {\r\n\terror: boolean\r\n\titems: Array<messagesArrayType>\r\n\ttotalCount: number\r\n}\r\n\r\n","import { dialogsArrayType, messagesArrayType } from '../../common/types/types'\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { dialogsAPI } from \"../api/dialogs-api\";\r\nimport { AppDispatch } from '../store';\r\n\r\n//типы\r\nconst initialState = {\r\n\tdialogs: [] as dialogsArrayType[],\r\n\tmessages: [] as messagesArrayType[] ,\r\n\tdialogsFetching: true,\r\n\tmessagesFething: true,\r\n\tnewMessagesCount: null as number | null\r\n};\r\n\r\nexport const dialogsSlice = createSlice({\r\n\tname: \"dialogs\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetDialogsFetching: (state, { payload }) => { state.dialogsFetching = payload },\r\n\t\tsetMessagesFetching: (state, { payload }) => {\r\n\t\t\tstate.messagesFething = payload\r\n\t\t},\r\n\t\tsetDialogs: (state, { payload }) => {\r\n\t\t\tstate.dialogs = payload\r\n\t\t},\r\n\t\tsetMessages: (state, { payload }) => { \r\n\t\t\tstate.messages = payload.items\r\n\t\t},\r\n\t\tsetNewMessagesCount: (state, { payload }) => {\r\n\t\t\tstate.newMessagesCount = payload\r\n\t\t},\r\n\t\tsetDeletedMessage(state, { payload }) {\r\n\t\t\tstate.messages = state.messages.filter(item => item.id !== payload)\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//actions\r\nexport const { setDeletedMessage, setNewMessagesCount, setMessagesFetching, setDialogsFetching, setDialogs, setMessages } = dialogsSlice.actions;\r\n//thunks\r\nexport const getNewMessagesCount = () => async (dispatch: AppDispatch) => {\r\n\tconst count = await dialogsAPI.getNewMessagesCount()\r\n\tdispatch(setNewMessagesCount(count))\r\n}\r\nexport const getDialogs = () => async (dispatch: AppDispatch) => {\r\n\tdispatch(setDialogsFetching(true));\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs();\r\n\tdispatch(setDialogsFetching(false));\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const getMessages = (id: number) => async (dispatch: AppDispatch) => {\r\n\tdispatch(setMessagesFetching(true));\r\n\tconst response = await dialogsAPI.getMessages(id);\r\n\tdispatch(setMessagesFetching(false));\r\n\tdispatch(setMessages(response))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const sendMessage = (userId: number, body: string) => async (dispatch: AppDispatch) => {\r\n\tawait dialogsAPI.sendMessage(userId, body)\r\n\tdispatch(getMessages(userId))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const deleteMessage = (messageId: string, userId: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await dialogsAPI.deleteMessage(messageId)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(getMessages(userId))\r\n\t\tdispatch(setDeletedMessage(messageId))\r\n\t}\r\n}\r\n\r\nexport default dialogsSlice.reducer;\r\n","const subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'","\r\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../api/chat-api'\r\nimport { v1 } from 'uuid'\r\nimport { AppDispatch } from '../store'\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & { id: string }\r\n\r\nexport const chatSlice = createSlice({\r\n\tname: \"chat\",\r\n\tinitialState: {\r\n\t\tmessages: [] as ChatMessageType[],\r\n\t\tstatus: 'pending' as StatusType\r\n\t},\r\n\treducers: {\r\n\t\tmessagesReceived: (state, { payload }) => { \r\n\t\t\tif (state.messages.length != payload.length)  {state.messages = [...state.messages, ...payload.map((m: any) => ({ ...m, id: v1() }))]\r\n\t\t\t\t.filter((_, index, array) => index >= array.length - 100)\r\n\t\t}},\r\n\t\tstatusChanged: (state, { payload }) => {\r\n\t\t\tstate.status = payload\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nexport const { messagesReceived, statusChanged } = chatSlice.actions;\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\n\r\n\r\nconst newMessageHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_newMessageHandler === null) {\r\n\t\t_newMessageHandler = (messages) => {\r\n\t\t\tdispatch(messagesReceived(messages))\r\n\t\t}\r\n\t}\r\n\treturn _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\n\r\n\r\nconst statusChangedHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_statusChangedHandler === null) {\r\n\t\t_statusChangedHandler = (status) => {\r\n\t\t\tdispatch(statusChanged(status))\r\n\t\t}\r\n\t}\r\n\treturn _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.start()\r\n\tchatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\tchatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string) => async () => {\r\n\tchatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatSlice.reducer\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport chatReducer from \"./reducers/chat-reducer\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tapp: appReducer,\r\n\t\tusers: usersReducer,\r\n\t\tchat:chatReducer,\r\n\t\tauth: authReducer,\r\n\t\tprofile: profileReducer,\r\n\t\tdialogs: dialogsReducer,\r\n\t\t\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false, //!почитать \r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport default store","import { useFormik } from 'formik';\r\nimport { sendLogin } from '../../app/reducers/auth-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextField, Button, Checkbox, Grid, FormControlLabel, Typography } from '@material-ui/core/';\r\nimport VpnKeyRoundedIcon from '@material-ui/icons/VpnKeyRounded';\r\nimport * as Yup from 'yup';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { loginStyles } from './login_styles';\r\nimport { RootState } from '../../app/store';\r\nimport { loginUserData } from '../../common/types/types';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\tconst { captchaUrl, errorMessage } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = loginStyles();\r\n\tconst loginDefault:loginUserData = {\r\n\t\temail: 'secondjump@bk.ru',\r\n\t\tpassword: 'qwaszx',\r\n\t\trememberMe: true\r\n\t}\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false,\r\n\t\t\tcaptcha: '',\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\temail: Yup.string().email('Insert correct email ').required('Required'),\r\n\t\t\tpassword: Yup.string()\r\n\t\t\t\t.min(4, 'Password must be longer than 4 characters.')\r\n\t\t\t\t.max(12, 'Password must be shorter than 12 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (loginData: loginUserData) => {\r\n\t\t\tif (loginData.email.trim() === 'free@samuraijs.com') \r\n\t\t\tdispatch(sendLogin(loginDefault))\r\n\t\t\telse {\r\n\t\t\t\tdispatch(sendLogin(loginData))\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid container component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<ExitToAppIcon className={classes.icon} />\r\n\t\t\t<Typography variant='h6' className={classes.error}>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t</Typography>\r\n\t\t\t<TextField label='Email' onBlur={handleBlur} size='small' onChange={handleChange} id='email' name='email' value={values.email} />\r\n\t\t\t{errors.email && touched.email && <div className={classes.error}>{errors.email}</div>}\r\n\t\t\t<TextField\r\n\t\t\t\tlabel='Password'\r\n\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\tsize='small'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvariant='standard'\r\n\t\t\t\tid='password'\r\n\t\t\t\tname='password'\r\n\t\t\t\tvalue={values.password}\r\n\t\t\t/>\r\n\t\t\t{errors.password && touched.password && <div className={classes.error}>{errors.password}</div>}\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={<Checkbox checked={values.rememberMe} onChange={handleChange} name='rememberMe' color='primary' />}\r\n\t\t\t\tlabel='Remember me'\r\n\t\t\t/>\r\n\t\t\t{captchaUrl && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<img className={classes.captcha} src={captchaUrl} width='100px' alt='captcha' />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tlabel='Captcha'\r\n\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tid='captcha'\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tname='captcha'\r\n\t\t\t\t\t\tvalue={values.captcha}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<Button variant='contained' startIcon={<VpnKeyRoundedIcon />} size='large' type='submit' color='primary'>\r\n\t\t\t\tLog In\r\n\t\t\t</Button>\r\n\t\t\t<p>Для тестового просмотра используйте пару логин/пароль: </p>\r\n\t\t\t<p> free@samuraijs.com / free</p>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import './preloader3.scss'\r\nexport const Preloader3 = () => {\r\n\treturn (\r\n\t\t<div className=\"loader\">Loading...</div>\r\n\t)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.832028ea.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usersList = makeStyles((theme) => ({\r\n\tname: {\r\n\t\tcolor: 'white',\r\n\t\tmarginLeft: 20,\r\n\t\tfontSize: 16,\r\n\t\toverflowWrap: 'break-word',\r\n\t\tmaxWidth:200,\r\n\t\twhiteSpace:'nowrap',\r\n\t\toverflow:'hidden',\r\n\t\ttextOverflow:'ellipsis',\r\n\t\t'&:hover': { color: theme.palette.primary.main },\r\n\t},\r\n\troot: {\r\n\t\toverflowY: 'scroll',\r\n\t\theight: 420,\r\n\t\r\n\t\tpadding:10\r\n\t},\r\n\tuserWrapper: {\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'linear-gradient(to right, #8e9eab, #eef2f0)',\r\n\t\t\tborderRadius: 15,\r\n\t\t\tcolor: theme.palette.primary.main\r\n\t\t},\r\n\t\tpadding: 4,\r\n\t},\r\n\tfriendBtn: {\r\n\t\twidth: 90,\r\n\t\tmargin:5,\r\n\t},\r\n\tnotfound: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 50,\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 50,\r\n\t\theight: 50\r\n\t}\r\n}))\r\n","import { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { followUser } from '../../app/reducers/users-reducer';\r\nimport React from 'react';\r\nimport { RootState } from '../../app/store';\r\n\r\ninterface IProps {\r\n\tid: number,\r\n\tfollowed: boolean,\r\n\tclassName?: any,\r\n}\r\n//\r\nexport const FriendButton: React.FC<IProps> = ({ id, followed, ...props}) => {\r\n\tconst followingInProgress = useSelector((state: RootState) => state.users.followingInProgress);\r\n\tconst dispatch = useDispatch();\r\n\treturn (\r\n\t\t\t<Button\r\n\t\t\t\t{...props}\r\n\t\t\t\tcolor={followed ? 'secondary' : 'primary'}\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tdisabled={followingInProgress.some((item) => item === id)}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tdispatch(followUser(+id, followed));\r\n\t\t\t\t}}>\r\n\t\t\t\t{followed ? 'Unfriend' : 'Friend'}\r\n\t\t\t</Button>\r\n\r\n\t);\r\n};\r\n\r\n","import { Preloader3 } from '../../common/preloader3';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Avatar, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { usersList } from './usersList_styles';\r\nimport { FriendButton } from '../CustomFriendButton/FriendButton';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\n\r\nexport const UsersList: React.FC = () => {\r\n\tconst users = useSelector((state: RootState) => state.users.users)\r\n\tconst isFetching = useSelector((state: RootState) => state.users.isFetching)\r\n\tconst classes = usersList();\r\n\treturn isFetching ? (\r\n\t\t<Preloader3 />\r\n\t) : (\r\n\t\t\t<Grid container direction='row' alignItems='center' justify='center' className={classes.root} >\r\n\t\t\t\t{users.length === 0 && <div className={classes.notfound}>User not found</div>}\r\n\t\t\t\t{users && users\r\n\t\t\t\t\t.map((user) => (\r\n\t\t\t\t\t\t<Grid item xs={6} md={6} lg={4}>\r\n\t\t\t\t\t\t\t<Grid container direction='row' alignItems='center'\r\n\t\t\t\t\t\t\t\tjustify='space-between' className={classes.userWrapper}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'profile/' + user.id}>\r\n\t\t\t\t\t\t\t\t\t<Grid container direction='row' alignItems='center' justify='space-between'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={user?.photos.large || defaultAvatar} />\r\n\t\t\t\t\t\t\t\t\t\t<p className={classes.name}>{user?.name}</p>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t<FriendButton id={user.id} followed={user.followed} className={classes.friendBtn} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t</Grid >\r\n\t\t);\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // дебаунс для инпутов\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const usersFilter = makeStyles(() => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 10,\r\n\t},\r\n}))\r\n","import { FormControl, FormControlLabel, Grid, Radio, RadioGroup, TextField } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsers, setCurrentPage, setFilter, setPageSize, setUsers } from '../../app/reducers/users-reducer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { useDebounce } from '../../common/useDebounce';\r\nimport { RootState } from '../../app/store';\r\nimport { usersFilter } from './usersFilter_styles'\r\n\r\n\r\nexport const UsersFilter: React.FC = () => {\r\n\tconst currentPage = useSelector((state: RootState) => state.users.currentPage);\r\n\tconst pageSize  = useSelector((state: RootState) => state.users.pageSize);\r\n\tconst totalUsersCount = useSelector((state: RootState) => state.users.totalUsersCount);\r\n\tconst filter  = useSelector((state: RootState) => state.users.filter);\r\n\tconst classes = usersFilter();\r\n\tconst dispatch = useDispatch();\r\n\tconst debouncedSearchTerm = useDebounce(filter.searchTerm, 1000);\r\n\tconst debouncedCurrentPage = useDebounce(currentPage, 1000)\r\n\tconst debouncedpageSize = useDebounce(pageSize, 1000)\r\n\tconst debouncedFriend = useDebounce(filter.friend, 1000)\r\n\r\n\t// получения списка пользователей и обновление его при изменении параметров\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(debouncedCurrentPage, debouncedpageSize, debouncedSearchTerm, debouncedFriend))\r\n\t\treturn () => {\r\n\t\t\tdispatch(setUsers([]))\r\n\t\t}\r\n\t}, [dispatch, debouncedCurrentPage, debouncedpageSize, debouncedSearchTerm, debouncedFriend])\r\n\r\n\r\n\r\n\tconst radioValues = [\r\n\t\t{ value: 'null', label: 'All' },\r\n\t\t{ value: 'true', label: 'Friends' },\r\n\t\t{ value: 'false', label: 'Without friend' },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t<TextField label='Search people'\r\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\tdispatch(setFilter({ searchTerm: event.target.value }))\r\n\t\t\t\t}}\r\n\t\t\t\tid='searchTerm'\r\n\t\t\t\tname='searchTerm'\r\n\t\t\t\tvalue={filter.searchTerm} />\r\n\t\t\t<FormControl component='fieldset' >\r\n\t\t\t\t<RadioGroup row aria-label='position'\r\n\t\t\t\t\tname='position'\r\n\t\t\t\t\tvalue={filter.friend}\r\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => dispatch(setFilter({ friend: e.target.value }))}  >\r\n\t\t\t\t\t{radioValues.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormControlLabel key={item.label}\r\n\t\t\t\t\t\t\t\tvalue={item.value}\r\n\t\t\t\t\t\t\t\tcontrol={<Radio size='small' color='primary' />}\r\n\t\t\t\t\t\t\t\tlabel={item.label}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<TablePagination\r\n\t\t\t\tcomponent='div'\r\n\t\t\t\tcount={totalUsersCount}\r\n\t\t\t\tpage={currentPage}\r\n\t\t\t\tonChangePage={(_, newPage: number) => { dispatch(setCurrentPage(newPage)) }}\r\n\t\t\t\trowsPerPage={pageSize}\r\n\t\t\t\tlabelRowsPerPage='rows/page'\r\n\t\t\t\t\r\n\t\t\t\tonChangeRowsPerPage={(event: React.ChangeEvent<HTMLInputElement>) => { dispatch(setPageSize(parseInt(event.target.value, 10))) }}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { UsersList } from '../../components/UsersList/UsersList';\r\nimport { UsersFilter } from '../../components/UsersFilter/UsersFilter';\r\nexport const UsersPage = () => {\r\n\t;\r\n\treturn (\r\n\t\t<>\t<div style={{ background: '#2f3136', borderRadius: \"0px 0px 15px 15px\", height: 600, position: 'relative' }}>\r\n\t\t\t<UsersFilter />\r\n\t\t\t<UsersList/>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileMain = makeStyles(() => ({\r\n\t\r\n\troot: {\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '0 0 0 15px',\r\n\t\theight: 600,\r\n\t\talignItems: 'center',\r\n\t\tpadding: 15\r\n\t},\r\n\r\n\tfullName: {\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: 20,\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-all',\r\n\t},\r\n\tfriends: {\r\n\t\tborderTop: '1px solid grey',\r\n\t\tpaddingTop: 5,\r\n\t\twidth: '100%'\r\n\t},\r\n\tfriendButton: {\r\n\t\tmargin: 20,\r\n\t\twidth: 200\r\n\t},\r\n\tpmButton: {\r\n\t\tmargin: 20,\r\n\t\tcolor: 'black',\r\n\t\t\r\n\t\twidth: 200\r\n\t}\r\n\r\n}))\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileFreinds = makeStyles((theme) => ( {\r\n\tfriendsWrapper: {\r\n\t\tmargin: '15px 0',\r\n\t\talignItems: 'flex-start',\r\n\t\theight:200\r\n\t},\r\n\tname: {\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-word'\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tmarginBottom:10\r\n\t},\r\n\tfriendItemWrapper: {\r\n\t\tcolor: 'grey',\r\n\t\tpadding: 10,\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: theme.palette.primary.main\r\n\t\t},\r\n\t},\r\n\tfriendsLabel: {\r\n\t\tcolor: 'grey',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 13,\r\n\t\tfontWeight: 700,\r\n\t},\r\n}));\r\n\r\n\r\n\r\n","import { Grid, Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { profileFreinds } from './profileFriends_style';\r\nimport React from 'react'\r\nimport { randomArray } from '../../common/randomArray';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nimport { allUsersItemType } from '../../common/types/types';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { getFriends, setFilter } from '../../app/reducers/users-reducer';\r\nimport {Preloader3} from '../../common/preloader3'\r\n\r\nexport const ProfileFriends: React.FC = React.memo(() => {\r\n\tconst users = useSelector((state: RootState) => state.users.users)\r\n\tconst isFetching = useSelector((state: RootState) => state.users.isFetching)\r\n\tconst randomUsers = randomArray(users, 6) as allUsersItemType[];\r\n\tconst dispatch = useAppDispatch()\r\n\tReact.useEffect(() => { users.length ||  dispatch(getFriends('true')) }\r\n\t\t, []);\r\n\tconst classes = profileFreinds();\r\n\treturn (\r\n\t\t<Grid container justify='center' style={{position:'relative',height:250}}>\r\n\t\t\t{isFetching ? <Preloader3 /> : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p className={classes.friendsLabel}> Friends: <Link onClick={() => dispatch(setFilter({ friend: 'true' }))} to={`/users`}>{users.length}</Link> </p>\r\n\t\t\t\t\t<Grid container className={classes.friendsWrapper}>\r\n\t\t\t\t\t\t{randomUsers.map((item) => (\r\n\t\t\t\t\t\t\t<Grid item xs={4} key={item.id} >\r\n\t\t\t\t\t\t\t\t<Link to={`/profile/${item.id}`}>\r\n\t\t\t\t\t\t\t\t\t<Grid container className={classes.friendItemWrapper} >\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={item.photos?.large} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.name}>{item.name}</div>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { allUsersItemType } from \"./types/types\";\r\n\r\nexport const randomArray = (arr:allUsersItemType[] , len:number)  => {  \r\n\tconst sorted = arr.slice().sort(() => Math.random() - 0.5);\r\n\tsorted.length = len\r\n\treturn sorted;\r\n}\r\n\r\n// перемешать и вытащить N рандомных элементов из массива\r\n//array is frozen in strict mode, you'll need to copy the array before sorting it","import { Badge, makeStyles, withStyles } from '@material-ui/core';\r\nexport const profileAvatar = makeStyles((theme) => ({\r\n\tavatar: {\r\n\t\twidth: 150,\r\n\t\theight: 150,\r\n\t},\r\n\tuploadButton: {\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: theme.palette.secondary.main\r\n\t\t}\r\n\t},\r\n\troot: {\r\n\t\tposition: 'relative',\r\n\t\theight: 150,\r\n\t},\r\n\r\n}));\r\nexport const StyledBadge = withStyles(() => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 140,\r\n\t\tright: 5,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\nimport { updateAvatar } from '../../app/reducers/profile-reducer';\r\nimport { profileAvatar, StyledBadge } from './profileAvatar_styles';\r\nimport React from 'react';\r\nimport { profileDataType } from '../../common/types/types';\r\nimport { RootState, useAppDispatch } from '../../app/store';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png'\r\nimport { useSelector } from 'react-redux';\r\nimport { Preloader3 } from '../../common/preloader3';\r\n\r\ntype PropsType = {\r\n\tprofile: profileDataType\r\n\trouterId: number\r\n}\r\n\r\n\r\nexport const ProfileAvatar: React.FC<PropsType> = React.memo(({ profile, routerId }) => {\r\n\tconst classes = profileAvatar();\r\n\tconst avatarIsLoading = useSelector((state: RootState) => state.profile.avatarIsLoading)\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{avatarIsLoading ? <Preloader3 /> :\r\n\t\t\t\t!routerId ? (\r\n\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\t\tid='contained-button-file'\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => e.target.files && dispatch(updateAvatar(e.target.files[0]))}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor='contained-button-file'>\r\n\t\t\t\t\t\t\t\t\t<IconButton color='primary' className={classes.uploadButton} component='span'>\r\n\t\t\t\t\t\t\t\t\t\t<AddAPhotoOutlinedIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t\t<Avatar className={classes.avatar} alt='user foto' src={profile.photos?.large} />\r\n\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Avatar className={classes.avatar} alt='user foto' src={profile.photos?.large || defaultAvatar} />\r\n\t\t\t\t\t)\r\n\r\n\r\n\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n});\r\n","import { updateStatus } from '../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport {  useAppDispatch } from '../../app/store';\r\n\r\nexport const useStatus = () => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState('');\r\n\tconst status = useSelector((state) => state.profile.status);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tsetUserStatus(status);\r\n\t}, [status]);\r\n\r\n\r\n\tconst deactivateMode = (action) => () => {\r\n\t\tif (!action) {\r\n\t\t\tsetUserStatus(status);\r\n\t\t\tsetEditMode(false);\r\n\t\t} else {\r\n\t\t\tsetEditMode(false);\r\n\t\t\tdispatch(updateStatus(userStatus));\r\n\t\t}\r\n\t};\r\n\tconst onStatusChange = (e => {\r\n\t\tsetUserStatus(e.target.value);\r\n\t})\r\n\r\n\r\n\treturn [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status]\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileStatus = makeStyles((theme) => ({\r\n\tstatus: {\r\n\t\tcursor: 'pointer',\r\n\t\tfontSize: 16,\r\n\t\t\"&:hover\": { color: theme.palette.secondary.main },\r\n\t\tcolor: theme.palette.primary.main,\r\n\t\twordBreak: 'break-word',\r\n\t\tpadding: 10,\r\n\t},\r\n\ticon: {\r\n\t\tmargin:'0 5px 0 10px',\r\n\t\tfontSize: 20,\r\n\t\tcursor:'pointer',\r\n\t},\r\n\tinput: {\r\n\t\twidth: 300,\r\n\t\tfontSize: 20,\r\n\t\tmarginRight:10,\r\n\t\ttextAlign:'center'\r\n\t\t\r\n\t},\r\n\troot:{\r\n\t\tminHeight:70,\r\n\t\tpadding:5,\r\n\t}\r\n}))\r\n","import React from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, InputBase } from '@material-ui/core';\r\nimport { useStatus } from './useStatus';\r\nimport { profileStatus } from './profileStatus_styles';\r\n\r\ninterface IProps  {\r\n\trouterId: number\r\n}\r\nexport const ProfileStatus: React.FC<IProps> = React.memo(({ routerId }) => {\r\n\tconst [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status] = useStatus();\r\n\tconst classes = profileStatus();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{editMode && !routerId ? (\r\n\t\t\t\t<Grid component='form' onSubmit={deactivateMode(true)}>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tvalue={userStatus}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<SaveIcon fontSize='small' color='primary' className={classes.icon} onClick={deactivateMode(true)}/>\r\n\t\t\t\t\t\t\t\t\t<CloseIcon fontSize='small' color='secondary'className={classes.icon}  onClick={deactivateMode(false)}/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName={classes.status}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetEditMode(true);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t\t<span>{!routerId && <EditIcon className={classes.icon} color='inherit' />}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n});\r\n","import { profileMain } from './profileMain_styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ProfileFriends } from '../ProfileFriends/ProfileFriends';\r\nimport { ProfileAvatar } from '../ProfileAvatar/ProfileAvatar';\r\nimport React from 'react';\r\nimport { ProfileStatus } from '../ProfileStatus/ProfileStatus';\r\nimport { FriendButton } from '../CustomFriendButton/FriendButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../app/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\ntype IProps = {\r\n\trouterId: number\r\n}\r\n\r\nexport const ProfileMain: React.FC<IProps> = React.memo(({ routerId }) => {\r\n\tconst profile = useSelector((state: RootState) => state.profile.profile);\r\n\r\n\tconst classes = profileMain();\r\n\treturn (\r\n\t\t<Grid container className={classes.root} direction='column' justify='space-around'>\r\n\t\t\t<ProfileAvatar profile={profile} routerId={routerId} />\r\n\t\t\t<Grid item className={classes.fullName}>\r\n\t\t\t\t{profile.fullName?.toUpperCase()}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<ProfileStatus routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<Grid item className={classes.friends}>\r\n\t\t\t\t\t<ProfileFriends />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{routerId && (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t<FriendButton className={classes.friendButton} id={routerId} followed={profile.followed} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t<Link to={`/messenger/${routerId}`}>\r\n\t\t\t\t\t\t\t\t\t\t<Button color='secondary' variant='contained' className={classes.pmButton} >\r\n\t\t\t\t\t\t\t\t\t\t\tWhite a message\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileInfoStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\theight: 600,\r\n\t\tmaxWidth: 300,\r\n\t\tpadding: 2,\r\n\t\tjustifyContent: 'space-around',\r\n\t\talignItems: 'center',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'grey', \r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tdescriptionLabel:{\r\n\t\tcolor:theme.palette.secondary.main,\r\n\t\tfontSize:16,\r\n\t\tfontWeight:700\r\n\t}\r\n}))\r\n","import React, { Dispatch } from 'react';\r\nimport { FormControlLabel, Grid, IconButton, Radio } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsSharp';\r\nimport { RootState } from '../../app/store';\r\nimport { profileInfoStyles } from './profileInfo_styles'\r\n\r\ninterface IProps  {\r\n\tsetEditForm: Dispatch<boolean>\r\n\trouterId: number\r\n}\r\nexport const ProfileInfo: React.FC<IProps> = React.memo(({ setEditForm, routerId }) => {\r\n\tconst  profile  = useSelector((state: RootState) => state.profile.profile);\r\n\tconst isContacts = profile.contacts && Object.values(profile.contacts).find((i) => !!i);\r\n\tconst classes = profileInfoStyles();\r\n\tconst editHandler = () => {\r\n\t\tsetEditForm(true);\r\n\t};\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t{profile?.aboutMe && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<p className={classes.descriptionLabel}>About me:</p>\r\n\t\t\t\t\t<p>{profile?.aboutMe}</p>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{profile?.lookingForAJobDescription && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.descriptionLabel}> Skills: </p>\r\n\t\t\t\t\t<p>{profile?.lookingForAJobDescription}</p>\r\n\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tvalue='best'\r\n\t\t\t\t\t\tcontrol={<Radio checked={profile?.lookingForAJob} color='primary' disabled />}\r\n\t\t\t\t\t\tlabel='Looking for a job'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{isContacts && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.descriptionLabel}>Contacts:</p>\r\n\t\t\t\t\t{profile.contacts &&\r\n\t\t\t\t\t\tObject.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tprofile.contacts[key] && (\r\n\t\t\t\t\t\t\t\t\t<Grid key={key} item>\r\n\t\t\t\t\t\t\t\t\t\t<a href={`//${profile.contacts[key]}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t{profile.contacts[key]} </a>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{!routerId && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<IconButton onClick={editHandler} color='secondary'>\r\n\t\t\t\t\t\t<SettingsSharpIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileEditForm = makeStyles(() => ({\r\n\troot: {\r\n\t\talignItems: 'center',\r\n\t\theight: 600,\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-around',\r\n\t\tflexDirection: 'column'\r\n\t},\r\n\tleftBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\t\"&>*\": { margin: 30 },\r\n\t\tmarginLeft:100\r\n\r\n\t},\r\n\trightBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tjustifyContent: 'space-around',\r\n\t\t\"&>*\": { margin: 27 },\r\n\t\tmarginRight:100\r\n\t},\r\n\tjob: {\r\n\r\n\t\tcolor: 'white',\r\n\t},\r\n\terror: {\r\n\t\tcolor: 'red'\r\n\t},\r\n\tbuttons: {\r\n\t\tmargin: 20,\r\n\t}\r\n}));","import { TextField } from \"@material-ui/core\"\r\n\r\n\r\ninterface IProps {\r\n\tlabel: string,\r\n\terrors: string | undefined,\r\n\ttouched: boolean | undefined,\r\n\t[x:string]: any;\r\n}\r\nexport const CustomTextField: React.FC<IProps> = ({ label, errors, touched, ...props }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2> {label}: </h2>\r\n\t\t\t<TextField\r\n\t\t\t\ttype='text'\r\n\t\t\t\tsize='small'\r\n\t\t\t\tmultiline\r\n\t\t\t\trowsMax={2}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{errors && touched &&\r\n\t\t\t\t<div style={{color:'red'}} >\r\n\t\t\t\t\t{errors}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import { Grid, TextField, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { putNewProfile } from '../../app/reducers/profile-reducer';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { profileEditForm } from './profileEditForm_style';\r\nimport * as Yup from 'yup';\r\nimport { Dispatch } from 'react';\r\nimport { RootState } from '../../app/store';\r\nimport { CustomTextField } from '../CustomTextField/CustomTextFeild';\r\n\r\n\r\ninterface IProps {\r\n\tsetEditForm: Dispatch<boolean>\r\n}\r\nexport const ProfileEditForm: React.FC<IProps> = ({ setEditForm }) => {\r\n\tconst { profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = profileEditForm();\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: profile,\r\n\t\tonSubmit: (e) => {\r\n\t\t\tdispatch(putNewProfile(e));\r\n\t\t\tsetEditForm(false);\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tfullName: Yup.string()\r\n\t\t\t\t.min(4, 'Name must be longer than 4 characters.')\r\n\t\t\t\t.max(30, 'Name must be shorter than 30 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t\taboutMe: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t\tlookingForAJobDescription: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t}),\r\n\t});\r\n\r\n\tconst contactsName = ['vk', 'facebook', 'github'];\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<Grid container direction='row' justify='space-around' alignItems='center'>\r\n\t\t\t\t<div className={classes.leftBlock}>\r\n\t\t\t\t\t<CustomTextField label='Name' id='fullName' errors={errors.fullName} touched={touched.fullName}\r\n\t\t\t\t\t\tonBlur={handleBlur} onChange={handleChange} value={values.fullName} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CustomTextField label='About me' id='aboutMe' errors={errors.aboutMe} touched={touched.aboutMe}\r\n\t\t\t\t\t\t\tonBlur={handleBlur} onChange={handleChange} value={values.aboutMe} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CustomTextField label='Skills' id='lookingForAJobDescription' errors={errors.lookingForAJobDescription}\r\n\t\t\t\t\t\t\ttouched={touched.lookingForAJobDescription}\r\n\t\t\t\t\t\t\tonBlur={handleBlur} onChange={handleChange} value={values.lookingForAJobDescription} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.rightBlock}>\r\n\t\t\t\t\t<h2>Contacts:</h2>\r\n\t\t\t\t\t{contactsName.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tkey={item}\r\n\t\t\t\t\t\t\t\tvalue={values?.contacts[item] || ''}\r\n\t\t\t\t\t\t\t\tname={'contacts.' + item}\r\n\t\t\t\t\t\t\t\tid={item}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tlabel={item}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<div>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tclassName={classes.job}\r\n\t\t\t\t\tlabelPlacement='start'\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Checkbox size='small' checked={values?.lookingForAJob} onChange={handleChange} color='primary' id='lookingForAJob' />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel='Are you looking for a job?'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.buttons}>\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t<AddRoundedIcon color='primary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={() => setEditForm(false)} type='submit'>\r\n\t\t\t\t\t\t<CloseRoundedIcon color='secondary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nexport const dateHelper = (date,timeZone=10800000) => {\r\n\t// работает,но че-т хрень какая-то)\r\n\t\r\n\tconst ruTime = new Date(date).getTime()\r\n\tconst currentTime = new Date(ruTime+timeZone).toLocaleTimeString('ru', {hour: '2-digit', minute:'2-digit'})\r\n\tconst formatedDate = new Date(ruTime+timeZone).toLocaleDateString()\r\n\tconst currentDate = new Date().toLocaleDateString()\r\n\tconst yesterdayDate = new Date(Date.now() - 86400000+ timeZone).toLocaleDateString()\r\n\t\r\n\r\n\r\n\tconst visibleDate =\r\n\t\tformatedDate === currentDate ?\r\n\t\t\t'today ' + currentTime\r\n\t\t\t:\r\n\t\t\tformatedDate === yesterdayDate ?\r\n\t\t\t\t'yesterday ' + currentTime\r\n\t\t\t\t:\r\n\t\t\t\tformatedDate\r\n\r\n\treturn visibleDate\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profilePosts = makeStyles(() => ({\r\n\troot: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\twidth: '100%',\r\n\t\tmarginTop:20,\r\n\t\tpaddingRight:3\r\n\r\n\t},\r\n\tcontainer: {\r\n\t\tcolor: 'grey',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\twidth: '100%',\r\n\t\twordBreak: 'break-word'\r\n\r\n\t},\r\n\tpostWrapper: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tbackgroundColor: '#202225',\r\n\t\tpadding: 10,\r\n\t\tmarginBottom:10,\r\n\t\tborderRadius: 5\r\n\r\n\t},\r\n\tdate: {\r\n\t\tcolor: 'white',\r\n\t\tfontSize: 9\r\n\t},\r\n\tbody: {\r\n\t\twidth: '100%',\r\n\t\tpaddingTop: 40\r\n\t},\r\n\tavatar: {\r\n\t\tmarginRight: 20\r\n\t},\r\n\tfullName: {\r\n\t\tmarginRight: 10,\r\n\t\tcolor: 'orange'\r\n\t}\r\n}));","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { dateHelper } from '../../common/dateHelper'\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\r\nimport { Avatar, Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { setLike } from \"../../app/reducers/profile-reducer\";\r\nimport { profilePosts } from \"./profilePosts_styles\";\r\n\r\nexport const ProfilePosts: React.FC = () => {\r\n\tconst { authUser, posts, profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = profilePosts()\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t{posts?.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={item.date} className={classes.postWrapper}>\r\n\t\t\t\t\t\t\t<Avatar className={classes.avatar} src={item.userId ? authUser.photos?.small : profile.photos?.small} />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Grid container direction='row' alignItems='center' >\r\n\t\t\t\t\t\t\t\t\t<p className={classes.fullName}>{item.userId ? authUser.fullName : profile.fullName}</p>\r\n\t\t\t\t\t\t\t\t\t<p className={classes.date}>{dateHelper(item.date, 0)}</p>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<span className={classes.body}>{item.body}</span>\r\n\t\t\t\t\t\t\t\t<Grid container alignItems='center'>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => dispatch(setLike({ like: e.target, idx }))}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={item.isLiked} icon={<FavoriteBorder />} checkedIcon={<Favorite />} name='checkedH\t' />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={item.likesCount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileWall = makeStyles(() => ({\r\n\r\n\troot: {\r\n\t\tbackgroundColor: '#2f3136',\r\n\t\theight: 600,\r\n\t\tpadding: 10,\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\t\r\n\t},\r\n\r\n}))","import { makeStyles } from \"@material-ui/core\";\r\nexport const chatForm = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#40444b',\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 10,\r\n\t\tborderRadius: 7,\r\n\t\twidth: '100%'\r\n\t},\r\n\tinput: {\r\n\t\tcolor: 'white',\r\n\t\tmarginLeft: 15,\r\n\t\twidth: '100%',\r\n\t\tpaddingRight: 20,\r\n\t\tpadding:4\r\n\t},\r\n\tsendIcon:{\r\n\t\tfontSize:13,\r\n\t\tcolor:theme.palette.primary.main\r\n\t}\r\n}))","import { Grid, InputBase, IconButton } from '@material-ui/core';\r\nimport { chatForm } from './chatInput_styles';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\ninterface IProps {\r\n\tdisabled?: boolean,\r\n\t[x:string]:any,\r\n}\r\n\r\nexport const ChatInput: React.FC<IProps> = ({ handleSubmit, ...props }) => {\r\n\tconst classes = chatForm()\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.root}>\r\n\t\t\t<InputBase inputProps={{ ...props }}\r\n\t\t\t\tclassName={classes.input}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tautoFocus={true}\r\n\t\t\t\tplaceholder='write a message'\r\n\t\t\t\tname='message'\r\n\t\t\t\tid='message'\r\n\t\t\t\tendAdornment={\r\n\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t<SendRoundedIcon color='inherit' className={classes.sendIcon} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\n\r\n\r\n\r\n","import { Grid } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { setPost } from '../../app/reducers/profile-reducer';\r\nimport { ProfilePosts } from '../ProfilePost/ProfilePosts';\r\nimport { profileWall } from './profileWall_styles';\r\nimport React from 'react'\r\nimport { ChatInput } from '../ChatInput/ChatInput';\r\n\r\n\r\n\r\n\r\nexport const ProfileWall: React.FC = React.memo(() => {\r\n\tconst userId = useSelector((state: RootState) => state.profile.authUser.userId);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = profileWall()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetPost({\r\n\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\tbody: message,\r\n\t\t\t\t\tdate: new Date().toJSON(),\r\n\t\t\t\t\tlikesCount: 0,\r\n\t\t\t\t\tisLiked: false,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid className={classes.root}>\r\n\t\t\t<ChatInput onChange={handleChange} handleSubmit={handleSubmit} value={values.message} />\r\n\t\t\t<ProfilePosts />\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tborderRadius: '0 0 15px 15px',\r\n\t\tposition: 'relative',\r\n\t\twidth: '100%',\r\n\t\tminHeight: 600,\r\n\t\tjustifyContent: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\t\r\n\r\n\t},\r\n\trightBlockWrapper: {\r\n\t\tminHeight: 600\r\n\t}\r\n}));","import { useSelector } from 'react-redux';\r\nimport { getUserProfile, setIsError } from '../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Preloader3 } from '../../common/preloader3';\r\nimport { ProfileMain } from '../../components/ProfileMain/ProfileMain';\r\nimport { ProfileInfo } from '../../components/ProfileInfo/ProfileInfo';\r\nimport { ProfileEditForm } from '../../components/ProfileEditForm/ProfileEditForm';\r\nimport { ProfileWall } from '../../components/ProfileWall/ProfileWall';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { profileStyles } from './profile_styles'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ProfilePage: React.FC = ({ match }: any) => {\r\n\t//TODO обработать ошибки сервера\r\n\tconst authUserId = useSelector((state: RootState) => state.auth.id);\r\n\tconst routerId = match.params.userId;\r\n\tconst profileUserId = routerId || authUserId;\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [editForm, setEditForm] = useState(false);\r\n\tconst classes = profileStyles();\r\n\tconst isLoading = useSelector((state: RootState) => state.profile.isLoading);\r\n\tconst isError = useSelector((state: RootState) => state.profile.isError);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tprofileUserId && dispatch(getUserProfile(profileUserId))\r\n\t}, [dispatch, profileUserId])\r\n\r\n\tconst handleClose = () => {\r\n\t\tdispatch(setIsError(''))\r\n\t};\r\n\r\n\tif (isLoading || 0) {\r\n\t\treturn <div className={classes.root}>\r\n\t\t\t<Preloader3 />\r\n\t\t</div>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Snackbar open={!!isError} autoHideDuration={5000} onClose={handleClose} >\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tFetch error\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<ProfileMain routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={8} className={classes.rightBlockWrapper}>\r\n\t\t\t\t{editForm ? (\r\n\t\t\t\t\t<ProfileEditForm setEditForm={setEditForm} />) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t<ProfileInfo routerId={routerId} setEditForm={setEditForm} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t<ProfileWall />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default withRouter(ProfilePage);\r\n","import { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { ChatInput } from '../ChatInput/ChatInput';\r\n\r\n\r\nexport const ChatForm: React.FC = () => {\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tmessage && dispatch(sendMessage(message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<ChatInput\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tvalue={values.message}\r\n\t\t\tdisabled={status !== 'ready'}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatMessages = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\r\n\t},\r\n\tsenderName: {\r\n\t\tcolor: 'white',\r\n\t\tfontWeight: 700,\r\n\t},\r\n\tmessageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: \"break-word\",\r\n\t},\r\n\tmessagesWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tmessage: {\r\n\t\tpadding: '14px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t},\r\n}))","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ChatForm } from '../ChatForm/ChatForm';\r\nimport React from 'react';\r\nimport { chatMessages } from './chatMessages_styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../app/store';\r\n\r\nexport const ChatMessages: React.FC = () => {\r\n\tconst messages = useSelector((state: RootState) => state.chat.messages)\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\tconst classes = chatMessages();\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => scrollToBottom(), [messages]);\r\n\r\n\r\n\treturn (\r\n\t\t<Grid xs className={classes.root}>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Grid className={classes.messagesWrapper}>\r\n\t\t\t\t\t{messages?.map((i, idx) => (\r\n\t\t\t\t\t\t<Grid className={classes.message} key={idx}>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Avatar alt='avatar' src={i?.photo} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\t\t\t<p className={classes.senderName}> {i.userName}</p>\r\n\t\t\t\t\t\t\t\t<p className={classes.messageBody}>{i.message} </p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<ChatForm />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/devs.b3345405.jpg\";","import { makeStyles, Badge, withStyles } from '@material-ui/core';\r\nexport const messengerNavBar = makeStyles(() => ({\r\n\troot: {\r\n\t\tpadding: '15px',\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0px 0px 0px 15px',\r\n\t\theight: 600,\r\n\t\r\n\t},\r\n\t\r\n\tpmWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\tpadding: '0 5px'\r\n\t},\r\n\tchip: {\r\n\t\twidth: 150,\r\n\t\tjustifyContent:'flex-start',\r\n\t\tmargin: '5px 0',\r\n\t\tbackground: '#40444b',\r\n\t},\r\n}));\r\n\r\nexport const NavBadge = withStyles(() => ({\r\n\tbadge: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: 21,\r\n\t\tright: 15,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, Chip } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getDialogs } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport devs from '../../common/assets/img/devs.jpg';\r\nimport { messengerNavBar, NavBadge } from './chatNavBar_styles';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png'\r\n\r\nexport const ChatNavBar: React.FC = () => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tdispatch(getDialogs());\r\n\t}, []);\r\n\tconst classes = messengerNavBar();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<h4>Chat rooms: </h4>\r\n\t\t\t<NavLink to={'/messenger'} activeClassName='navchat'>\r\n\t\t\t\t<Avatar src={devs} />\r\n\t\t\t</NavLink>\r\n\t\t\t<h4>PM: </h4>\r\n\t\t\t<div className={classes.pmWrapper}>\r\n\t\t\t\t{dialogs.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NavLink to={`/messenger/${item.id}`} key={item.id} activeClassName='navchat'>\r\n\t\t\t\t\t\t\t<NavBadge badgeContent={item.newMessagesCount} color='secondary' >\r\n\t\t\t\t\t\t\t\t<Chip key={idx}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.chip}\r\n\t\t\t\t\t\t\t\t\tavatar={<Avatar src={item?.photos?.small || defaultAvatar} />}\r\n\t\t\t\t\t\t\t\t\tlabel={item?.userName}\r\n\t\t\t\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\t\t\t></Chip>\r\n\t\t\t\t\t\t\t</NavBadge>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n};\r\n","\r\nimport { useFormik } from 'formik';\r\nimport { sendMessage } from '../../app/reducers/dialogs-reducer';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { ChatInput } from '../ChatInput/ChatInput';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\n\r\nexport const PrivateForm: React.FC<PropsType> = ({ routerId }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(sendMessage(routerId, message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<ChatInput handleSubmit={handleSubmit} onChange={handleChange} value={values.message} />\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateMessages = makeStyles(() => ({\r\n\troot: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\r\n\t},\r\n\tmessagesWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8,\r\n\t\tposition:'relative',\r\n\t},\r\n\tmessageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: 'break-word',\r\n\t},\r\n\tdoneIcon: {\r\n\t\tcolor: 'orange',\r\n\t\tfontSize: 12,\r\n\t},\r\n\tdoneAllIcon: {\r\n\t\tcolor: 'green',\r\n\t\tfontSize: 12,\r\n\r\n\t},\r\n\taddedAt: {\r\n\t\tfontSize: 10,\r\n\t\tcolor: 'grey',\r\n\t},\r\n\tsenderName: {\r\n\t\tcolor: '#fff',\r\n\t\tfontWeight: 700,\r\n\t\tmarginRight: 10\r\n\r\n\t},\r\n\tmessageContent: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '9px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": {\r\n\t\t\t\t\"&>*\": {\r\n\t\t\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeleteIcon: {\r\n\t\tcursor: 'pointer',\r\n\t\topacity: 0,\r\n\t\tfontSize: 15,\r\n\t\tmarginLeft: 5\r\n\r\n\t},\r\n\tmessageTitle: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t}\r\n\r\n\t},\r\n\tavatar: {\r\n\t\tmarginRight: 15\r\n\t}\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { PrivateForm } from '../PrivateForm/PrivateForm';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\r\nimport { deleteMessage, getMessages, setMessages } from '../../app/reducers/dialogs-reducer';\r\nimport { dateHelper } from '../../common/dateHelper';\r\nimport { privateMessages } from './privateMessages_styles';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { dialogsArrayType } from '../../common/types/types';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { getNewMessagesCount } from '../../app/reducers/dialogs-reducer';\r\nimport { Preloader3 } from '../../common/preloader3'\r\n\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n\trecipient: dialogsArrayType\r\n\r\n}\r\nexport const PrivateMessages: React.FC<PropsType> = ({ routerId, recipient }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = privateMessages();\r\n\tconst messages = useSelector((state: RootState) => state.dialogs.messages);\r\n\tconst messagesFething = useSelector((state: RootState) => state.dialogs.messagesFething);\r\n\tconst { authUser } = useSelector((state: RootState) => state.profile);\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tdispatch(setMessages([]))\r\n\t\tdispatch(getMessages(routerId));\r\n\r\n\t}, [routerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getNewMessagesCount())\r\n\t\tscrollToBottom()\r\n\t}, [messages]);\r\n\r\n\treturn (\r\n\t\t<Grid item xs className={classes.root}>\r\n\t\t\t<Grid className={classes.messagesWrapper}>\r\n\t\t\t\t{messagesFething && !messages ? <Preloader3 /> :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{messages?.map((item: any, idx: any) => (\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tclassName={classes.messageContent}\r\n\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\talt='avatar'\r\n\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\t\t\t\tsrc={item.senderId === authUser?.userId ? authUser?.photos?.large : recipient?.photos?.large}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Grid container >\r\n\t\t\t\t\t\t\t\t\t<span className={classes.senderName}>{item.senderName}</span>\r\n\t\t\t\t\t\t\t\t\t<Grid className={classes.messageTitle}>\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.senderId === authUser?.userId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t(item.viewed ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneAllRoundedIcon className={classes.doneAllIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneRoundedIcon className={classes.doneIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.addedAt}>{dateHelper(item.addedAt)}</span>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteOutlineOutlinedIcon onClick={() => dispatch(deleteMessage(item.id, routerId))} className={classes.deleteIcon} color='secondary' />\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center' className={classes.messageBody}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item>{item.body}</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid container>\r\n\t\t\t\t<PrivateForm routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateUserInfo = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth:250,\r\n\t\tpadding:'100px 0px',\r\n\t\tbackground: '#2f3136',\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\tcolor: '#8e9297',\r\n\t\tposition: 'relative',\r\n\t\theight: 600,\r\n\t\t'&:hover': {\r\n\t\t\tcolor: theme.palette.primary.main,\r\n\t\t},\r\n\t\r\n\t},\r\n\tavatar: {\r\n\t\tborderRadius: '50%',\r\n\t\twidth: 250,\r\n\t\theight: 250,\r\n\t\tpadding:30\r\n\t},\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dateHelper } from '../../common/dateHelper';\r\nimport { privateUserInfo } from './privateUserInfo_styles';\r\nimport { dialogsArrayType } from '../../common/types/types';\r\nimport defaultAvatar from '../../common/assets/img/defaultAvatar.png'\r\n\r\ntype PropsType = {\r\n\trecipient: dialogsArrayType,\r\n\trouterId: number\r\n}\r\n\r\nexport const PrivateUserInfo: React.FC<PropsType> = ({ recipient, routerId }) => {\r\n\tconst classes = privateUserInfo();\r\n\treturn (\r\n\t\t<Link to={'/profile/' + routerId}>\r\n\t\t\t<Grid container direction='column' alignItems='center' justify='space-around' className={classes.root}>\r\n\t\t\t\t<h2>{recipient?.userName}</h2>\r\n\t\t\t\t<Avatar alt='profile avatar' src={recipient?.photos.large || defaultAvatar} className={classes.avatar} />\r\n\t\t\t\t<Grid container direction='column' alignItems='center'>\r\n\t\t\t\t\t<div> Was online:</div>\r\n\t\t\t\t\t<div>{recipient?.lastUserActivityDate && dateHelper(recipient?.lastUserActivityDate)}</div>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t</Link>\r\n\t);\r\n};\r\n","import { Badge, makeStyles, withStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatUsersList = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth:250,\r\n\t\tpadding:'20px 0px',\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0 0 15px 0',\r\n\t\theight: 600,\r\n\t},\r\n\tuser: {\r\n\t\tcolor: '#8e9297',\r\n\t\tfontSize:14,\r\n\t\tpadding: '10px 20px',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(79,84,92,0.32)',\r\n\t\t\tcolor:  theme.palette.primary.main,\r\n\t\t\tborderRadius: 7,\r\n\t\t\t\r\n\t\t},\r\n\t},\r\n\tavatar: {\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\tusersWrapper: {\r\n\t\toverflowY: 'auto',\r\n\t\tmargin: '16px 0px'\r\n\t},\r\n}));\r\n\r\nexport const StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: '#44b700',\r\n\t\tboxShadow: `0 0 0 1px ${theme.palette.background.paper}`,\r\n\t\t'&::after': {\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: '50%',\r\n\t\t},\r\n\t},\r\n}))(Badge);","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../app/store';\r\nimport { chatUsersList, StyledBadge } from './chatUsersList_styles';\r\n\r\n\r\nexport const ChatUsersList: React.FC = () => {\r\n\tconst { messages } = useSelector((state: RootState) => state.chat);\r\n\tconst usersList = messages.filter(((temp) => (a: any) => !temp[a.userId] && (temp[a.userId] = true))(Object.create(null)));\r\n\r\n\tconst classes = chatUsersList();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<h4>Users — {usersList?.length}</h4>\r\n\t\t\t<div className={classes.usersWrapper}>\r\n\t\t\t\t{usersList?.map((i, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link to={`/messenger/${i.userId || i.id}`} key={idx}>\r\n\t\t\t\t\t\t\t<Grid container alignItems='center' className={classes.user}>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\toverlap='circle'\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvariant='dot'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={i?.photo} className={classes.avatar} />\r\n\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<p style={{ marginLeft: 12 }}>\r\n\t\t\t\t\t\t\t\t\t{i.userName}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { ChatMessages } from '../../components/ChatMessages/ChatMessages';\r\nimport { ChatNavBar } from '../../components/ChatNavBar/ChatNavBar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { PrivateMessages } from '../../components/PrivateMessages/PrivateMessages';\r\nimport { PrivateUserInfo } from '../../components/PrivateUserInfo/PrivateUserInfo';\r\nimport { ChatUsersList } from '../../components/ChatUsersList/ChatUsersList';\r\nimport { startMessagesListening, stopMessagesListening } from '../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\n\r\nconst MessengerPage: React.FC = ({ match }: any) => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst routerId = match.params.userId;\r\n\tconst recipient = dialogs.filter((item) => item.id == routerId)[0]\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startMessagesListening());\r\n\t\treturn () => {\r\n\t\t\tdispatch(stopMessagesListening());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container direction='row' justify='center'>\r\n\t\t\t<Grid item xs={2}>\r\n\t\t\t\t<ChatNavBar />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={10}>\r\n\t\t\t\t<Grid container >\r\n\t\t\t\t\t{routerId ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PrivateMessages routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t\t<PrivateUserInfo routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n\t\t\t\t\t\t\t\t<ChatMessages />\r\n\t\t\t\t\t\t\t\t<ChatUsersList />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default withRouter(MessengerPage);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const header = makeStyles(() => ({\r\n\twrapper: {\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tpadding: '10px 30px',\r\n\t\twidth:1240,\r\n\t\t\r\n\t\t\r\n\t},\r\n\tauthUserWrapper: {\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\tpaddingRight:50\r\n\t},\r\n\troot: {\r\n\t\tbackground: 'linear-gradient(to top, #232526, #414345)',\r\n\t\tborderRadius: '15px 15px 0 0',\r\n\t},\r\n}));","import {  Avatar, Badge, Grid, IconButton } from '@material-ui/core';\r\nimport { logout } from '../../app/reducers/auth-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuthUser } from '../../app/reducers/profile-reducer';\r\nimport LaunchOutlinedIcon from '@material-ui/icons/LaunchOutlined';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { getNewMessagesCount } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { header } from './header_styles';\r\n\r\nexport const Header = () => {\r\n\tconst classes = header();\r\n\tconst authUser = useSelector((state: RootState) => state.profile.authUser);\r\n\tconst { isAuth, id } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\tconst { newMessagesCount } = useSelector((state: RootState) => state.dialogs);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (id) {\r\n\t\t\tdispatch(getAuthUser(id));\r\n\t\t\tdispatch(getNewMessagesCount());\r\n\t\t}\r\n\t}, [dispatch, id]);\r\n\r\n\tconst navTitles = ['profile', 'users', 'messenger'];\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t\t{navTitles.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid item key={item}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/' + item} activeClassName='header'>\r\n\t\t\t\t\t\t\t\t\t<h2> {item.toLocaleUpperCase()}</h2>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{isAuth && (\r\n\t\t\t\t\t<Grid container spacing={3} className={classes.authUserWrapper}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<a href='https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#'>\r\n\t\t\t\t\t\t\t\t<h2>API</h2>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Link to={`/profile`}>\r\n\t\t\t\t\t\t\t\t<h4>{authUser?.fullName}</h4>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t{newMessagesCount ? (\r\n\t\t\t\t\t\t\t\t<Link to={`/messenger`}>\r\n\t\t\t\t\t\t\t\t\t<Badge badgeContent={newMessagesCount} color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<IconButton onClick={() => dispatch(logout())}>\r\n\t\t\t\t\t\t\t\t<LaunchOutlinedIcon color='secondary' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { LoginPage } from './pages/LoginPage/LoginPage';\r\nimport { UsersPage } from './pages/UsersPage/UsersPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { init } from './app/reducers/app-reducer';\r\nimport { useEffect } from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\r\nimport MessengerPage from './pages/MessangerPage/MessengerPage';\r\nimport { Preloader3 } from './common/preloader3';\r\nimport { Container} from '@material-ui/core';\r\nimport { Header } from './components/Header/Header';\r\nimport { RootState, useAppDispatch } from './app/store';\r\n\r\n//TODO сделать lazy load\r\n//  const Chat = React.lazy(() => import(\"./features/chat\"))\r\nfunction App() {\r\n\tconst isInit = useSelector((state:RootState) => state.app.isInit);\r\n\tconst isAuth = useSelector((state:RootState) => state.auth.isAuth);\r\n\tconst authUserId = useSelector((state:RootState) => state.auth.id);\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => dispatch(init()), [dispatch]);\r\n\treturn (\r\n\t\t<Container style={{width:1240}}>\r\n\t\t\t{!isInit ? (\r\n\t\t\t\t<Preloader3 />\r\n\t\t\t) : !isAuth ? (\r\n\t\t\t\t<LoginPage />\r\n\t\t\t) : (\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path={'/profile/' + authUserId} render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t\t<Route exact path='/profile/:userId?' render={() => <ProfilePage />} />\r\n\t\t\t\t\t\t<Route exact path='/users' render={() => <UsersPage />} />\r\n\t\t\t\t\t\t<Route exact path={'/messenger/' + authUserId} render={() => <Redirect to={'/messenger'} />} />\r\n\t\t\t\t\t\t<Route exact path='/messenger/:userId?' render={() => <MessengerPage />} />\r\n\t\t\t\t\t\t<Route exact path='*' render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: {\r\n\t\t\tmain: \"#00BFFF\",\r\n\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#B22222'\r\n\t\t}\r\n\t},\r\n});\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<HashRouter>\r\n\t\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}