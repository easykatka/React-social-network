{"version":3,"sources":["common/types/types.ts","app/api/api.ts","app/api/auth-api.ts","app/reducers/auth-reducer.ts","app/api/profile-api.ts","app/reducers/profile-reducer.ts","common/posts.js","app/api/dialogs-api.ts","app/reducers/dialogs-reducer.ts","features/header/header_styles.js","features/header/header.tsx","pages/login/login_styles.js","app/api/users-api.ts","app/reducers/users-reducer.ts","app/reducers/app-reducer.ts","app/api/chat-api.ts","app/reducers/chat-reducer.ts","app/store.ts","pages/login/login.tsx","common/preloader2.js","common/assets/img/defaultAvatar.png","common/friendButton.jsx","features/users/usersList/index.jsx","common/useDebounce.js","features/users/usersFilter/index.jsx","features/users/users.jsx","pages/profile/profileMain/profileMain_styles.js","pages/profile/profileMain/profileFriends/profileFriends_style.js","pages/profile/profileMain/profileFriends/profileFriends.tsx","common/randomArray.js","pages/profile/profileMain/profileAvatar/profileAvatar_styles.js","pages/profile/profileMain/profileAvatar/profileAvatar.tsx","pages/profile/profileMain/profileStatus/useStatus.js","pages/profile/profileMain/profileStatus/profileStatus_styles.js","pages/profile/profileMain/profileStatus/profileStatus.tsx","pages/profile/profileMain/profileMain.tsx","pages/profile/profileInfo/profileInfo_styles.js","pages/profile/profileInfo/profileInfo.tsx","pages/profile/profileInfo/profileEditForm/profileEditForm_style.js","pages/profile/profileInfo/profileEditForm/profileEditForm.tsx","common/dateHelper.js","pages/profile/profileWall/profilePost/profilePosts_styles.js","pages/profile/profileWall/profilePost/profilePosts.tsx","pages/profile/profileWall/profileWall_styles.js","pages/profile/profileWall/profileWall.tsx","pages/profile/profile_styles.js","pages/profile/Profile.tsx","pages/messenger/chatMessages/chatForm/chatForm_styles.js","pages/messenger/chatMessages/chatForm/chatForm.tsx","pages/messenger/chatMessages/chatMessages_styles.js","pages/messenger/chatMessages/chatMessages.tsx","common/assets/img/devs.jpg","pages/messenger/messengerNavBar/messengerNavBar_styles.js","pages/messenger/messengerNavBar/messengerNavBar.tsx","pages/messenger/privateMessages/privateForm/privateForm_styles .js","pages/messenger/privateMessages/privateForm/privateForm.tsx","pages/messenger/privateMessages/privateMessages_styles.js","pages/messenger/privateMessages/privateMessages.tsx","pages/messenger/privateUserInfo/privateUserInfo_styles.js","pages/messenger/privateUserInfo/privateUserInfo.tsx","pages/messenger/chatUsersList/chatUsersList_styles.js","pages/messenger/chatUsersList/chatUsersList.tsx","pages/messenger/messenger.tsx","App.jsx","serviceWorker.js","index.js"],"names":["resultCodeEnum","instance","axios","create","withCredentials","baseURL","headers","authAPI","get","then","res","data","loginUserData","post","delete","authSlice","createSlice","name","initialState","id","email","login","isAuth","captchaUrl","errorMessage","reducers","setCaptchaUrl","state","action","payload","setauthUserData","setErrorMessage","actions","getAuthUserData","dispatch","a","response","resultCode","success","profileAPI","userId","status","put","photo","formData","FormData","append","profile","profileSlice","authUser","posts","body","date","likesCount","isLiked","isLoading","isError","setUserProfile","setUserStatus","setauthUser","setNewAvatar","photos","setUserFollowStatus","followed","setPost","push","setLike","item","idx","like","checked","setIsLoading","setIsError","getUserProfile","profileData","profileStatus","followStatus","getAuthUser","dialogsAPI","messageId","dialogsSlice","dialogs","messages","dialogsFetching","messagesFething","newMessagesCount","setDialogsFetching","setMessagesFetching","setDialogs","setMessages","items","setNewMessagesCount","setDeletedMessage","filter","getNewMessagesCount","count","getMessages","header","makeStyles","theme","header__container","color","width","margin","display","alignItems","marginBottom","padding","header__profile","justifyContent","background","Header","classes","useSelector","auth","useDispatch","React","useEffect","className","Grid","container","spacing","map","to","activeClassName","toLocaleUpperCase","href","fullName","Badge","badgeContent","Avatar","alt","src","small","IconButton","onClick","style","loginStyles","login__formContainer","flexDirection","textAlign","height","borderRadius","paddingBottom","login__icon","fontSize","login__captcha","login__error","usersAPI","currentPage","pageSize","searchTerm","friend","usersSlice","users","totalUsersCount","isFetching","followingInProgress","setIsFetching","setUsers","setCurrentPage","setTotalUsersCount","toggleFollow","user","setFollowingInProgress","setPageSize","setFilter","followUser","follow","appSlice","isInit","setInit","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","message","send","chatSlice","messagesReceived","length","m","v1","index","array","statusChanged","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","store","configureStore","reducer","app","appReducer","usersReducer","chat","chatReducer","authReducer","profileReducer","dialogsReducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","Login","useFormik","initialValues","password","rememberMe","captcha","validationSchema","Yup","required","min","max","onSubmit","loginData","url","serverError","sendLogin","handleSubmit","handleChange","values","errors","touched","handleBlur","component","Typography","variant","TextField","label","onBlur","size","onChange","value","type","FormControlLabel","control","Checkbox","Button","startIcon","Preloader2","FriendButton","fullWidth","disabled","some","useStyles","users__name","users__cards","overflowY","paddingLeft","users__card","users__cardmedia","UsersList","memo","xs","Card","CardActionArea","CardMedia","image","large","defaultAvatar","title","CardContent","useDebounce","delay","useState","debouncedValue","setDebouncedValue","handler","clearTimeout","UsersFilter","debouncedSearchTerm","debouncedCurrentPage","page","totalCount","getUsers","direction","event","target","FormControl","RadioGroup","row","aria-label","Radio","TablePagination","onChangePage","newPage","rowsPerPage","onChangeRowsPerPage","parseInt","Users","position","profileMain","profileMain__container","profileMain__name","fontWeight","wordBreak","profileMain__footer","borderTop","paddingTop","profileMain__profileFriendBtn","profileMain__profilePmBtn","backgroundColor","profileFreinds","profileFreinds__friendsContainer","profileFreinds__friendName","profileFreinds__friendAvatar","profileFreinds__friendItem","profileFreinds__friendsLabel","ProfileFriends","randomUsers","arr","len","sorted","slice","sort","Math","random","randomArray","justify","profileAvatar","profileAvatar__avatar","profileAvatar__uploadBtn","StyledBadge","withStyles","badge","top","right","ProfileAvatar","routerId","accept","files","file","htmlFor","useStatus","editMode","setEditMode","userStatus","currentTarget","updateStatus","profileAvatar__status","cursor","profileAvatar__editIcon","marginLeft","profileAvatar__input","ProfileStatus","onStatusChange","deactivateMode","InputBase","autoFocus","endAdornment","ProfileMain","toUpperCase","profileInfoStyles","profileInfo__container","maxWidth","profileInfo__label","ProfileInfo","setEditForm","isContacts","contacts","Object","find","i","aboutMe","lookingForAJobDescription","lookingForAJob","keys","key","profileEditForm","profileEditForm__container","profileEditForm__leftBlock","profileEditForm__rightBlock","profileEditForm__contacts","profileEditForm__job","profileEditForm__error","profileEditForm__buttons","ProfileEditForm","putNewProfile","placeholder","rowsMax","multiline","labelPlacement","dateHelper","timeZone","ruTime","Date","getTime","currentTime","toLocaleTimeString","hour","minute","formatedDate","toLocaleDateString","currentDate","yesterdayDate","now","visibleDate","profilePosts","profilePosts__container","profilePosts__content","paddingRight","profilePosts__item","marginTop","profilePosts__date","profilePosts__body","profilePosts__avatar","marginRight","ProfilePosts","icon","FavoriteBorder","checkedIcon","Favorite","profileWall","profileWall__container","profileWall__content","profileWall__input","profileWall__inputWrapper","ProfileWall","toJSON","resetForm","profileStyles","profileStyles__container","profileStyles__rightblock","Alert","props","elevation","withRouter","match","authUserId","params","profileUserId","editForm","handleClose","Snackbar","open","autoHideDuration","onClose","severity","chatForm","chatForm__container","chatForm__input","ChatForm","sendMessage","chatMessages","chatMessage__container","chatMessage__senderName","chatMessage__body","chatMessage__messagesContainer","chatMessage__item","ChatMessages","messagesEndRef","useRef","current","scrollIntoView","userName","ref","messengerNavBar","chatNavBar__container","chatNavBar__avatar","chatNavBar__pmContainer","chatNavBar__chip","NavBadge","ChatNavBar","devs","Chip","avatar","clickable","privateForm","PrivateForm","privateMessages","privateMessages__container","privateMessages__messagesList","privateMessages__messageBody","privateMessages__doneIcon","privateMessages__doneAllIcon","privateMessages__addedAt","privateMessages__senderName","privateMessages__messageContent","opacity","privateMessages__deleteIcon","privateMessages__messageTitle","privateMessages__avatar","PrivateMessages","recipient","senderId","senderName","viewed","addedAt","privateUserInfo","privateUserInfo__container","privateUserInfo__avatar","PrivateUserInfo","lastUserActivityDate","chatUsersList","chatList__container","chatList__item","chatList__avatar","chatList__usersContainer","boxShadow","palette","paper","left","ChatUsersList","temp","usersList","overlap","anchorOrigin","vertical","horizontal","app__container","app__wrapper","App","exact","path","render","Boolean","window","location","hostname","createMuiTheme","primary","main","ReactDOM","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc937765.chunk.js","sourcesContent":["export enum resultCodeEnum {\r\n\tsuccess = 0,\r\n\terror = 1,\r\n\tcaptcha = 10\r\n}\r\n\r\nexport type loginUserData = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n\tcaptcha: string\r\n}\r\n\r\nexport type profileDataType = {\r\n\tuserId: number\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tfullName: string | null\r\n\tfollowed: boolean\r\n\tphotos: photosType\r\n\tcontacts: {\r\n\t\t[facebook: string]: string | null\r\n\t\tinstagram: string | null\r\n\t\tvk: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t\ttwitter: string | null\r\n\t\twebsite: string | null\r\n\t\tyoutube: string | null\r\n\t}\r\n}\r\n\r\n\r\nexport type responseResultObject = {\r\n\tdata: {}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\nexport type photosType = {\r\n\tlarge: string\r\n\tsmall: string\r\n}\r\nexport type usersSearchType = {\r\n\tcurrentPage: number,\r\n\tpageSize: number,\r\n\tsearchTerm: string,\r\n\tfriend: string,\r\n}\r\nexport type allUsersItemType = {\r\n\tfollowed: boolean\r\n\tid: number\r\n\tname: string\r\n\tphotos: photosType\r\n\tstatus: null | string\r\n\tuniqueUrlName: null | string\r\n}\r\nexport type dialogsArrayType = {\r\n\thasNewMessages: boolean\r\n\tid: number\r\n\tlastDialogActivityDate: string\r\n\tlastUserActivityDate: string\r\n\tnewMessagesCount: number\r\n\tphotos: photosType\r\n\tuserName: string\r\n}\r\n\r\nexport type messagesArrayType = {\r\n\taddedAt: string\r\n\tbody: string\r\n\tdeletedByRecipient?: boolean\r\n\tdeletedBySender?: boolean\r\n\tdistributionId?: number | null\r\n\tid: string\r\n\tisSpam?: boolean\r\n\trecipientId: number\r\n\trecipientName?: string\r\n\tsenderId: number\r\n\tsenderName: string\r\n\ttranslatedBody: null\r\n\tviewed?: boolean\r\n}\r\nexport type postType = {\r\n\tuserId: number | null\r\n\tdate: string\r\n\tbody: string\r\n\tlikesCount: number\r\n\tisLiked: boolean\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true, //? withCredentials() makes your browser include cookies and authentication headers in your XHR request.\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: { \"API-KEY\": \"ca0951c1-2a9d-481e-a273-3d5f60141d92\" },\r\n});\r\n","import { loginUserData, resultCodeEnum } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\t//апи\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get<responseIsAuthUser>(`auth/me`).then((res) => res.data);\r\n\t},\r\n\tlogin(loginUserData: loginUserData) {\r\n\t\treturn instance.post<responseLoginUser>('/auth/login', loginUserData).then((res) => res.data);\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete<responseLogoutUser>(`auth/login`).then(res => res.data);\r\n\t},\r\n\tgetCaptchaUrl() {\r\n\t\treturn instance.get<responseCaptchaUrl>(`security/get-captcha-url`).then(res => res.data)\r\n\t},\r\n};\r\n\r\n\t//типы\r\ntype responseIsAuthUser = {\r\n\tdata: { id: number, email: string, login: string }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n\tfieldsErrors:Array<string>\r\n}\r\ntype responseLoginUser = {\r\n\tdata: { userId: number }\r\n\tresultCode: resultCodeEnum\r\n\tmessages: Array<string>\r\n}\r\ntype responseLogoutUser = {\r\n\tresultCode: resultCodeEnum\r\n}\r\ntype responseCaptchaUrl = {\r\n\turl: string\r\n}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { authAPI } from '../api/auth-api'\r\nimport { loginUserData, resultCodeEnum } from '../../common/types/types'\r\nimport { AppDispatch } from '../store'\r\n\r\n//типы\r\nconst initialState = {\r\n\tid: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false ,\r\n\tcaptchaUrl: null as string | null,\r\n\terrorMessage: null as string | null\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetCaptchaUrl: (state, action) => { state.captchaUrl = action.payload },\r\n\t\tsetauthUserData: (state, action) => {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t},\r\n\t\tsetErrorMessage: (state, action) => { state.errorMessage = action.payload },\r\n\t},\r\n})\r\n//actions\r\nexport const { setCaptchaUrl, setauthUserData, setErrorMessage } = authSlice.actions\r\n//thunks\r\nexport const getCaptcha = () => async (dispatch: AppDispatch) => {\r\n\tconst { url } = await authAPI.getCaptchaUrl()\r\n\tdispatch(setCaptchaUrl(url))\r\n}\r\nexport const logout = () => async (dispatch: AppDispatch) => {\t\r\n\tconst response = await authAPI.logout()\r\n\tif (response.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setauthUserData({ id: null, email: null, login: null, isAuth: false }))\r\n\t}\r\n}\r\nexport const sendLogin = (loginUserData: loginUserData) => async (dispatch: AppDispatch) => {\r\n\tconst loginData = await authAPI.login(loginUserData)\r\n\tif (loginData.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tif (loginData.resultCode === resultCodeEnum.captcha) {\r\n\t\t\tdispatch(getCaptcha())\r\n\t\t}\r\n\t\tconst serverError = loginData.messages.length > 0 ? loginData.messages[0] : 'Some Error'\r\n\t\tdispatch(setErrorMessage(serverError))\r\n\t}\r\n}\r\nexport const getAuthUserData = () => async (dispatch: AppDispatch) => {\r\n\tconst response = await authAPI.me()\r\n\tif (response.resultCode === resultCodeEnum.success) { \r\n\t\tdispatch(setauthUserData({...response.data,isAuth:true})\r\n\t\t)\r\n\t}\r\n}\r\nexport default authSlice.reducer\r\n","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, photosType, profileDataType } from \"../../common/types/types\";\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: number | null) {\r\n\t\treturn instance.get<responseGetUserProfile>(`profile/` + userId).then((res) => res.data);\r\n\t},\r\n\tgetStatus(userId: number | null) {\r\n\t\treturn instance.get<string>(`profile/status/` + userId).then((res) => res.data); //запрос статуса отдельно с сервера\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance\r\n\t\t\t.put<responseResultObject>(`profile/status/`, { status: status })\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tupdateAvatar(photo: File) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", photo);\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile/photo`, formData, {\r\n\t\t\theaders: { \"Content-Type\": \"multipart/form-data\" },\r\n\t\t})\r\n\t\t\t.then((res) => res.data);\r\n\t},\r\n\tgetFollowStatus(userId: number | null) {\r\n\t\treturn instance.get<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\r\n\tupdateProfile(profile: profileDataType) {\r\n\t\treturn instance.put<responseUpdatePhoto>(`profile`, profile).then((res) => res.data);\r\n\t},\r\n};\r\n\r\n//типы\r\ntype responseGetUserProfile = {\r\n\tuserId: number\r\n\taboutMe: string | null\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string | null\r\n\tfullName: string\r\n\tphotos: photosType\r\n\tcontacts: {\r\n\t\tfacebook: string | null\r\n\t\tinstagram: string | null\r\n\t\tvk: string | null\r\n\t\tgithub: string | null\r\n\t\tmainLink: string | null\r\n\t\ttwitter: string | null\r\n\t\twebsite: string | null\r\n\t\tyoutube: string | null\r\n\t}\r\n}\r\ntype responseUpdatePhoto = {\r\n\tdata: {\r\n\t\tphotos: photosType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\n","import { profileAPI } from \"../api/profile-api\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { postType, profileDataType, resultCodeEnum } from '../../common/types/types'\r\nimport { posts } from \"../../common/posts\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\nexport const profileSlice = createSlice({\r\n\tname: 'profile',\r\n\tinitialState: {\r\n\t\tauthUser: {} as profileDataType,\r\n\t\tprofile: {} as profileDataType,\r\n\t\tstatus: \"\",\r\n\t\tposts: posts as Array<postType>,\r\n\t\tisLoading: true,\r\n\t\tisError: '' as string\r\n\t},\r\n\treducers: {\r\n\t\tsetUserProfile: (state, { payload }) => { state.profile = payload },\r\n\t\tsetUserStatus: (state, { payload }) => { state.status = payload },\r\n\t\tsetauthUser: (state, { payload }) => { state.authUser = payload },\r\n\t\tsetNewAvatar: (state, { payload }) => { state.authUser.photos = state.profile.photos = payload },\r\n\t\tsetUserFollowStatus: (state, { payload }) => { state.profile = { ...state.profile, followed: payload } },\r\n\t\tsetPost: (state, { payload }) => {\r\n\t\t\tstate.posts.push(payload)\r\n\t\t},\r\n\t\tsetLike: (state, { payload }) => {\r\n\t\t\tconst item = state.posts[payload.idx]\r\n\t\t\titem.isLiked = payload.like.checked\r\n\t\t\tpayload.like.checked ? ++item.likesCount : --item.likesCount\r\n\t\t},\r\n\t\tsetIsLoading: (state, {payload}) => { state.isLoading = payload },\r\n\t\tsetIsError: (state, {payload}) => { state.isError = payload }\r\n\t}\r\n})\r\n//action\r\nexport const { setIsError, setIsLoading, setLike, setPost, setUserFollowStatus, setUserProfile, setUserStatus, setauthUser, setNewAvatar } = profileSlice.actions;\r\n//thunk\r\nexport const getUserProfile = (id: number) => async (dispatch: AppDispatch) => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tconst profileData = await profileAPI.getProfile(id)\r\n\t\tconst profileStatus = await profileAPI.getStatus(id)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(id)\r\n\t\tdispatch(setUserProfile(profileData))\r\n\t\tdispatch(setUserStatus(profileStatus))\r\n\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t}\r\n\tcatch (error) {\r\n\t\tdispatch(setIsError(error))\r\n\t}\r\n\tfinally {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\nexport const getAuthUser = (id: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.getProfile(id)\r\n\tdispatch(setauthUser(data))\r\n}\r\nexport const updateAvatar = (file: File) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateAvatar(file)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setNewAvatar(data.data.photos))\r\n\t}\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateStatus(status)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(setUserStatus(status))\r\n\t}\r\n}\r\nexport const putNewProfile = (profile: profileDataType) => async (dispatch: AppDispatch) => {\r\n\tconst data = await profileAPI.updateProfile(profile)\r\n\tif (data.resultCode === resultCodeEnum.success) {\r\n\t\tdispatch(getUserProfile(profile.userId))\r\n\t\tdispatch(getAuthUser(profile.userId))\r\n\t}\r\n}\r\nexport default profileSlice.reducer;\r\n\r\n\r\n\r\n","export const posts = [{\r\n\tuserId: null,\r\n\tbody: \"Hello world!\",\r\n\tdate: '10/10/20',\r\n\tlikesCount: 14,\r\n\tisLiked: true,\r\n},\r\n{\r\n\tuserId: 1,\r\n\tbody: \"Lorem uae odit blanditiis temporibusinus odio consequatur placeat accusamus ex\",\r\n\tdate: '8/11/20',\r\n\tlikesCount: 1,\r\n\tisLiked: false,\r\n},\r\n{\r\n\tuserId: null,\r\n\tbody: \"Lorem ipsum dolor sit amet, ct blanditiis temporibus hic ipsum eaque, totam magnam minus eum dolorum reprehenderit rem odio consequatur placeat accusamus ex\",\r\n\tdate: '10/12/20',\r\n\tlikesCount: 66,\r\n\tisLiked: false,\r\n}]","import { instance } from \"./api\";\r\nimport { resultCodeEnum, responseResultObject, messagesArrayType, dialogsArrayType } from \"../../common/types/types\";\r\n\r\nexport const dialogsAPI = {\r\n\tgetDialogs() {\r\n\t\treturn instance.get(`/dialogs`).then(res => res.data)\r\n\r\n\t},\r\n\tsendMessage(userId: number, body: string) {\r\n\t\treturn instance.post<Array<dialogsArrayType>>(`/dialogs/${userId}/messages`, { body: body }).then(res => res.data)\r\n\t},\r\n\tgetMessages(userId: number) {\r\n\t\treturn instance.get<responseSendMsg>(`/dialogs/${userId}/messages`).then(res => res.data)\r\n\t},\r\n\tdeleteMessages(messageId: number) {\r\n\t\treturn instance.delete(`/dialogs/messages/${messageId}`).then(res => res.data)\r\n\t},\r\n\tgetNewMessagesCount() {\r\n\t\treturn instance.get<responseGetMessages>(`/dialogs/messages/new/count`).then(res => res.data)\r\n\t},\r\n\tstartDialog(userId: number) {\r\n\t\treturn instance.put<responseResultObject>(`/dialogs/${userId}`).then(res => res.data)\r\n\t},\r\n\tdeleteMessage(messageId: string) {\r\n\t\treturn instance.delete<responseResultObject>(`/dialogs/messages/${messageId}\r\n\t\t`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ntype responseSendMsg = {\r\n\tdata: {\r\n\t\tmessage: messagesArrayType\r\n\t}\r\n\tfieldsErrors: Array<string>\r\n\tmessages: Array<string>\r\n\tresultCode: resultCodeEnum\r\n}\r\ntype responseGetMessages = {\r\n\terror: boolean\r\n\titems: Array<messagesArrayType>\r\n\ttotalCount: number\r\n}\r\n\r\n","import { dialogsArrayType, messagesArrayType } from '../../common/types/types'\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { dialogsAPI } from \"../api/dialogs-api\";\r\nimport { AppDispatch } from '../store';\r\n\r\n//типы\r\nconst initialState = {\r\n\tdialogs: [] as dialogsArrayType[],\r\n\tmessages: [] as messagesArrayType[] ,\r\n\tdialogsFetching: true,\r\n\tmessagesFething: true,\r\n\tnewMessagesCount: null as number | null\r\n};\r\n\r\nexport const dialogsSlice = createSlice({\r\n\tname: \"dialogs\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetDialogsFetching: (state, { payload }) => { state.dialogsFetching = payload },\r\n\t\tsetMessagesFetching: (state, { payload }) => {\r\n\t\t\tstate.messagesFething = payload\r\n\t\t},\r\n\t\tsetDialogs: (state, { payload }) => {\r\n\t\t\tstate.dialogs = payload\r\n\t\t},\r\n\t\tsetMessages: (state, { payload }) => {\r\n\t\t\tstate.messages = payload.items\r\n\t\t},\r\n\t\tsetNewMessagesCount: (state, { payload }) => {\r\n\t\t\tstate.newMessagesCount = payload\r\n\t\t},\r\n\t\tsetDeletedMessage(state, { payload }) {\r\n\t\t\tstate.messages = state.messages.filter(item => item.id !== payload)\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//actions\r\nexport const { setDeletedMessage, setNewMessagesCount, setMessagesFetching, setDialogsFetching, setDialogs, setMessages } = dialogsSlice.actions;\r\n//thunks\r\nexport const getNewMessagesCount = () => async (dispatch: AppDispatch) => {\r\n\tconst count = await dialogsAPI.getNewMessagesCount()\r\n\tdispatch(setNewMessagesCount(count))\r\n}\r\nexport const getDialogs = () => async (dispatch: AppDispatch) => {\r\n\tdispatch(setDialogsFetching(true));\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs();\r\n\tdispatch(setDialogsFetching(false));\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const getMessages = (id: number) => async (dispatch: AppDispatch) => {\r\n\tdispatch(setMessagesFetching(true));\r\n\tconst response = await dialogsAPI.getMessages(id);\r\n\tdispatch(setMessagesFetching(false));\r\n\tdispatch(setMessages(response))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const sendMessage = (userId: number, body: string) => async (dispatch: AppDispatch) => {\r\n\tawait dialogsAPI.sendMessage(userId, body)\r\n\tdispatch(getMessages(userId))\r\n\t// обновить chatnavbar\r\n\tconst data = await dialogsAPI.getDialogs()\r\n\tdispatch(setDialogs(data))\r\n}\r\nexport const deleteMessage = (messageId: string, userId: number) => async (dispatch: AppDispatch) => {\r\n\tconst data = await dialogsAPI.deleteMessage(messageId)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(getMessages(userId))\r\n\t\tdispatch(setDeletedMessage(messageId))\r\n\t}\r\n}\r\n\r\nexport default dialogsSlice.reducer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const header = makeStyles((theme) => ({\r\n\theader__container: {\r\n\t\tcolor: 'white',\r\n\t\twidth: 1200,\r\n\t\tmargin: '0 auto',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\r\n\t\tmarginBottom:10,\r\n\t\tpadding:'15px 30px'\r\n\t},\r\n\theader__profile: {\r\n\t\tjustifyContent: 'flex-end',\r\n\t\talignItems: 'center',\r\n\t\r\n\t},\r\n\theader: {\r\n\t\tbackground: 'linear-gradient(to top, #232526, #414345)',\r\n\t\t\r\n\t\t\r\n\t\r\n\t},\r\n}));","import {  Avatar, Badge, Grid, IconButton } from '@material-ui/core';\r\nimport { logout } from '../../app/reducers/auth-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAuthUser } from '../../app/reducers/profile-reducer';\r\nimport LaunchOutlinedIcon from '@material-ui/icons/LaunchOutlined';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { getNewMessagesCount } from '../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { header } from './header_styles';\r\n\r\nexport const Header = () => {\r\n\tconst classes = header();\r\n\tconst authUser = useSelector((state: RootState) => state.profile.authUser);\r\n\tconst { isAuth, id } = useSelector((state: RootState) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\tconst { newMessagesCount } = useSelector((state: RootState) => state.dialogs);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (id) {\r\n\t\t\tdispatch(getAuthUser(id));\r\n\t\t\tdispatch(getNewMessagesCount());\r\n\t\t}\r\n\t}, [dispatch, id]);\r\n\r\n\tconst navTitles = ['profile', 'users', 'messenger'];\r\n\r\n\t//* РАБОЧИЙ КОМПОНЕНТ\r\n\treturn (\r\n\t\t<div className={classes.header}>\r\n\t\t\t<div className={classes.header__container}>\r\n\t\t\t\t<Grid container spacing={6}>\r\n\t\t\t\t\t{navTitles.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Grid item key={item}>\r\n\t\t\t\t\t\t\t\t<NavLink to={'/' + item} activeClassName='header'>\r\n\t\t\t\t\t\t\t\t\t<h2> {item.toLocaleUpperCase()}</h2>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t{isAuth && (\r\n\t\t\t\t\t<Grid container spacing={3} className={classes.header__profile}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<a href='https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#'>\r\n\t\t\t\t\t\t\t\t<h2>API</h2>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Link to={`/profile`}>\r\n\t\t\t\t\t\t\t\t<h4>{authUser?.fullName}</h4>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t{newMessagesCount ? (\r\n\t\t\t\t\t\t\t\t<Link to={`/messenger`}>\r\n\t\t\t\t\t\t\t\t\t<Badge badgeContent={newMessagesCount} color='secondary'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={authUser?.photos?.small} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<IconButton onClick={() => dispatch(logout())}>\r\n\t\t\t\t\t\t\t\t<LaunchOutlinedIcon style={{ color: 'orange' }} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const loginStyles = makeStyles((theme) => ({\r\n\tlogin__formContainer: {\r\n\t\tpadding: theme.spacing(5),\r\n\t\tflexDirection: 'column',\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tbackground: '#2f3136',\r\n\t\theight: '100%',\r\n\t\twidth: 500,\r\n\t\tcolor: 'white',\r\n\t\tborderRadius:20,\r\n\t\t'&>*': { paddingBottom: theme.spacing(1) },\r\n\t},\r\n\tlogin__icon: {\r\n\t\tfontSize: 90,\r\n\t\twidth: '100%',\r\n\t\tcolor: '#61dafb',\r\n\t},\r\n\tlogin__captcha:\r\n\t{\r\n\t\tmargin: '0 auto',\r\n\t\twidth: '100px'\r\n\t},\r\n\tlogin__error: {\r\n\t\tcolor: 'red',\r\n\t}\r\n}))\r\n","import { responseResultObject ,allUsersItemType } from \"../../common/types/types\";\r\nimport { instance } from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number, pageSize: number, searchTerm: string, friend: string) {\r\n\t\treturn instance.get<responseGetUsers>(`users?page=${currentPage}&count=${pageSize}&term=${searchTerm}&friend=${friend}`)\r\n\t\t\t.then(res => res.data)\r\n\t},\r\n\tfollowAPI(userId: number) {\r\n\t\treturn instance.post<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t},\r\n\tunFollowAPI(userId: number) {\r\n\t\treturn instance.delete<responseResultObject>(`follow/${userId}`).then(res => res.data)\r\n\t}\r\n}\r\n\r\n//типы\r\ntype responseGetUsers = {\r\n\terror: boolean\r\n\titems: Array<allUsersItemType>\r\n\ttotalCount: number\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { allUsersItemType } from \"../../common/types/types\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { setUserFollowStatus } from \"./profile-reducer\";\r\n\r\nconst initialState = {\r\n\tusers: [] as Array<allUsersItemType>,\r\n\tpageSize: 100,\r\n\ttotalUsersCount: 5000,\r\n\tcurrentPage: 0,\r\n\tisFetching: true,\r\n\tfollowingInProgress: [] as Array<string>,\r\n\tfilter: {\r\n\t\tsearchTerm: \"\",\r\n\t\tfriend: 'null',\r\n\t}\r\n}\r\n\r\nexport const usersSlice = createSlice({\r\n\tname: \"users\",\r\n\tinitialState\r\n\t,\r\n\treducers: {\r\n\t\tsetIsFetching: (state, action) => { state.isFetching = action.payload; },\r\n\t\tsetUsers: (state, action) => { state.users = action.payload; },\r\n\t\tsetCurrentPage: (state, action) => { state.currentPage = action.payload; },\r\n\t\tsetTotalUsersCount: (state, action) => { state.totalUsersCount = action.payload; },\r\n\t\ttoggleFollow: (state, { payload }) => {\r\n\t\t\tstate.users = state.users.map(user => {\r\n\t\t\t\tif (user.id === payload) { return { ...user, followed: !user.followed } }\r\n\t\t\t\treturn user\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetFollowingInProgress: (state, { payload: { isFetching, userId } }) => {\r\n\t\t\tstate.followingInProgress = isFetching ? [...state.followingInProgress, userId]\r\n\t\t\t\t: state.followingInProgress.filter(id => id !== userId)\r\n\t\t},\r\n\t\tsetPageSize: (state, { payload }) => {\r\n\t\t\tstate.pageSize = payload\r\n\t\t\tstate.currentPage = 0\r\n\t\t},\r\n\t\tsetFilter: (state, { payload }) => { \r\n\t\t\tstate.currentPage = 0\r\n\t\t\tstate.filter = { ...state.filter, ...payload }\r\n\t\t},\r\n\t}\r\n});\r\n//actions\r\nexport const { setFilter,\r\n\tsetCurrentPage,\r\n\tsetPageSize,\r\n\tsetIsFetching,\r\n\tsetUsers,\r\n\tsetTotalUsersCount,\r\n\ttoggleFollow,\r\n\tsetFollowingInProgress,\r\n} = usersSlice.actions;\r\n//thunk\r\nexport const getUsers = (page:number, pageSize:number, searchTerm:string, friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tdispatch(setCurrentPage(page));\r\n\t\tconst data = await usersAPI.getUsers(page + 1, pageSize, searchTerm, friend);\r\n\t\tdispatch(setIsFetching(false));\r\n\t\tdispatch(setUsers(data.items));\r\n\t\tdispatch(setTotalUsersCount(data.totalCount));\r\n\t};\r\n};\r\nexport const getFriends = (friend:string) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setIsFetching(true));\r\n\t\tconst data = await usersAPI.getUsers(1, 100, '', friend);\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setIsFetching(false));\r\n\r\n\t}\r\n}\r\nexport const followUser = (userId:number, follow:boolean) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t\tdispatch(setFollowingInProgress({ isFetching: true, userId }))\r\n\t\tconst response = !follow ? await usersAPI.followAPI(userId) : await usersAPI.unFollowAPI(userId)\r\n\t\tconst followStatus = await profileAPI.getFollowStatus(userId)\r\n\t\tif (response.resultCode === 0) {\r\n\t\t\tdispatch(toggleFollow(userId))\r\n\t\t\tdispatch(setUserFollowStatus(followStatus))\r\n\t\t}\r\n\t\tdispatch(setFollowingInProgress({ isFetching: false, userId }))\r\n\t}\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\n\r\n\r\nexport const appSlice = createSlice({\r\n\tname: \"app\",\r\n\tinitialState: {\r\n\t\tisInit: false,\r\n\t},\r\n\treducers: {\r\n\t\tsetInit: (state) => {\r\n\t\t\tstate.isInit = true;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n//action\r\nexport const { setInit } = appSlice.actions;\r\n//thunk\r\nexport const init = () => (dispatch: AppDispatch) => {\r\n\tdispatch(getAuthUserData()).then(() => {\r\n\t\tdispatch(setInit());\r\n\t});\r\n};\r\n\r\nexport default appSlice.reducer;\r\n\r\n\r\n","const subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'","\r\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../api/chat-api'\r\nimport { v1 } from 'uuid'\r\nimport { AppDispatch } from '../store'\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\ntype ChatMessageType = ChatMessageAPIType & { id: string }\r\n\r\nexport const chatSlice = createSlice({\r\n\tname: \"chat\",\r\n\tinitialState: {\r\n\t\tmessages: [] as ChatMessageType[],\r\n\t\tstatus: 'pending' as StatusType\r\n\t},\r\n\treducers: {\r\n\t\tmessagesReceived: (state, { payload }) => { \r\n\t\t\tif (state.messages != payload.length)  {state.messages = [...state.messages, ...payload.map((m: any) => ({ ...m, id: v1() }))]\r\n\t\t\t\t.filter((m, index, array) => index >= array.length - 100)\r\n\t\t}},\r\n\t\tstatusChanged: (state, { payload }) => {\r\n\t\t\tstate.status = payload\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nexport const { messagesReceived, statusChanged } = chatSlice.actions;\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\n\r\n\r\nconst newMessageHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_newMessageHandler === null) {\r\n\t\t_newMessageHandler = (messages) => {\r\n\t\t\tdispatch(messagesReceived(messages))\r\n\t\t}\r\n\t}\r\n\treturn _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\n\r\n\r\nconst statusChangedHandlerCreator = (dispatch: AppDispatch) => {\r\n\tif (_statusChangedHandler === null) {\r\n\t\t_statusChangedHandler = (status) => {\r\n\t\t\tdispatch(statusChanged(status))\r\n\t\t}\r\n\t}\r\n\treturn _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.start()\r\n\tchatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = () => async (dispatch: AppDispatch) => {\r\n\tchatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n\tchatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\tchatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string) => async () => {\r\n\tchatAPI.sendMessage(message)\r\n}\r\n\r\n\r\nexport default chatSlice.reducer\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport chatReducer from \"./reducers/chat-reducer\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tapp: appReducer,\r\n\t\tusers: usersReducer,\r\n\t\tchat:chatReducer,\r\n\t\tauth: authReducer,\r\n\t\tprofile: profileReducer,\r\n\t\tdialogs: dialogsReducer,\r\n\t\t\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false, //!почитать \r\n    }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport default store","import { useFormik } from 'formik';\r\nimport { sendLogin } from '../../app/reducers/auth-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextField, Button, Checkbox, Grid, FormControlLabel, Typography } from '@material-ui/core/';\r\nimport VpnKeyRoundedIcon from '@material-ui/icons/VpnKeyRounded';\r\nimport * as Yup from 'yup';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { loginStyles } from './login_styles';\r\nimport { RootState } from '../../app/store';\r\nimport { loginUserData } from '../../common/types/types';\r\nimport { useAppDispatch } from './../../app/store';\r\n\r\nexport const Login:React.FC = () => {\r\n\tconst { captchaUrl, errorMessage } = useSelector((state:RootState) => state.auth);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = loginStyles();\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\trememberMe: false,\r\n\t\t\tcaptcha: '',\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\temail: Yup.string().email('Insert correct email ').required('Required'),\r\n\t\t\tpassword: Yup.string()\r\n\t\t\t\t.min(4, 'Password must be longer than 4 characters.')\r\n\t\t\t\t.max(12, 'Password must be shorter than 12 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (loginUserData:loginUserData) => { \r\n\t\t\tdispatch(sendLogin(loginUserData));\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<Grid container component='form' onSubmit={handleSubmit} className={classes.login__formContainer}>\r\n\t\t\t<ExitToAppIcon className={classes.login__icon} />\r\n\t\t\t<Typography variant='h6' className={classes.login__error}>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t</Typography>\r\n\t\t\t<TextField label='Email' onBlur={handleBlur} size='small' onChange={handleChange} id='email' name='email' value={values.email} />\r\n\t\t\t{errors.email && touched.email && <div className={classes.login__error}>{errors.email}</div>}\r\n\t\t\t<TextField\r\n\t\t\t\tlabel='Password'\r\n\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\tsize='small'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvariant='standard'\r\n\t\t\t\tid='password'\r\n\t\t\t\tname='password'\r\n\t\t\t\tvalue={values.password}\r\n\t\t\t/>\r\n\t\t\t{errors.password && touched.password && <div className={classes.login__error}>{errors.password}</div>}\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={<Checkbox checked={values.rememberMe} onChange={handleChange} name='rememberMe' color='primary' />}\r\n\t\t\t\tlabel='Remember me'\r\n\t\t\t/>\r\n\t\t\t{captchaUrl && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<img className={classes.login__captcha} src={captchaUrl} width='100px' alt='captcha' />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tlabel='Captcha'\r\n\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tid='captcha'\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tname='captcha'\r\n\t\t\t\t\t\tvalue={values.captcha}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<Button variant='contained' startIcon={<VpnKeyRoundedIcon />} size='large' type='submit' color='primary'>\r\n\t\t\t\tLog In\r\n\t\t\t</Button>\r\n\t\t\t<p>Для тестового просмотра используйте пару логин/пароль: </p>\r\n\t\t\t<p> free@samuraijs.com / free</p>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import  './preloader2.scss'\r\n\r\nexport const Preloader2 = () => {\r\n\treturn (\r\n<div className=\"container\">\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n\t<div className=\"📦\"></div>\r\n</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/defaultAvatar.832028ea.png\";","import { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { followUser } from '../app/reducers/users-reducer';\r\nimport React from 'react';\r\n\r\nexport const FriendButton = ({ id, followed }) => {\r\n\tconst followingInProgress = useSelector((state) => state.users.followingInProgress);\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{followed ? (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tdisabled={followingInProgress.some((item) => item === id)}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tdispatch(followUser(id, true));\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tUNFRIEND\r\n\t\t\t\t</Button>\r\n\t\t\t) : (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tdisabled={followingInProgress.some((item) => item === id)}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tdispatch(followUser(id, false));\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tFREIND\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Preloader2 } from '../../../common/preloader2';\r\nimport defaultAvatar from '../../../common/assets/img/defaultAvatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { FriendButton } from '../../../common/friendButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tusers__name: {\r\n\t\tcolor: 'black',\r\n\t\tfontSize: 15,\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tusers__cards: {\r\n\t\toverflowY: 'scroll',\r\n\t\twidth: '100%',\r\n\t\theight: 430,\r\n\t\tpaddingLeft: 30,\r\n\t},\r\n\tusers__card: {\r\n\t\theight: 150,\r\n\r\n\t\t'&>:hover': {\r\n\t\t\tbackground: 'linear-gradient(to right, #8e9eab, #eef2f3)',\r\n\t\t},\r\n\t},\r\n\tusers__cardmedia: {\r\n\t\theight: 90,\r\n\t},\r\n}));\r\n\r\nexport const UsersList = React.memo(({ users, isFetching }) => {\r\n\tconst classes = useStyles();\r\n\treturn isFetching ? (\r\n\t\t<Preloader2 />\r\n\t) : (\r\n\t\t<Grid container spacing={4} className={classes.users__cards}>\r\n\t\t\t{users.length === 0 && <div style={{ color: 'white', textAlign: 'center', fontSize: 50, margin: '0 auto' }}>User not found</div>}\r\n\t\t\t{users &&\r\n\t\t\t\tusers\r\n\t\t\t\t\t// .filter((u) => u.photos.small != null)\r\n\t\t\t\t\t.map((user) => (\r\n\t\t\t\t\t\t<Grid item xs={2} key={user.id}>\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<div className={classes.users__card}>\r\n\t\t\t\t\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.users__cardmedia}\r\n\t\t\t\t\t\t\t\t\t\t\t\timage={user?.photos.large || defaultAvatar}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle='user photo'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.users__name}>{user?.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<FriendButton id={user.id} followed={user.followed} />\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  // дебаунс для инпутов\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n","import { FormControl, FormControlLabel, Grid, Radio, RadioGroup, TextField } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsers, setCurrentPage, setFilter, setPageSize } from '../../../app/reducers/users-reducer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { useDebounce } from '../../../common/useDebounce';\r\n\r\n\r\nexport const UsersFilter = () => {\r\n\tconst { currentPage, pageSize, totalUsersCount, filter } = useSelector ((state) => state.users);\r\n\tconst dispatch = useDispatch();\r\n\tconst debouncedSearchTerm = useDebounce(filter.searchTerm, 1000);\r\n\tconst debouncedCurrentPage = useDebounce(currentPage,500)\r\n\t// получения списка пользователей и обновление его при изменении параметров\r\n\tuseEffect(() => {\r\n\t\tdispatch(getUsers(debouncedCurrentPage, pageSize, debouncedSearchTerm, filter.friend));\r\n\t}, [dispatch, debouncedCurrentPage, pageSize, debouncedSearchTerm, filter.friend]);\r\n\tconst handleChangePage = (event, newPage) => {\r\n\t\tdispatch(setCurrentPage(newPage));\r\n\t};\r\n\tconst handleChangeSearchTerm = (event) => {\r\n\t\tdispatch(setFilter({ searchTerm: event.target.value }));\r\n\t};\r\n\tconst handleChangeRowsPerPage = (event) => {\r\n\t\tdispatch(setPageSize(parseInt(event.target.value, 10)));\r\n\t};\r\n\tconst handleFriendFilter = (e) => {\r\n\t\tdispatch(setFilter({ friend: e.target.value }));\r\n\t};\r\n\r\n\tconst radioValues = [\r\n\t\t{ value: 'null', label: 'All' },\r\n\t\t{ value: 'true', label: 'Friends' },\r\n\t\t{ value: 'false', label: 'Without friend' },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Grid container direction='column' alignItems='center' style={{padding:10}}>\r\n\t\t\t<TextField label='Search people' onChange={handleChangeSearchTerm} id='searchTerm' name='searchTerm' value={filter.searchTerm} />\r\n\t\t\t<FormControl onChange={handleFriendFilter} component='fieldset' >\r\n\t\t\t\t<RadioGroup row aria-label='position' name='position' value={filter.friend}>\r\n\t\t\t\t\t{radioValues.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormControlLabel key={item.label}\r\n\t\t\t\t\t\t\t\tstyle={{ color: 'white' }}\r\n\t\t\t\t\t\t\t\tvalue={item.value}\r\n\t\t\t\t\t\t\t\tcontrol={<Radio size='small' color='primary' />}\r\n\t\t\t\t\t\t\t\tlabel={item.label}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<TablePagination\r\n\t\t\t\tcomponent='div'\r\n\t\t\t\tcount={totalUsersCount}\r\n\t\t\t\tpage={currentPage}\r\n\t\t\t\tonChangePage={handleChangePage}\r\n\t\t\t\trowsPerPage={pageSize}\r\n\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { UsersList } from './usersList';\r\nimport { UsersFilter } from './usersFilter';\r\nimport { useSelector } from 'react-redux';\r\nexport const Users = () => {\r\n\tconst { users, isFetching } = useSelector((state) => state.users);\r\n\treturn (\r\n\t\t<>\t<div style={{background: '#2f3136',borderRadius:15,height:600,position:'relative'}}>\r\n\t\t\t<UsersFilter />\r\n\t\t\t<UsersList users={users} isFetching={isFetching} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileMain = makeStyles((theme) => ({\r\n\t\r\n\tprofileMain__container: {\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tborderRadius: '15px 0px 0px 15px',\r\n\t\theight: 600,\r\n\t\talignItems: 'center',\r\n\t\tpadding: 15\r\n\t},\r\n\r\n\tprofileMain__name: {\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: 20,\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-all',\r\n\t},\r\n\tprofileMain__footer: {\r\n\t\tborderTop: '1px solid grey',\r\n\t\tpaddingTop: 5,\r\n\t\twidth: '100%'\r\n\t},\r\n\tprofileMain__profileFriendBtn: {\r\n\t\tmargin: 20,\r\n\t\twidth: 200\r\n\r\n\t},\r\n\tprofileMain__profilePmBtn: {\r\n\t\tmargin: 20,\r\n\t\tcolor: 'black',\r\n\t\tbackgroundColor: 'orange',\r\n\t\twidth: 200\r\n\t}\r\n\r\n}))\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileFreinds = makeStyles((theme) => ({\r\n\tprofileFreinds__friendsContainer: {\r\n\t\tmargin: '15px 0',\r\n\t\talignItems: 'flex-start'\r\n\t},\r\n\tprofileFreinds__friendName: {\r\n\t\ttextAlign: 'center',\r\n\t\twordBreak: 'break-word'\r\n\t},\r\n\tprofileFreinds__friendAvatar: {\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t},\r\n\tprofileFreinds__friendItem: {\r\n\t\tcolor: 'grey',\r\n\t\tpadding: 10,\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: '#61fbfb'\r\n\t\t},\r\n\r\n\t},\r\n\tprofileFreinds__friendsLabel: {\r\n\t\tcolor: 'grey',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 13,\r\n\t\tfontWeight: 700,\r\n\t},\r\n}));\r\n\r\n\r\n\r\n","import { Grid, Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { profileFreinds } from './profileFriends_style';\r\nimport React from 'react'\r\nimport { randomArray } from '../../../../common/randomArray';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../app/store';\r\nimport { allUsersItemType } from '../../../../common/types/types';\r\nimport { useAppDispatch } from './../../../../app/store';\r\nimport { getFriends, setFilter } from '../../../../app/reducers/users-reducer';\r\n\r\nexport const ProfileFriends: React.FC = React.memo(() => {\r\n\tconst  users  = useSelector((state: RootState) => state.users.users)\r\n\tconst randomUsers = users && randomArray(users, 6) as allUsersItemType[];\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tReact.useEffect(() => \r\n\t {dispatch(getFriends('true'))}\r\n\t, []);\r\n\r\n\r\n\tconst classes = profileFreinds();\r\n\treturn (\r\n\t\t<Grid container justify='center'>\r\n\t\t\t<p className={classes.profileFreinds__friendsLabel}> Friends: <Link onClick={() => dispatch(setFilter({friend:'true'}))} to={`/users`}>{users.length}</Link> </p>\r\n\t\t\t<Grid container className={classes.profileFreinds__friendsContainer}>\r\n\t\t\t\t{randomUsers.map((item) => (\r\n\t\t\t\t\t<Grid item xs={4} key={item.id} >\r\n\t\t\t\t\t\t<Link to={`/profile/${item.id}`}>\r\n\t\t\t\t\t\t\t<Grid container className={classes.profileFreinds__friendItem} >\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.profileFreinds__friendAvatar} src={item.photos?.large} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={classes.profileFreinds__friendName}>{item.name}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","export const randomArray = (arr , len)  => {  \r\n\tconst sorted = arr.slice().sort(() => Math.random() - 0.5);\r\n\tsorted.length = len\r\n\treturn sorted;\r\n}\r\n\r\n// перемешать и вытащить N рандомных элементов из массива\r\n//array is frozen in strict mode, you'll need to copy the array before sorting it","import { Badge, makeStyles, withStyles } from '@material-ui/core';\r\nexport const profileAvatar = makeStyles((theme) => ({\r\n\tprofileAvatar__avatar: {\r\n\t\twidth: 150,\r\n\t\theight: 150,\r\n\t},\r\n\tprofileAvatar__uploadBtn: {\r\n\t\t\"&:hover\": {\r\n\t\t\tcolor: 'orange'\r\n\t\t}\r\n\t}\r\n\t\r\n}));\r\nexport const StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 140,\r\n\t\tright: 5,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\nimport { updateAvatar } from '../../../../app/reducers/profile-reducer';\r\nimport { profileAvatar, StyledBadge } from './profileAvatar_styles';\r\nimport React from 'react';\r\nimport { profileDataType } from '../../../../common/types/types';\r\nimport { useAppDispatch } from '../../../../app/store';\r\n\r\ntype PropsType = {\r\n\tprofile: profileDataType\r\n\trouterId: number\r\n}\r\n\r\n\r\nexport const ProfileAvatar: React.FC<PropsType> = React.memo(({ profile, routerId }) => {\r\n\tconst classes = profileAvatar();\r\n\tconst dispatch = useAppDispatch();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<StyledBadge\r\n\t\t\t\t\tbadgeContent={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\tid='contained-button-file'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\tonChange={(e) => e.target.files && dispatch(updateAvatar(e.target.files[0]))}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor='contained-button-file'>\r\n\t\t\t\t\t\t\t\t<IconButton color='primary' className={classes.profileAvatar__uploadBtn} component='span'>\r\n\t\t\t\t\t\t\t\t\t<AddAPhotoOutlinedIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolor='secondary'>\r\n\t\t\t\t\t<Avatar className={classes.profileAvatar__avatar} alt='user foto' src={profile.photos?.large} />\r\n\t\t\t\t</StyledBadge>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Avatar className={classes.profileAvatar__avatar} alt='user foto' src={profile.photos?.large} />\r\n\t\t\t\t)}\r\n\t\t</>\r\n\t);\r\n});\r\n","import { updateStatus } from '../../../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport { useAppDispatch } from './../../../../app/store';\r\n\r\n\r\n\r\n\r\n\r\nexport const useStatus = () => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [userStatus, setUserStatus] = useState(null);\r\n\tconst status = useSelector((state) => state.profile.status);\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tsetUserStatus(status);\r\n\t}, [status]);\r\n\r\n\r\n\tconst deactivateMode = (action) => () => {\r\n\t\tif (!action) {\r\n\t\t\tsetUserStatus(status);\r\n\t\t\tsetEditMode(false);\r\n\t\t} else {\r\n\t\t\tsetEditMode(false);\r\n\t\t\tdispatch(updateStatus(userStatus));\r\n\t\t}\r\n\t};\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetUserStatus(e.currentTarget.value);\r\n\t};\r\n\r\n\r\n\treturn [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status]\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileStatus = makeStyles((theme) => ({\r\n\tprofileAvatar__status: {\r\n\t\ttextAlign: 'center',\r\n\t\tcursor: 'pointer',\r\n\t\tfontSize: 16,\r\n\t\t\"&:hover\": { color: \"orange\" },\r\n\t\tcolor: '#61fbfb',\r\n\t\twordBreak: 'break-word',\r\n\t\tpadding: 5\r\n\t},\r\n\tprofileAvatar__editIcon: {\r\n\t\tmarginLeft: 10,\r\n\t\tfontSize: 16\r\n\t},\r\n\tprofileAvatar__input: {\r\n\t\twidth: 220,\r\n\t\tpadding: 10\r\n\t}\r\n}))\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Grid, InputBase } from '@material-ui/core';\r\nimport { useStatus } from './useStatus';\r\nimport { profileStatus } from './profileStatus_styles';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\nexport const ProfileStatus: React.FC<PropsType> = React.memo(({ routerId }) => {\r\n\tconst [onStatusChange, deactivateMode, editMode, setEditMode, userStatus, status] = useStatus();\r\n\tconst classes = profileStatus();\r\n\treturn (\r\n\t\t<Grid container justify='space-around'>\r\n\t\t\t<Grid item>\r\n\t\t\t\t{editMode && !routerId ? (\r\n\t\t\t\t\t<Grid component='form' onSubmit={deactivateMode(true)}>\r\n\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\tclassName={classes.profileAvatar__input}\r\n\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\t\tvalue={userStatus}\r\n\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={deactivateMode(true)}>\r\n\t\t\t\t\t\t\t\t\t\t<SaveIcon fontSize='small' color='primary' />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<IconButton color='inherit' onClick={deactivateMode(false)}>\r\n\t\t\t\t\t\t\t\t\t\t<CloseIcon fontSize='small' color='secondary' />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName={classes.profileAvatar__status}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetEditMode(true);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t\t\t<span>{!routerId && <EditIcon className={classes.profileAvatar__editIcon} color='inherit' />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { profileMain } from './profileMain_styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { ProfileFriends } from './profileFriends/profileFriends';\r\nimport { ProfileAvatar } from './profileAvatar/profileAvatar';\r\nimport React from 'react';\r\nimport { ProfileStatus } from './profileStatus/profileStatus';\r\nimport { FriendButton } from '../../../common/friendButton';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../../app/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\n\r\nexport const ProfileMain: React.FC<PropsType> = ({ routerId }) => {\r\n\tconst  profile  = useSelector((state: RootState) => state.profile.profile);\r\n\t\r\n\tconst classes = profileMain();\r\n\treturn (\r\n\t\t<Grid container className={classes.profileMain__container} direction='column' justify='space-around'>\r\n\t\t\t<ProfileAvatar profile={profile} routerId={routerId} />\r\n\t\t\t<Grid item className={classes.profileMain__name}>\r\n\t\t\t\t{profile.fullName?.toUpperCase()}\r\n\t\t\t</Grid>\r\n\t\t\t<Grid>\r\n\t\t\t\t{' '}\r\n\t\t\t\t<ProfileStatus routerId={routerId} />\r\n\t\t\t</Grid>\r\n\t\t\t{!routerId ? (\r\n\t\t\t\t<Grid item className={classes.profileMain__footer}>\r\n\t\t\t\t\t<ProfileFriends />\r\n\t\t\t\t</Grid>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t{routerId && (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className={classes.profileMain__profileFriendBtn}>\r\n\t\t\t\t\t\t\t\t\t<FriendButton id={routerId} followed={profile.followed} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div >\r\n\t\t\t\t\t\t\t\t\t<Link to={`/messenger/${routerId}`}>\r\n\t\t\t\t\t\t\t\t\t\t<Button color='primary' variant='contained' className={classes.profileMain__profilePmBtn} >\r\n\t\t\t\t\t\t\t\t\t\t\tWhite a message\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileInfoStyles = makeStyles((theme) => ({\r\n\tprofileInfo__container: {\r\n\t\theight: 600,\r\n\t\tmaxWidth: 300,\r\n\t\tpadding: 2,\r\n\t\tjustifyContent: 'space-around',\r\n\t\talignItems: 'center',\r\n\t\tflexDirection: 'column',\r\n\t\tcolor: 'grey', \r\n\t\ttextAlign: 'center'\r\n\t},\r\n\tprofileInfo__label:{\r\n\t\tcolor:'orange',\r\n\t\tfontSize:16,\r\n\t\tfontWeight:700\r\n\t}\r\n}))\r\n","import React, { Dispatch } from 'react';\r\nimport { FormControlLabel, Grid, IconButton, Radio } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsSharpIcon from '@material-ui/icons/SettingsSharp';\r\nimport { RootState } from '../../../app/store';\r\nimport { profileInfoStyles } from './profileInfo_styles'\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n\tsetEditForm: Dispatch<boolean>\r\n\trouterId: number\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = React.memo(({ setEditForm, routerId }) => {\r\n\tconst  profile  = useSelector((state: RootState) => state.profile.profile);\r\n\tconst isContacts = profile.contacts && Object.values(profile.contacts).find((i) => !!i);\r\n\tconst classes = profileInfoStyles();\r\n\tconst editHandler = () => {\r\n\t\tsetEditForm(true);\r\n\t};\r\n\treturn (\r\n\t\t<Grid container className={classes.profileInfo__container}>\r\n\t\t\t{profile?.aboutMe && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<p className={classes.profileInfo__label}>About me:</p>\r\n\t\t\t\t\t<p>{profile?.aboutMe}</p>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{profile?.lookingForAJobDescription && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.profileInfo__label}> Skills: </p>\r\n\t\t\t\t\t<p>{profile?.lookingForAJobDescription}</p>\r\n\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tvalue='best'\r\n\t\t\t\t\t\tcontrol={<Radio checked={profile?.lookingForAJob} color='primary' disabled />}\r\n\t\t\t\t\t\tlabel='Looking for a job'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{isContacts && (\r\n\t\t\t\t<Grid item >\r\n\t\t\t\t\t<p className={classes.profileInfo__label}>Contacts:</p>\r\n\t\t\t\t\t{profile.contacts &&\r\n\t\t\t\t\t\tObject.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tprofile.contacts[key] && (\r\n\t\t\t\t\t\t\t\t\t<Grid key={key} item>\r\n\t\t\t\t\t\t\t\t\t\t<a href={`//${profile.contacts[key]}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t{profile.contacts[key]} </a>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t\t{!routerId && (\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<IconButton onClick={editHandler} color='secondary'>\r\n\t\t\t\t\t\t<SettingsSharpIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const profileEditForm = makeStyles((theme) => ({\r\n\tprofileEditForm__container: {\r\n\t\talignItems: 'center',\r\n\t\theight: 600,\r\n\t\twidth: '100%',\r\n\t\tdisplay:'flex',\r\n\t\tjustifyContent:'space-around',\r\n\t\tflexDirection:'column'\r\n\t},\r\n\tprofileEditForm__leftBlock:{\r\n\t\tdisplay:'flex',\r\n\t\tflexDirection:'column',\r\n\t\tcolor:'white',\r\n\t\ttextAlign:'center',\r\n\t\tjustifyContent:'space-around',\r\n\t\t\"&>*\":{margin:30}\r\n\t\t\r\n\t},\r\n\tprofileEditForm__rightBlock:{\r\n\t\tdisplay:'flex',\r\n\t\tflexDirection:'column',\r\n\t\tcolor:'white',\r\n\t\ttextAlign:'center',\r\n\t\tjustifyContent:'space-around'\r\n\t},\r\n\tprofileEditForm__contacts:{\r\n\t\tmargin:30\r\n\t},\r\n\tprofileEditForm__job:{\r\n\r\n\t\tcolor:'white',\r\n\t},\r\n\tprofileEditForm__error:{\r\n\t\tcolor:'red'\r\n\t},\r\n\tprofileEditForm__buttons:{\r\n\t\tmargin:20,\r\n\t}\r\n}));","import { Grid, TextField, Checkbox, FormControlLabel, IconButton } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { putNewProfile } from '../../../../app/reducers/profile-reducer';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { profileEditForm } from './profileEditForm_style';\r\nimport * as Yup from 'yup';\r\nimport { Dispatch } from 'react';\r\nimport { RootState } from '../../../../app/store';\r\n\r\ntype PropsType = {\r\n\tsetEditForm: Dispatch<boolean>\r\n}\r\nexport const ProfileEditForm: React.FC<PropsType> = ({ setEditForm }) => {\r\n\tconst { profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useDispatch();\r\n\tconst classes = profileEditForm();\r\n\tconst { handleSubmit, handleChange, values, errors, touched, handleBlur } = useFormik({\r\n\t\tinitialValues: profile,\r\n\t\tonSubmit: (e) => {\r\n\r\n\t\t\tdispatch(putNewProfile(e));\r\n\t\t\tsetEditForm(false);\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tfullName: Yup.string()\r\n\t\t\t\t.min(4, 'Name must be longer than 4 characters.')\r\n\t\t\t\t.max(30, 'Name must be shorter than 30 characters.')\r\n\t\t\t\t.required('Required'),\r\n\t\t\taboutMe: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t\tlookingForAJobDescription: Yup.string().max(100, 'Description must be shorter than 100 characters.').required('Required'),\r\n\t\t}),\r\n\t});\r\n\r\n\tconst contactsName = ['vk', 'facebook', 'github'];\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.profileEditForm__container}>\r\n\t\t\t<Grid container direction='row' justify='center' alignItems='center'>\r\n\t\t\t\t<div className={classes.profileEditForm__leftBlock}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> Name: </h2>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvalue={values?.fullName}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tplaceholder={'Enter your name'}\r\n\t\t\t\t\t\t\tid='fullName'\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.fullName && touched.fullName && <div className={classes.profileEditForm__error}>{errors.fullName}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> About: </h2>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\trowsMax={2}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tvalue={values?.aboutMe}\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tid='aboutMe'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.aboutMe && touched.aboutMe && <div className={classes.profileEditForm__error}>{errors.aboutMe}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2> Skills: </h2>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\trowsMax={2}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={values?.lookingForAJobDescription}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tid='lookingForAJobDescription'\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{errors.lookingForAJobDescription && touched.lookingForAJobDescription && (\r\n\t\t\t\t\t\t\t<div className={classes.profileEditForm__error}>{errors.lookingForAJobDescription}</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.profileEditForm__rightBlock}>\r\n\t\t\t\t\t<h2>Contacts:</h2>\r\n\t\t\t\t\t{contactsName.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tkey={item}\r\n\t\t\t\t\t\t\t\tclassName={classes.profileEditForm__contacts}\r\n\t\t\t\t\t\t\t\tvalue={values?.contacts[item] || ''}\r\n\t\t\t\t\t\t\t\tname={'contacts.' + item}\r\n\t\t\t\t\t\t\t\tid={item}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tlabel={item}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<div>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tclassName={classes.profileEditForm__job}\r\n\t\t\t\t\tlabelPlacement='start'\r\n\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t<Checkbox size='small' checked={values?.lookingForAJob} onChange={handleChange} color='primary' id='lookingForAJob' />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel='Are you looking for a job?'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.profileEditForm__buttons}>\r\n\t\t\t\t<Grid container justify='center'>\r\n\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t<AddRoundedIcon color='primary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton onClick={() => setEditForm(false)} type='submit'>\r\n\t\t\t\t\t\t<CloseRoundedIcon color='secondary' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","\r\nexport const dateHelper = (date,timeZone=10800000) => {\r\n\t// работает,но че-т хрень какая-то)\r\n\t\r\n\tconst ruTime = new Date(date).getTime()\r\n\tconst currentTime = new Date(ruTime+timeZone).toLocaleTimeString('ru', {hour: '2-digit', minute:'2-digit'})\r\n\tconst formatedDate = new Date(ruTime+timeZone).toLocaleDateString()\r\n\tconst currentDate = new Date().toLocaleDateString()\r\n\tconst yesterdayDate = new Date(Date.now() - 86400000+ timeZone).toLocaleDateString()\r\n\t\r\n\r\n\r\n\tconst visibleDate =\r\n\t\tformatedDate === currentDate ?\r\n\t\t\t'today ' + currentTime\r\n\t\t\t:\r\n\t\t\tformatedDate === yesterdayDate ?\r\n\t\t\t\t'yesterday ' + currentTime\r\n\t\t\t\t:\r\n\t\t\t\tformatedDate\r\n\r\n\treturn visibleDate\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profilePosts = makeStyles((theme) => ({\r\n\tprofilePosts__container: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 450,\r\n\t\twidth: '100%',\r\n\r\n\t},\r\n\tprofilePosts__content: {\r\n\t\tpaddingRight: 30,\r\n\t\tcolor: 'grey',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\toverflowY: 'auto',\r\n\t\twidth: '100%',\r\n\t\twordBreak:'break-word'\r\n\r\n\t},\r\n\tprofilePosts__item: {\r\n\t\twidth: '100%',\r\n\t\tdisplay: 'flex',\r\n\t\tbackgroundColor: '#202225',\r\n\t\tpadding: 10,\r\n\t\tmarginTop: 20,\r\n\t\tborderRadius: 5\r\n\r\n\t},\r\n\tprofilePosts__date: {\r\n\t\tcolor: 'orange',\r\n\t\tfontSize: 10\r\n\t},\r\n\tprofilePosts__body: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tprofilePosts__avatar: {\r\n\t\tmarginRight: 20\r\n\t}\r\n}));","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../app/store\";\r\nimport { dateHelper } from '../../../../common/dateHelper'\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\r\nimport { Avatar, Checkbox, FormControlLabel, Grid } from '@material-ui/core';\r\nimport { useAppDispatch } from '../../../../app/store';\r\nimport { setLike } from \"../../../../app/reducers/profile-reducer\";\r\nimport { profilePosts } from \"./profilePosts_styles\";\r\n\r\nexport const ProfilePosts: React.FC = () => {\r\n\tconst { authUser, posts, profile } = useSelector((state: RootState) => state.profile);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = profilePosts()\r\n\treturn (\r\n\t\t<div className={classes.profilePosts__container}>\r\n\t\t\t<div className={classes.profilePosts__content}>\r\n\t\t\t\t{posts?.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={item.date} className={classes.profilePosts__item}>\r\n\t\t\t\t\t\t\t<Avatar className={classes.profilePosts__avatar} src={item.userId ? authUser.photos?.small : profile.photos?.small} />\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p className={classes.profilePosts__date}>{dateHelper(item.date, 0)}</p>\r\n\t\t\t\t\t\t\t\t<span className={classes.profilePosts__body}>{item.body}</span>\r\n\t\t\t\t\t\t\t\t<Grid container alignItems='center'>\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => dispatch(setLike({ like: e.target, idx }))}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={item.isLiked} icon={<FavoriteBorder />} checkedIcon={<Favorite />} name='checkedH\t' />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={item.likesCount}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { makeStyles } from '@material-ui/core';\r\nexport const profileWall = makeStyles((theme) => ({\r\n\r\n\tprofileWall__container: {\r\n\t\tbackgroundColor: '#2f3136',\r\n\t\theight: 600,\r\n\t\tpadding: 30,\r\n\t\tborderRadius:'0px 15px 15px 0'\r\n\t},\r\n\tprofileWall__content: {\r\n\t\tbackgroundColor: '#202225',\r\n\t\tmarginBottom: 20,\r\n\t\tcolor: 'white',\r\n\t\tpadding: 10,\r\n\t\twidth: '95%',\r\n\t\tborderRadius: 8,\r\n\t\twordBreak:'break-word'\r\n\t},\r\n\tprofileWall__input: {\r\n\t\twidth: '90%',\r\n\t\tmarginLeft: 20\r\n\t},\r\n\tprofileWall__inputWrapper:{\r\n\t\tmarginLeft: 20\r\n\t}\r\n}))","import { Avatar, Grid, IconButton, InputBase } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport { RootState } from '../../../app/store';\r\nimport { useAppDispatch } from '../../../app/store';\r\nimport { setPost } from '../../../app/reducers/profile-reducer';\r\nimport { ProfilePosts } from './profilePost/profilePosts';\r\nimport { profileWall } from './profileWall_styles';\r\nimport React from 'react'\r\n\r\n\r\n\r\nexport const ProfileWall: React.FC = React.memo(() => {\r\n\tconst authUser = useSelector((state: RootState) => state.profile.authUser);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = profileWall()\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tbody: '',\r\n\t\t},\r\n\t\tonSubmit: ({ body }) => {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetPost({\r\n\t\t\t\t\tuserId: authUser.userId,\r\n\t\t\t\t\tbody: body,\r\n\t\t\t\t\tdate: new Date().toJSON(),\r\n\t\t\t\t\tlikesCount: 0,\r\n\t\t\t\t\tisLiked: false,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid className={classes.profileWall__container}>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection='row'\r\n\t\t\t\talignItems='center'\r\n\t\t\t\tclassName={classes.profileWall__content}>\r\n\t\t\t\t<Avatar src={authUser.photos?.small} />\r\n\t\t\t\t<Grid item xs component='form' className={classes.profileWall__inputWrapper} onSubmit={handleSubmit}>\r\n\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\tplaceholder='Write something'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\tname='body'\r\n\t\t\t\t\t\tclassName={classes.profileWall__input}\r\n\t\t\t\t\t\tvalue={values.body}\r\n\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t<IconButton type='submit'>\r\n\t\t\t\t\t\t\t\t<SendRoundedIcon color='inherit' fontSize='small' />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<ProfilePosts />\r\n\t\t</Grid>\r\n\t);\r\n});\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const profileStyles = makeStyles((theme) => ({\r\n\tprofileStyles__container: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tborderRadius: 15,\r\n\t\tposition: 'relative',\r\n\t\twidth: '100%',\r\n\t\theight: 600,\r\n\t\tjustifyContent: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\t\r\n\t},\r\n\tprofileStyles__rightblock: {\r\n\t\theight: 600\r\n\t}\r\n}));","import { useSelector } from 'react-redux';\r\nimport { getUserProfile, setIsError } from '../../app/reducers/profile-reducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Preloader2 } from '../../common/preloader2';\r\nimport { ProfileMain } from './profileMain/profileMain';\r\nimport { ProfileInfo } from './profileInfo/profileInfo';\r\nimport { ProfileEditForm } from './profileInfo/profileEditForm/profileEditForm';\r\nimport { ProfileWall } from './profileWall/profileWall';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from '../../app/store';\r\nimport { profileStyles } from './profile_styles'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Profile: React.FC = ({ match }: any) => {\r\n\t//TODO обработать ошибки сервера\r\n\tconst authUserId = useSelector((state: RootState) => state.auth.id);\r\n\tconst routerId = match.params.userId;\r\n\tconst profileUserId = routerId || authUserId;\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [editForm, setEditForm] = useState(false);\r\n\tconst classes = profileStyles();\r\n\tconst isLoading = useSelector((state: RootState) => state.profile.isLoading);\r\n\tconst isError = useSelector((state: RootState) => state.profile.isError);\r\n\t\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (profileUserId) dispatch(getUserProfile(profileUserId)) \r\n\t\t}, [dispatch, profileUserId]);\r\n\r\n\tconst handleClose = () => {\r\n\t\tdispatch(setIsError('')) \r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.profileStyles__container}>\r\n\t\t\t<Snackbar open={!!isError} autoHideDuration={5000} onClose={handleClose} >\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tFetch error\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t\t{isLoading ? (<Preloader2 />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<ProfileMain routerId={routerId} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={8} className={classes.profileStyles__rightblock}>\r\n\t\t\t\t\t\t{editForm ? (\r\n\t\t\t\t\t\t\t<ProfileEditForm setEditForm={setEditForm} />) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProfileInfo routerId={routerId} setEditForm={setEditForm} />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProfileWall />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default withRouter(Profile);\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatForm = makeStyles((theme) => ({\r\n\tchatForm__container: {\r\n\t\tbackgroundColor: '#40444b',\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 20,\r\n\t\tborderRadius: 7,\r\n\t\twidth:'100%'\r\n\t},\r\n\tchatForm__input: {\r\n\t\tcolor: 'white',\r\n\t\tmarginLeft: 15,\r\n\t\twidth: '100%',\r\n\t\tpadding:8,\r\n\t\tpaddingRight:40\r\n\t},\r\n}))","import { Grid, InputBase } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../../../app/store';\r\nimport { chatForm } from './chatForm_styles';\r\nimport { useAppDispatch } from './../../../../app/store';\r\n\r\n\r\nexport const ChatForm: React.FC = () => {\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch()\r\n\tconst classes = chatForm();\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(sendMessage(message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Grid container>\r\n\t\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.chatForm__container}>\r\n\t\t\t\t<InputBase\r\n\t\t\t\t\tclassName={classes.chatForm__input}\r\n\t\t\t\t\tdisabled={status !== 'ready'}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\tplaceholder='write a message'\r\n\t\t\t\t\tname='message'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={values.message}\r\n\t\t\t\t\tid='message__input'\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatMessages = makeStyles((theme) => ({\r\n\tchatMessage__container: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\r\n\t},\r\n\tchatMessage__senderName: {\r\n\t\tcolor: 'white',\r\n\t\tfontWeight: 700,\r\n\t},\r\n\tchatMessage__body: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: \"break-word\",\r\n\t},\r\n\tchatMessage__messagesContainer: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tchatMessage__item: {\r\n\t\tpadding: '14px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t},\r\n}))","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ChatForm } from './chatForm/chatForm';\r\nimport React from 'react';\r\nimport { chatMessages } from './chatMessages_styles';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../app/store';\r\n\r\nexport const ChatMessages:React.FC = () => {\r\n\tconst messages = useSelector((state: RootState) => state.chat.messages)\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\tconst classes = chatMessages();\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => scrollToBottom(), [messages]);\r\n\r\n\r\n\treturn (\r\n\t\t<Grid item xs className={classes.chatMessage__container}>\r\n\t\t\t<Grid item>\r\n\t\t\t\t<Grid className={classes.chatMessage__messagesContainer}>\r\n\t\t\t\t\t{messages?.map((i, idx) => (\r\n\t\t\t\t\t\t<Grid className={classes.chatMessage__item} key={idx}>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Avatar alt='avatar' src={i?.photo} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item style={{ marginLeft: 10 }}>\r\n\t\t\t\t\t\t\t\t<p className={classes.chatMessage__senderName}> {i.userName}</p>\r\n\t\t\t\t\t\t\t\t<p className={classes.chatMessage__body}>{i.message} </p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<ChatForm />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/devs.b3345405.jpg\";","import { makeStyles, Badge, withStyles } from '@material-ui/core';\r\nexport const messengerNavBar = makeStyles((theme) => ({\r\n\tchatNavBar__container: {\r\n\t\tpadding: '15px',\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '15px 0px 0px 15px',\r\n\t\theight: 600,\r\n\t},\r\n\tchatNavBar__avatar: {\r\n\t\tmargin: 11,\r\n\t\t'&:hover': {},\r\n\t},\r\n\tchatNavBar__pmContainer: {\r\n\t\toverflowY: 'auto',\r\n\t\tpadding: '0 5px'\r\n\t},\r\n\tchatNavBar__chip: {\r\n\t\twidth: 160,\r\n\t\tjustifyContent: 'left',\r\n\t\tmargin: '5px 0',\r\n\t\tbackground: '#40444b',\r\n\t},\r\n}));\r\n\r\nexport const NavBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: 21,\r\n\t\tright: 15,\r\n\t},\r\n}))(Badge);\r\n","import { Avatar,Chip } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getDialogs } from '../../../app/reducers/dialogs-reducer';\r\nimport { RootState } from '../../../app/store';\r\nimport devs from '../../../common/assets/img/devs.jpg';\r\nimport { messengerNavBar ,NavBadge} from './messengerNavBar_styles';\r\nimport { useAppDispatch } from './../../../app/store';\r\n\r\nexport const ChatNavBar: React.FC = () => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst dispatch = useAppDispatch();\r\n\tuseEffect(() => {\r\n\t\tdispatch(getDialogs());\r\n\t}, []);\r\n\tconst classes = messengerNavBar();\r\n\treturn (\r\n\t\t<div className={classes.chatNavBar__container}>\r\n\t\t\t<h4>Chat rooms: </h4>\r\n\t\t\t<NavLink to={'/messenger'} activeClassName='navchat'>\r\n\t\t\t\t<Avatar src={devs} className={classes.chatNavBar__avatar} />\r\n\t\t\t</NavLink>\r\n\t\t\t<h4>PM: </h4>\r\n\t\t\t<div className={classes.chatNavBar__pmContainer}>\r\n\t\t\t\t{dialogs.map((item, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<NavLink to={`/messenger/${item.id}`} key={item.id} activeClassName='navchat'>\r\n\t\t\t\t\t\t\t<NavBadge badgeContent={item.newMessagesCount} color='secondary' >\r\n\t\t\t\t\t\t\t\t<Chip key={idx}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.chatNavBar__chip}\r\n\t\t\t\t\t\t\t\t\tavatar={<Avatar src={item?.photos?.small} />}\r\n\t\t\t\t\t\t\t\t\tlabel={item?.userName}\r\n\t\t\t\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\t\t\t></Chip>\r\n\t\t\t\t\t\t\t</NavBadge>\r\n\t\t\t\t\t\t</NavLink>\r\n\r\n\r\n\t\t\t\t\t\t// <div className={classes.chatNavBar__avatar} key={idx}>\r\n\t\t\t\t\t\t// \t<NavLink to={`/messenger/${item.id}`} key={item.id} activeClassName='navchat'>\r\n\t\t\t\t\t\t// \t\t<Badge badgeContent={item.newMessagesCount} color='secondary'>\r\n\t\t\t\t\t\t// \t\t\t<Avatar src={item?.photos?.small} />\r\n\t\t\t\t\t\t// \t\t</Badge>\r\n\t\t\t\t\t\t// \t</NavLink>\r\n\t\t\t\t\t\t// </div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateForm = makeStyles((theme) => ({\r\n\tchatForm__container: {\r\n\t\tbackgroundColor: '#40444b',\r\n\t\talignItems: 'center',\r\n\t\tmarginTop: 20,\r\n\t\tborderRadius: 7,\r\n\t\twidth:'100%'\r\n\t},\r\n\tchatForm__input: {\r\n\t\tcolor: 'white',\r\n\t\tmarginLeft: 15,\r\n\t\twidth: '100%',\r\n\t\tpadding:8,\r\n\t\tpaddingRight:40\r\n\t},\r\n\r\n}));","import { Grid, InputBase } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { sendMessage } from '../../../../app/reducers/dialogs-reducer';\r\nimport { privateForm } from './privateForm_styles ';\r\nimport { useAppDispatch } from './../../../../app/store';\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n}\r\n//* РАБОЧИЙ КОМПОНЕНТ\r\nexport const PrivateForm: React.FC<PropsType> = ({ routerId }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = privateForm();\r\n\tconst { handleSubmit, handleChange, values, resetForm } = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tmessage: '',\r\n\t\t},\r\n\t\tonSubmit: ({ message }) => {\r\n\t\t\tdispatch(sendMessage(routerId, message));\r\n\t\t\tresetForm();\r\n\t\t},\r\n\t});\r\n\treturn (\r\n\t\t<Grid component='form' onSubmit={handleSubmit} className={classes.chatForm__container}>\r\n\t\t\t<InputBase\r\n\t\t\t\tclassName={classes.chatForm__input}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tautoFocus={true}\r\n\t\t\t\tplaceholder='write a message'\r\n\t\t\t\tname='message'\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvalue={values.message}\r\n\t\t\t\tid='message'\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateMessages = makeStyles((theme) => ({\r\n\tprivateMessages__container: {\r\n\t\tbackgroundColor: '#36393f',\r\n\t\tpadding: 15,\r\n\t\tposition: 'relative',\r\n\r\n\t},\r\n\tprivateMessages__messagesList: {\r\n\t\toverflowY: 'auto',\r\n\t\theight: 500,\r\n\t\tpadding: 8\r\n\t},\r\n\tprivateMessages__messageBody: {\r\n\t\tcolor: '#dcddde',\r\n\t\twordBreak: 'break-word',\r\n\t},\r\n\tprivateMessages__doneIcon: {\r\n\t\tcolor: 'orange',\r\n\t\tfontSize: 12,\r\n\t},\r\n\tprivateMessages__doneAllIcon: {\r\n\t\tcolor: 'green',\r\n\t\tfontSize: 12,\r\n\r\n\t},\r\n\tprivateMessages__addedAt: {\r\n\t\tfontSize: 10,\r\n\t\tcolor: 'grey',\r\n\t},\r\n\tprivateMessages__senderName: {\r\n\t\tcolor: '#fff',\r\n\t\tfontWeight: 700,\r\n\t\tmarginRight: 10\r\n\r\n\t},\r\n\tprivateMessages__messageContent: {\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '9px 0',\r\n\t\tborderTop: '1px solid #40444b',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": {\r\n\t\t\t\t\"&>*\": {\r\n\t\t\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tprivateMessages__deleteIcon: {\r\n\t\tcursor: 'pointer',\r\n\t\topacity: 0,\r\n\t\tfontSize: 15,\r\n\t\tmarginLeft: 5\r\n\r\n\t},\r\n\tprivateMessages__messageTitle: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\t\"&:hover\": {\r\n\t\t\t\"&>*\": { opacity: 1 }\r\n\t\t}\r\n\r\n\t},\r\n\tprivateMessages__avatar: {\r\n\t\tmarginRight: 15\r\n\t}\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useRef, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { PrivateForm } from './privateForm/privateForm';\r\nimport DoneRoundedIcon from '@material-ui/icons/DoneRounded';\r\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\r\nimport { deleteMessage, getMessages } from '../../../app/reducers/dialogs-reducer';\r\nimport { dateHelper } from '../../../common/dateHelper';\r\nimport { Preloader2 } from '../../../common/preloader2';\r\nimport { privateMessages } from './privateMessages_styles';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport { dialogsArrayType } from '../../../common/types/types';\r\nimport { RootState } from '../../../app/store';\r\nimport { useAppDispatch } from './../../../app/store';\r\nimport { getNewMessagesCount } from './../../../app/reducers/dialogs-reducer';\r\n\r\n\r\ntype PropsType = {\r\n\trouterId: number\r\n\trecipient: dialogsArrayType\r\n\r\n}\r\nexport const PrivateMessages: React.FC<PropsType> = ({ routerId, recipient }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst classes = privateMessages();\r\n\tconst { messagesFething, messages } = useSelector((state: RootState) => state.dialogs);\r\n\tconst { authUser } = useSelector((state: RootState) => state.profile);\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\t//скролл вниз\r\n\tconst scrollToBottom = () => {\r\n\t\tmessagesEndRef.current && messagesEndRef.current.scrollIntoView(false);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (routerId) {\r\n\t\t\tdispatch(getMessages(routerId));\r\n\r\n\t\t}\r\n\t}, [routerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getNewMessagesCount())\r\n\t\tscrollToBottom()\r\n\t}, [messages]);\r\n\r\n\treturn (\r\n\t\t<Grid item xs className={classes.privateMessages__container}>\r\n\t\t\t{messages?.length < 0 ? (\r\n\t\t\t\t<Preloader2 />\r\n\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Grid className={classes.privateMessages__messagesList}>\r\n\t\t\t\t\t\t\t{messages && messages.map((item: any, idx: any) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\tclassName={classes.privateMessages__messageContent}\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteMessage(item.id, routerId))}>\r\n\t\t\t\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\t\t\t\talt='avatar'\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.privateMessages__avatar}\r\n\t\t\t\t\t\t\t\t\t\tsrc={item.senderId === authUser?.userId ? authUser?.photos?.large : recipient?.photos?.large}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Grid container >\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.privateMessages__senderName}>{item.senderName}</span>\r\n\t\t\t\t\t\t\t\t\t\t<Grid className={classes.privateMessages__messageTitle}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.senderId === authUser?.userId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(item.viewed ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneAllRoundedIcon className={classes.privateMessages__doneAllIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DoneRoundedIcon className={classes.privateMessages__doneIcon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={classes.privateMessages__addedAt}>{dateHelper(item.addedAt)}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlineOutlinedIcon className={classes.privateMessages__deleteIcon} color='secondary' />\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center' className={classes.privateMessages__messageBody}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>{item.body}</Grid>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<div ref={messagesEndRef}></div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<PrivateForm routerId={routerId} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\nexport const privateUserInfo = makeStyles((theme) => ({\r\n\tprivateUserInfo__container: {\r\n\t\r\n\t\tbackground: '#2f3136',\r\n\t\tborderRadius: '0 15px 15px 0px',\r\n\t\theight: 600,\r\n\t\tcolor: '#8e9297',\r\n\t\tposition: 'relative',\r\n\t\t\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'orange',\r\n\t\t},\r\n\t\tpadding:30\r\n\t},\r\n\tprivateUserInfo__avatar: {\r\n\t\tborderRadius: '50%',\r\n\t\twidth: 250,\r\n\t\theight: 250,\r\n\t\tpadding:30\r\n\t},\r\n\r\n}));","import { Avatar, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dateHelper } from '../../../common/dateHelper';\r\nimport { privateUserInfo } from './privateUserInfo_styles';\r\nimport { dialogsArrayType } from '../../../common/types/types';\r\n\r\ntype PropsType = {\r\n\trecipient:dialogsArrayType,\r\n\trouterId:number\r\n}\r\n\r\nexport const PrivateUserInfo:React.FC<PropsType> = ({recipient,routerId}) => {\r\n\tconst classes = privateUserInfo();\r\n\t//* РАБОЧИЙ КОМПОНЕНТ\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to={'/profile/' + routerId}>\r\n\t\t\t\t<Grid container direction='column' alignItems='center' justify='space-around' className={classes.privateUserInfo__container}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t<h2>{recipient?.userName}</h2>\r\n\t\t\t\t\t\t\t<Avatar alt='profile avatar' src={recipient?.photos.large} className={classes.privateUserInfo__avatar} />\r\n\t\t\t\t\t\t\t<Grid container direction='column' alignItems='center'>\r\n\t\t\t\t\t\t\t\t<div> Was online:</div>\r\n\t\t\t\t\t\t\t\t<div>{recipient?.lastUserActivityDate && dateHelper(recipient?.lastUserActivityDate)}</div>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t</Grid>\r\n\t\t\t</Link>\r\n\t</>\r\n\t);\r\n};\r\n","import { Badge, makeStyles, withStyles } from \"@material-ui/core\";\r\n\r\n\r\nexport const chatUsersList = makeStyles((theme) => ({\r\n\tchatList__container: {\r\n\t\tpadding: 15,\r\n\t\tbackground: '#2f3136',\r\n\t\tcolor: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '0 15px 15px 0px',\r\n\t\theight: 600,\r\n\t},\r\n\tchatList__item: {\r\n\t\tcolor: '#8e9297',\r\n\t\tmargin: 5,\r\n\t\twidth: 250,\r\n\t\tpadding: '10px 20px',\r\n\r\n\t\t'&:hover': {\r\n\t\t\tbackground: 'rgba(79,84,92,0.32)',\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderRadius: 7,\r\n\t\t\tpadding: '10px 20px',\r\n\t\t},\r\n\t},\r\n\tchatList__avatar: {\r\n\t\twidth: 30,\r\n\t\theight: 30,\r\n\t},\r\n\tchatList__usersContainer: {\r\n\t\toverflowY: 'auto',\r\n\t\tpadding:7,\r\n\t\tmargin:'16px auto'\r\n\t},\r\n}));\r\n\r\nexport const StyledBadge = withStyles((theme) => ({\r\n\tbadge: {\r\n\t\tbackgroundColor: '#44b700',\r\n\t\tboxShadow: `0 0 0 1px ${theme.palette.background.paper}`,\r\n\t\t'&::after': {\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: '50%',\r\n\t\t},\r\n\t},\r\n}))(Badge);","import { Avatar, Grid } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootState } from '../../../app/store';\r\nimport { chatUsersList, StyledBadge } from './chatUsersList_styles';\r\n\r\n\r\nexport const ChatUsersList:React.FC = () => {\r\n\tconst { messages } = useSelector((state: RootState) => state.chat);\r\n\tconst usersList = messages.filter(((temp) => (a:any) => !temp[a.userId] && (temp[a.userId] = true))(Object.create(null)));\r\n\r\n\tconst classes = chatUsersList();\r\n\treturn (\r\n\t\t<div className={classes.chatList__container}>\r\n\t\t\t<h4>Users — {usersList?.length}</h4>\r\n\t\t\t<div className={classes.chatList__usersContainer}>\r\n\t\t\t\t{usersList?.map((i, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link to={`/messenger/${i.userId || i.id}`} key={idx}>\r\n\t\t\t\t\t\t\t<Grid container alignItems='center' className={classes.chatList__item}>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<StyledBadge\r\n\t\t\t\t\t\t\t\t\t\toverlap='circle'\r\n\t\t\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tvariant='dot'>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar alt='Remy Sharp' src={i?.photo} className={classes.chatList__avatar} />\r\n\t\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<p style={{ marginLeft: 12 }}>\r\n\t\t\t\t\t\t\t\t\t{i.userName}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Grid } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { ChatMessages } from './chatMessages/chatMessages';\r\nimport { ChatNavBar } from './messengerNavBar/messengerNavBar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { PrivateMessages } from './privateMessages/privateMessages';\r\nimport { PrivateUserInfo } from './privateUserInfo/privateUserInfo';\r\nimport { ChatUsersList } from './chatUsersList/chatUsersList';\r\nimport { startMessagesListening, stopMessagesListening } from '../../app/reducers/chat-reducer';\r\nimport { RootState } from '../../app/store';\r\nimport { useAppDispatch } from './../../app/store';\r\n\r\nconst Messenger: React.FC = ({ match }: any) => {\r\n\tconst { dialogs } = useSelector((state: RootState) => state.dialogs);\r\n\tconst routerId = match.params.userId;\r\n\tconst recipient = dialogs.filter((item) => item.id == routerId)[0]\r\n\tconst { status } = useSelector((state: RootState) => state.chat);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startMessagesListening());\r\n\t\treturn () => {\r\n\t\t\tdispatch(stopMessagesListening());\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container direction='row' justify='center'>\r\n\t\t\t<Grid item xs={2}>\r\n\t\t\t\t<ChatNavBar />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={10}>\r\n\t\t\t\t<Grid container >\r\n\t\t\t\t\t{routerId ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PrivateMessages routerId={routerId} recipient={recipient} />\r\n\t\t\t\t\t\t\t<PrivateUserInfo routerId={routerId}  recipient={recipient} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n\t\t\t\t\t\t\t\t<ChatMessages />\r\n\t\t\t\t\t\t\t\t<ChatUsersList />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default withRouter(Messenger);\r\n","import React from 'react';\r\nimport { Header } from './features/header/header';\r\nimport { Login } from './pages/login/login';\r\nimport { Users } from './features/users/users';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { init } from './app/reducers/app-reducer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useEffect } from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport Profile from './pages/profile/Profile';\r\nimport Messenger from './pages/messenger/messenger';\r\nimport { Preloader2 } from './common/preloader2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tapp__container: {\r\n\t\twidth: 1200,\r\n\t\tmargin: '0 auto',\r\n\t\tpadding:\"0 30px\"\r\n\r\n\t\r\n\t},\r\n\tapp__wrapper: {\r\n\t\twidth: '100vw',\r\n\r\n\t\theight: '100vh',\r\n\t},\r\n}));\r\n//TODO сделать lazy load\r\n//  const Chat = React.lazy(() => import(\"./features/chat\"))\r\nfunction App() {\r\n\tconst isInit = useSelector((state) => state.app.isInit);\r\n\tconst isAuth = useSelector((state) => state.auth.isAuth);\r\n\tconst authUserId = useSelector((state) => state.auth.id);\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => dispatch(init()), [dispatch]);\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<div className={classes.app__wrapper}>\r\n\r\n\t\t\t<Header />\r\n\t\t\t\r\n\t\t\t\t<div className={classes.app__container}>\r\n\t\t\t\t\t{!isInit ? (\r\n\t\t\t\t\t\t<Preloader2 />\r\n\t\t\t\t\t) : !isAuth ? (\r\n\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path={'/profile/' + authUserId} render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t\t\t<Route exact path='/profile/:userId?' render={() => <Profile />} />\r\n\t\t\t\t\t\t\t<Route exact path='/users' render={() => <Users />} />\r\n\t\t\t\t\t\t\t<Route exact path={'/messenger/' + authUserId} render={() => <Redirect to={'/messenger'} />} />\r\n\t\t\t\t\t\t\t<Route exact path='/messenger/:userId?' render={() => <Messenger />} />\r\n\t\t\t\t\t\t\t<Route exact path='*' render={() => <Redirect to={'/profile'} />} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createMuiTheme ,ThemeProvider} from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t  primary: {\r\n\t\tmain: \"#61dafb\",\r\n\t  },\r\n\t},\r\n  });\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<HashRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t\t</HashRouter>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}